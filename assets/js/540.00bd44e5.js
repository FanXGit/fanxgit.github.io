(window.webpackJsonp=window.webpackJsonp||[]).push([[540],{3678:function(e,a,s){"use strict";s.r(a);var t=s(7),n=Object(t.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"springboot集成mysql-mybatis-pagehelper分页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成mysql-mybatis-pagehelper分页"}},[e._v("#")]),e._v(" SpringBoot集成MySQL - MyBatis PageHelper分页")]),e._v(" "),a("blockquote",[a("p",[e._v("前文中，我们展示了Spring Boot与MyBatis的集成，但是没有展示分页实现。本文专门介绍分页相关知识体系和基于MyBatis的物理分页PageHelper。@pdai")])]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90mysql---mybatis-pagehelper%E5%88%86%E9%A1%B5"}},[e._v("SpringBoot集成MySQL - MyBatis PageHelper分页")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86"}},[e._v("准备知识")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#mybatis%E7%9A%84%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB"}},[e._v("MyBatis的相关知识体系")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E9%80%BB%E8%BE%91%E5%88%86%E9%A1%B5%E5%92%8C%E7%89%A9%E7%90%86%E5%88%86%E9%A1%B5%E7%9A%84%E5%8C%BA%E5%88%AB"}},[e._v("逻辑分页和物理分页的区别？")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E4%B8%8D%E5%90%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E7%89%A9%E7%90%86%E5%88%86%E9%A1%B5%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84"}},[e._v("不同数据库的物理分页是如何实现的？")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#pagehelper%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%89%A9%E7%90%86%E5%88%86%E9%A1%B5%E7%9A%84%E5%89%8D%E6%8F%90mybatis%E7%9A%84%E6%8F%92%E4%BB%B6%E6%9C%BA%E5%88%B6"}},[e._v("PageHelper是如何实现物理分页的前提:MyBatis的插件机制？")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B"}},[e._v("简单示例")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E4%B8%80%E7%A7%8Drowbounds%E6%96%B9%E5%BC%8F%E7%9A%84%E8%B0%83%E7%94%A8"}},[e._v("第一种：RowBounds方式的调用")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E4%BA%8C%E7%A7%8Dmapper%E6%8E%A5%E5%8F%A3%E6%96%B9%E5%BC%8F%E7%9A%84%E8%B0%83%E7%94%A8startpage"}},[e._v("第二种：Mapper接口方式的调用startPage")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E4%B8%89%E7%A7%8Dmapper%E6%8E%A5%E5%8F%A3%E6%96%B9%E5%BC%8F%E7%9A%84%E8%B0%83%E7%94%A8offsetpage"}},[e._v("第三种：Mapper接口方式的调用offsetPage")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E5%9B%9B%E7%A7%8D%E5%8F%82%E6%95%B0%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8"}},[e._v("第四种:参数方法调用")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E4%BA%94%E7%A7%8D%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1"}},[e._v("第五种:参数对象")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%AC%AC%E5%85%AD%E7%A7%8Diselect-%E6%8E%A5%E5%8F%A3%E6%96%B9%E5%BC%8F"}},[e._v("第六种：ISelect 接口方式")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[e._v("进一步理解")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#pagehelper%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E5%88%86%E9%A1%B5%E7%9A%84"}},[e._v("PageHelper是如何实现分页的？")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8pagehelper%E6%9C%89%E4%BD%95%E6%B3%A8%E6%84%8F%E7%82%B9"}},[e._v("使用PageHelper有何注意点")])])])]),e._v(" "),a("li",[a("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[e._v("示例源码")])])])])]),e._v(" "),a("h1",{attrs:{id:"准备知识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备知识"}},[e._v("#")]),e._v(" 准备知识")]),e._v(" "),a("hr"),e._v(" "),a("blockquote",[a("p",[e._v("MyBatis的相关知识体系以及常见的数据库分页方式，MySQL物理分页的方式等。")])]),e._v(" "),a("h3",{attrs:{id:"mybatis的相关知识体系"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis的相关知识体系"}},[e._v("#")]),e._v(" MyBatis的相关知识体系")]),e._v(" "),a("p",[e._v("MyBatis技术栈演化 "),a("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-mybatis-xml.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("SpringBoot集成MySQL - MyBatis XML方式"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("MyBatis源码知识体系 "),a("a",{attrs:{href:"https://pdai.tech/md/framework/orm-mybatis/mybatis-y-arch.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MyBatis详解 - 总体框架设计"),a("OutboundLink")],1)]),e._v(" "),a("h3",{attrs:{id:"逻辑分页和物理分页的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑分页和物理分页的区别"}},[e._v("#")]),e._v(" 逻辑分页和物理分页的区别？")]),e._v(" "),a("blockquote",[a("p",[e._v("为什么会出现PageHelper这类框架？")])]),e._v(" "),a("p",[e._v("这便要从逻辑分页和物理分页开始说起：")]),e._v(" "),a("ul",[a("li",[a("p",[a("strong",[e._v("逻辑分页")]),e._v("：从数据库将所有记录查询出来，存储到内存中，展示当前页，然后数据再直接从内存中获取（前台分页）")])]),e._v(" "),a("li",[a("p",[a("strong",[e._v("物理分页")]),e._v("：只从数据库中查询当前页的数据（后台分页）")])])]),e._v(" "),a("p",[e._v("由于MyBatis默认实现中采用的是逻辑分页，所以才诞生了PageHelper一类的物理分页框架。hibernate不要是因为hibernate采用的就是物理分页。")]),e._v(" "),a("h3",{attrs:{id:"不同数据库的物理分页是如何实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同数据库的物理分页是如何实现的"}},[e._v("#")]),e._v(" 不同数据库的物理分页是如何实现的？")]),e._v(" "),a("blockquote",[a("p",[e._v("那物理分页通常是如何实现的呢？")])]),e._v(" "),a("p",[e._v("不同的数据库有不同的实现方式：（简单而言：mysql 使用limit ，SQLServer 使用top ，Oracle使用rowNum）")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("MySQL 使用LIMIT")])])]),e._v(" "),a("p",[e._v("例如：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT username, password \nFROM tb_user \nWHERE id = 1 \nLIMIT 100,10\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("ul",[a("li",[a("strong",[e._v("SQLServer 2012 使用top")])])]),e._v(" "),a("p",[e._v("SQL SERVER 2012 支持了OFFSET + TOP方式提高了性能")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT top(50) LastName, FirstName, EmailAddress\nFROM Employee\nORDER BY LastName, FirstName, EmailAddress\nOFFSET 14000 ROWS\nFETCH NEXT 50 ROWS ONLY;\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("ul",[a("li",[e._v("ORACLE")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT *  \n  FROM (SELECT AA.*, ROWNUM RN  \n          FROM (SELECT * FROM USERS ORDER BY ID DESC) AA  \n         WHERE ROWNUM <= 10 )  \n WHERE RN > 0 \n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("（这里只是给你简单介绍，感兴趣的可以去查找更多的资料）")]),e._v(" "),a("h3",{attrs:{id:"pagehelper是如何实现物理分页的前提-mybatis的插件机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pagehelper是如何实现物理分页的前提-mybatis的插件机制"}},[e._v("#")]),e._v(" PageHelper是如何实现物理分页的前提:MyBatis的插件机制？")]),e._v(" "),a("blockquote",[a("p",[e._v("这就要谈到MyBatis的插件机制")])]),e._v(" "),a("p",[e._v("具体请参考这两篇文章")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://pdai.tech/md/framework/orm-mybatis/mybatis-y-plugin.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MyBatis详解 - 插件机制"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[e._v("MyBatis提供了一种插件(plugin)的功能，虽然叫做插件，但其实这是拦截器功能。那么拦截器拦截MyBatis中的哪些内容呢？")])])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/framework/orm-mybatis/mybatis-y-plugin-page.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("MyBatis详解 - 插件之分页机制"),a("OutboundLink")],1),e._v(" "),a("ul",[a("li",[e._v("Mybatis的分页功能很弱，它是基于内存的分页（查出所有记录再按偏移量和limit取结果），在大数据量的情况下这样的分页基本上是没有用的。本文基于插件，通过拦截StatementHandler重写sql语句，实现数据库的物理分页")])])])]),e._v(" "),a("h1",{attrs:{id:"简单示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单示例"}},[e._v("#")]),e._v(" 简单示例")]),e._v(" "),a("hr"),e._v(" "),a("blockquote",[a("p",[e._v("PageHelper 有多种用法，这里主要介绍官网提供的几种常见用法。具体请参考"),a("a",{attrs:{href:"https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("官网的介绍 在新窗口打开"),a("OutboundLink")],1)])]),e._v(" "),a("h3",{attrs:{id:"第一种-rowbounds方式的调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一种-rowbounds方式的调用"}},[e._v("#")]),e._v(" 第一种：RowBounds方式的调用")]),e._v(" "),a("p",[e._v("第一种，RowBounds方式的调用")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('\nList<User> list = sqlSession.selectList("x.y.selectIf", null, new RowBounds(0, 10));\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"第二种-mapper接口方式的调用startpage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二种-mapper接口方式的调用startpage"}},[e._v("#")]),e._v(" 第二种：Mapper接口方式的调用startPage")]),e._v(" "),a("p",[e._v("第二种，Mapper接口方式的调用，推荐这种使用方式。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("PageHelper.startPage(1, 10);\nList<User> list = userMapper.selectIf(1);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"第三种-mapper接口方式的调用offsetpage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三种-mapper接口方式的调用offsetpage"}},[e._v("#")]),e._v(" 第三种：Mapper接口方式的调用offsetPage")]),e._v(" "),a("p",[e._v("第三种，Mapper接口方式的调用，推荐这种使用方式。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("PageHelper.offsetPage(1, 10);\nList<User> list = userMapper.selectIf(1);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"第四种-参数方法调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四种-参数方法调用"}},[e._v("#")]),e._v(" 第四种:参数方法调用")]),e._v(" "),a("p",[e._v("第四种:参数方法调用")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('//存在以下 Mapper 接口方法，你不需要在 xml 处理后两个参数\npublic interface CountryMapper {\n    List<User> selectByPageNumSize(\n            @Param("user") User user,\n            @Param("pageNum") int pageNum, \n            @Param("pageSize") int pageSize);\n}\n//配置supportMethodsArguments=true\n//在代码中直接调用：\nList<User> list = userMapper.selectByPageNumSize(user, 1, 10);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br")])]),a("h3",{attrs:{id:"第五种-参数对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五种-参数对象"}},[e._v("#")]),e._v(" 第五种:参数对象")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("//如果 pageNum 和 pageSize 存在于 User 对象中，只要参数有值，也会被分页\n//有如下 User 对象\npublic class User {\n    //其他fields\n    //下面两个参数名和 params 配置的名字一致\n    private Integer pageNum;\n    private Integer pageSize;\n}\n//存在以下 Mapper 接口方法，你不需要在 xml 处理后两个参数\npublic interface CountryMapper {\n    List<User> selectByPageNumSize(User user);\n}\n//当 user 中的 pageNum!= null && pageSize!= null 时，会自动分页\nList<User> list = userMapper.selectByPageNumSize(user);\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("h3",{attrs:{id:"第六种-iselect-接口方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第六种-iselect-接口方式"}},[e._v("#")]),e._v(" 第六种：ISelect 接口方式")]),e._v(" "),a("p",[e._v("jdk6,7用法，创建接口")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Page<User> page = PageHelper.startPage(1, 10).doSelectPage(new ISelect() {\n    @Override\n    public void doSelect() {\n        userMapper.selectGroupBy();\n    }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("jdk8 lambda用法")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Page<User> page = PageHelper.startPage(1, 10).doSelectPage(()-> userMapper.selectGroupBy());\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("也可以直接返回PageInfo，注意doSelectPageInfo方法和doSelectPage")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(new ISelect() {\n    @Override\n    public void doSelect() {\n        userMapper.selectGroupBy();\n    }\n});\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("对应的lambda用法")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(() -> userMapper.selectGroupBy());\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("count查询，返回一个查询语句的count数")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("long total = PageHelper.count(new ISelect() {\n    @Override\n    public void doSelect() {\n        userMapper.selectLike(user);\n    }\n});\n\n对应的lambda用法\n\n```java\ntotal = PageHelper.count(()->userMapper.selectLike(user));\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br")])]),a("h1",{attrs:{id:"进一步理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[e._v("#")]),e._v(" 进一步理解")]),e._v(" "),a("hr"),e._v(" "),a("blockquote",[a("p",[e._v("我们通过如下问题进一步理解PageHelper分页。@pdai")])]),e._v(" "),a("h3",{attrs:{id:"pagehelper是如何实现分页的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pagehelper是如何实现分页的"}},[e._v("#")]),e._v(" PageHelper是如何实现分页的？")]),e._v(" "),a("blockquote",[a("p",[e._v("我们知道如何使用PageHelper后，我们发现使用"),a("code",[e._v("PageHelper.startPage(pageNum, pageSize, orderBy)")]),e._v("方法后的第一个select是具备分页能力的，那它是如何做到的呢？")])]),e._v(" "),a("p",[e._v("理解它的原理，有两个点：")]),e._v(" "),a("ol",[a("li",[e._v("第一，相对对于JDBC这种嵌入式的分页而言，PageHelper分页是独立的，能做到独立分页查询，那它"),a("strong",[e._v("必然是通过某个拦截点进行了拦截，这样它才能够进行解耦分离出分页")]),e._v("。")]),e._v(" "),a("li",[e._v("第二，我们通过"),a("code",[e._v("PageHelper.startPage(pageNum, pageSize, orderBy)")]),e._v("方法后的第一个select是具备分页能力的，那它"),a("strong",[e._v("必然缓存了分页信息，同时结合线程知识，这里必然使用的是本地栈ThreadLocal")]),e._v("，即每个线程有一个本地缓存。")])]),e._v(" "),a("p",[e._v("所以结合这两点，聪明的你就会想到它大概是如何实现的，关键就是两点（拦截，ThreadLocal), 我们看下源码：")]),e._v(" "),a("p",[e._v("简单看下拦截")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/**\n * Mybatis拦截器方法\n *\n * @param invocation 拦截器入参\n * @return 返回执行结果\n * @throws Throwable 抛出异常\n */\npublic Object intercept(Invocation invocation) throws Throwable {\n    if (autoRuntimeDialect) {\n        SqlUtil sqlUtil = getSqlUtil(invocation);\n        return sqlUtil.processPage(invocation);\n    } else {\n        if (autoDialect) {\n            initSqlUtil(invocation);\n        }\n        return sqlUtil.processPage(invocation);\n    }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br")])]),a("p",[e._v("进而看下"),a("code",[e._v("sqlUtil.processPage(invocation);")]),e._v("方法")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/**\n *\n * @param invocation 拦截器入参\n * @return 返回执行结果\n * @throws Throwable 抛出异常\n */\nprivate Object _processPage(Invocation invocation) throws Throwable {\n    final Object[] args = invocation.getArgs();\n    Page page = null;\n    //支持方法参数时，会先尝试获取Page\n    if (supportMethodsArguments) {\n        // 从线程本地变量中获取Page信息，就是我们刚刚设置的\n        page = getPage(args);\n    }\n    //分页信息\n    RowBounds rowBounds = (RowBounds) args[2];\n    //支持方法参数时，如果page == null就说明没有分页条件，不需要分页查询\n    if ((supportMethodsArguments && page == null)\n            //当不支持分页参数时，判断LocalPage和RowBounds判断是否需要分页\n            || (!supportMethodsArguments && SqlUtil.getLocalPage() == null && rowBounds == RowBounds.DEFAULT)) {\n        return invocation.proceed();\n    } else {\n        //不支持分页参数时，page==null，这里需要获取\n        if (!supportMethodsArguments && page == null) {\n            page = getPage(args);\n        }\n        // 进入查看\n        return doProcessPage(invocation, page, args);\n    }\n}\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br"),a("span",{staticClass:"line-number"},[e._v("21")]),a("br"),a("span",{staticClass:"line-number"},[e._v("22")]),a("br"),a("span",{staticClass:"line-number"},[e._v("23")]),a("br"),a("span",{staticClass:"line-number"},[e._v("24")]),a("br"),a("span",{staticClass:"line-number"},[e._v("25")]),a("br"),a("span",{staticClass:"line-number"},[e._v("26")]),a("br"),a("span",{staticClass:"line-number"},[e._v("27")]),a("br"),a("span",{staticClass:"line-number"},[e._v("28")]),a("br"),a("span",{staticClass:"line-number"},[e._v("29")]),a("br"),a("span",{staticClass:"line-number"},[e._v("30")]),a("br")])]),a("p",[e._v("所以"),a("code",[e._v("startPage方法")]),e._v("和这里的"),a("code",[e._v("getPage(args);")]),e._v("这方法里应该包含了ThreadLocal中设置和获取分页参数的，让我们看下startPage方法即可：")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("public static <E> Page<E> startPage(int pageNum, int pageSize, boolean count, Boolean reasonable, Boolean pageSizeZero) {\n    Page<E> page = new Page(pageNum, pageSize, count);\n    page.setReasonable(reasonable);\n    page.setPageSizeZero(pageSizeZero);\n    Page<E> oldPage = getLocalPage();\n    if (oldPage != null && oldPage.isOrderByOnly()) {\n        page.setOrderBy(oldPage.getOrderBy());\n    }\n\n    setLocalPage(page);\n    return page;\n}\n// ...\nprotected static final ThreadLocal<Page> LOCAL_PAGE = new ThreadLocal();\n\nprotected static void setLocalPage(Page page) {\n    LOCAL_PAGE.set(page); // 看这里\n}\n\n// ...\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br")])]),a("blockquote",[a("p",[e._v("所以这里提示下想进阶的开发者，源码的阅读是伴随着思路现行的（有了思路，简单看源码），而不是直接源码。")])]),e._v(" "),a("h3",{attrs:{id:"使用pagehelper有何注意点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用pagehelper有何注意点"}},[e._v("#")]),e._v(" 使用PageHelper有何注意点")]),e._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/Important.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("看官网的说明 在新窗口打开"),a("OutboundLink")],1)])]),e._v(" "),a("ol",[a("li",[e._v("只有紧跟在"),a("code",[e._v("PageHelper.startPage")]),e._v("方法后的"),a("strong",[e._v("第一个")]),e._v("Mybatis的**查询（Select）**方法会被分页。")]),e._v(" "),a("li",[e._v("请不要配置多个分页插件：请不要在系统中配置多个分页插件(使用Spring时,"),a("code",[e._v("mybatis-config.xml")]),e._v("和"),a("code",[e._v("Spring<bean>")]),e._v("配置方式，请选择其中一种，不要同时配置多个分页插件)！")]),e._v(" "),a("li",[e._v("分页插件不支持带有"),a("code",[e._v("for update")]),e._v("语句的分页：对于带有"),a("code",[e._v("for update")]),e._v("的sql，会抛出运行时异常，对于这样的sql建议手动分页，毕竟这样的sql需要重视。")]),e._v(" "),a("li",[e._v("分页插件不支持嵌套结果映射: 由于嵌套结果方式会导致结果集被折叠，因此分页查询的结果在折叠后总数会减少，所以无法保证分页结果数量正确。")])]),e._v(" "),a("h1",{attrs:{id:"示例源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[e._v("#")]),e._v(" 示例源码")]),e._v(" "),a("hr"),e._v(" "),a("p",[e._v("（上述代码中一些实体类和配置的完整代码，请参考如下代码仓库）")]),e._v(" "),a("p",[e._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);a.default=n.exports}}]);
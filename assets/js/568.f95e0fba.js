(window.webpackJsonp=window.webpackJsonp||[]).push([[568],{3782:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"算法思想-分治算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#算法思想-分治算法"}},[s._v("#")]),s._v(" 算法思想 - 分治算法")]),s._v(" "),n("p",[s._v("===========================")]),s._v(" "),n("blockquote",[n("p",[s._v("分治算法的基本思想是将一个规模为N的问题分解为K个规模较小的子问题，这些子问题相互独立且与原问题性质相同。求出子问题的解，就可得到原问题的解。@pdai")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-core-divide-and-conquer.html#%E5%88%86%E6%B2%BB%E7%9B%B8%E5%85%B3%E9%A2%98%E7%9B%AE",target:"_blank",rel:"noopener noreferrer"}},[s._v("分治相关题目"),n("OutboundLink")],1),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-core-divide-and-conquer.html#%E7%BB%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8A%A0%E6%8B%AC%E5%8F%B7",target:"_blank",rel:"noopener noreferrer"}},[s._v("给表达式加括号"),n("OutboundLink")],1)])])])]),s._v(" "),n("h1",{attrs:{id:"分治相关题目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分治相关题目"}},[s._v("#")]),s._v(" 分治相关题目")]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"给表达式加括号"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#给表达式加括号"}},[s._v("#")]),s._v(" 给表达式加括号")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/different-ways-to-add-parentheses/description/",target:"_blank",rel:"noopener noreferrer"}},[s._v("241. Different Ways to Add Parentheses (Medium) 在新窗口打开"),n("OutboundLink")],1)]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('Input: "2-1-1".\n\n((2-1)-1) = 0\n(2-(1-1)) = 2\n\nOutput : [0, 2]\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("public List<Integer> diffWaysToCompute(String input) {\n    List<Integer> ways = new ArrayList<>();\n    for (int i = 0; i < input.length(); i++) {\n        char c = input.charAt(i);\n        if (c == '+' || c == '-' || c == '*') {\n            List<Integer> left = diffWaysToCompute(input.substring(0, i));\n            List<Integer> right = diffWaysToCompute(input.substring(i + 1));\n            for (int l : left) {\n                for (int r : right) {\n                    switch (c) {\n                        case '+':\n                            ways.add(l + r);\n                            break;\n                        case '-':\n                            ways.add(l - r);\n                            break;\n                        case '*':\n                            ways.add(l * r);\n                            break;\n                    }\n                }\n            }\n        }\n    }\n    if (ways.size() == 0) {\n        ways.add(Integer.valueOf(input));\n    }\n    return ways;\n}\n```)")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);
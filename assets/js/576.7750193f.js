(window.webpackJsonp=window.webpackJsonp||[]).push([[576],{3800:function(t,e,r){"use strict";r.r(e);var a=r(7),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"大数据处理-trie树-数据库-倒排索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#大数据处理-trie树-数据库-倒排索引"}},[t._v("#")]),t._v(" 大数据处理 - Trie树/数据库/倒排索引")]),t._v(" "),e("p",[t._v("=================================================")]),t._v(" "),e("blockquote",[e("p",[t._v("大数据处理处理思想之 Trie树/数据库/倒排索引, 本文主要梳理下思路。@pdai")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-bigdata-db-index.html#trie%E6%A0%91",target:"_blank",rel:"noopener noreferrer"}},[t._v("Trie树"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-bigdata-db-index.html#%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B4%A2%E5%BC%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("数据库索引"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-bigdata-db-index.html#%E5%80%92%E6%8E%92%E7%B4%A2%E5%BC%95-inverted-index",target:"_blank",rel:"noopener noreferrer"}},[t._v("倒排索引(Inverted index)"),e("OutboundLink")],1)])]),t._v(" "),e("h1",{attrs:{id:"trie树"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trie树"}},[t._v("#")]),t._v(" Trie树")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("Trie树的介绍和实现请参考 "),e("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-basic-tree-trie.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("树 - 前缀树(Trie)"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("适用范围")]),t._v(": 数据量大，重复多，但是数据种类小可以放入内存")]),t._v(" "),e("li",[e("code",[t._v("基本原理及要点")]),t._v(": 实现方式，节点孩子的表示方式")]),t._v(" "),e("li",[e("code",[t._v("扩展")]),t._v(": 压缩实现。")])]),t._v(" "),e("p",[e("strong",[t._v("一些适用场景")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("寻找"),e("strong",[t._v("热门查询")]),t._v(": 查询串的"),e("strong",[t._v("重复度比较高")]),t._v("，虽然总数是1千万，但如果除去重复后，不超过3百万个，每个不超过255字节。")]),t._v(" "),e("li",[t._v("有10个文件，每个文件1G，每个文件的每一行都存放的是用户的query，每个文件的"),e("strong",[t._v("query都可能重复")]),t._v("。要你按照query的频度排序。")]),t._v(" "),e("li",[t._v("1000万字符串，其中有些是相同的("),e("strong",[t._v("重复")]),t._v("),需要把重复的全部去掉，保留没有重复的字符串。请问怎么设计和实现?")]),t._v(" "),e("li",[t._v("一个文本文件，大约有一万行，每行一个词，要求统计出其中"),e("strong",[t._v("最频繁出现")]),t._v("的前10个词。其解决方法是: 用trie树统计每个词出现的次数，时间复杂度是O(n*le)(le表示单词的平准长度)，然后是找出出现最频繁的前10个词。")])]),t._v(" "),e("h1",{attrs:{id:"数据库索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据库索引"}},[t._v("#")]),t._v(" 数据库索引")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("数据库索引相关，可以参看 "),e("a",{attrs:{href:"https://pdai.tech/md/db/sql-mysql/sql-mysql-b-tree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("MySQL - 索引(B+树)"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("适用范围")]),t._v(": 大数据量的增删改查")]),t._v(" "),e("li",[e("code",[t._v("基本原理及要点")]),t._v(": 利用数据的设计实现方法，对海量数据的增删改查进行处理。")])]),t._v(" "),e("h1",{attrs:{id:"倒排索引-inverted-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#倒排索引-inverted-index"}},[t._v("#")]),t._v(" 倒排索引(Inverted index)")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("倒排索引，可以参看 ElsaticSearch底层的实现。")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("适用范围")]),t._v(": 搜索引擎，关键字查询")]),t._v(" "),e("li",[e("code",[t._v("基本原理及要点")]),t._v(": 为何叫倒排索引? 一种索引方法，被用来存储在全文搜索下某个单词在一个文档或者一组文档中的存储位置的映射。")])]),t._v(" "),e("p",[t._v("以英文为例，下面是要被索引的文本:")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('T0 = "it is what it is"\nT1 = "what is it"\nT2 = "it is a banana"\n// 我们就能得到下面的倒排索引: \n"a":      {2}\n"banana": {2}\n"is":     {0, 1, 2}\n"it":     {0, 1, 2}\n"what":   {0, 1}\n// 检索的条件"what","is"和"it"将对应集合的交集。\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("正向索引开发出来用来存储每个文档的单词的列表。正向索引的查询往往满足每个文档有序频繁的全文查询和每个单词在校验文档中的验证这样的查询。在正向索引中，文档占据了中心的位置，每个文档指向了一个它所包含的索引项的序列。也就是说文档指向了它包含的那些单词，而"),e("strong",[t._v("倒排索引则是单词指向了包含它的文档，很容易看到这个反向的关系")]),t._v("。)")])])}),[],!1,null,null,null);e.default=n.exports}}]);
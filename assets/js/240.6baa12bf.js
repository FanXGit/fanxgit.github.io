(window.webpackJsonp=window.webpackJsonp||[]).push([[240],{3375:function(s,e,n){s.exports=n.p+"assets/img/tomcat-x-lifecycle-1.de6620e7.png"},3376:function(s,e,n){s.exports=n.p+"assets/img/tomcat-x-lifecycle-2.c5a90252.png"},3377:function(s,e,n){s.exports=n.p+"assets/img/tomcat-x-lifecycle-3.8cb00883.png"},3378:function(s,e,n){s.exports=n.p+"assets/img/tomcat-x-lifecycle-5.12d77201.png"},3379:function(s,e,n){s.exports=n.p+"assets/img/tomcat-x-lifecycle-4.862d2b2c.jpeg"},4200:function(s,e,n){"use strict";n.r(e);var a=n(7),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"tomcat-组件生命周期管理-lifecycle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-组件生命周期管理-lifecycle"}},[s._v("#")]),s._v(" Tomcat - 组件生命周期管理:LifeCycle")]),s._v(" "),e("p",[s._v("===========================================================")]),s._v(" "),e("blockquote",[e("p",[s._v("上文中，我们已经知道Catalina初始化了Server（它调用了 Server 类的 init 和 start 方法来启动 Tomcat）；你会发现Server是Tomcat的配置文件server.xml的顶层元素，那这个阶段其实我们已经进入到Tomcat内部组件的详解；这时候有一个问题，这么多组件是如何管理它的生命周期的呢？@pdai")])]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#tomcat---%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AE%A1%E7%90%86lifecycle"}},[s._v("Tomcat - 组件生命周期管理:LifeCycle")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%BC%95%E5%85%A5"}},[s._v("引入")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#lifecycle%E6%8E%A5%E5%8F%A3"}},[s._v("LifeCycle接口")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E4%B8%AA%E6%A0%87%E5%87%86%E7%9A%84lifecycle%E6%9C%89%E5%93%AA%E4%BA%9B%E6%96%B9%E6%B3%95"}},[s._v("一个标准的LifeCycle有哪些方法？")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#lifecycle%E7%8A%B6%E6%80%81%E6%9C%BA%E6%9C%89%E5%93%AA%E4%BA%9B%E7%8A%B6%E6%80%81"}},[s._v("LifeCycle状态机有哪些状态？")])])])]),s._v(" "),e("li",[e("a",{attrs:{href:"#lifecyclebase---lifecycle%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0"}},[s._v("LifecycleBase - LifeCycle的基本实现")]),s._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E7%9B%91%E5%90%AC%E5%99%A8%E7%9B%B8%E5%85%B3"}},[s._v("监听器相关")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%9B%B8%E5%85%B3"}},[s._v("生命周期相关")])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E7%94%A8%E4%BA%86%E4%BB%80%E4%B9%88%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"}},[s._v("用了什么设计模式？")])])])]),s._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[s._v("参考文章")])])])])]),s._v(" "),e("h1",{attrs:{id:"引入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#引入"}},[s._v("#")]),s._v(" 引入")]),s._v(" "),e("hr"),s._v(" "),e("blockquote",[e("p",[s._v("我从以下几方面，帮助你构建基于上下文的知识体系和理解为什么要理解组件的生命周期管理（LifeCycle)。@pdai")])]),s._v(" "),e("ul",[e("li",[s._v("Server及其它组件")])]),s._v(" "),e("p",[e("img",{attrs:{src:n(3375),alt:""}})]),s._v(" "),e("ul",[e("li",[s._v("Server后续组件生命周期及初始化")])]),s._v(" "),e("p",[e("img",{attrs:{src:n(3376),alt:""}})]),s._v(" "),e("ul",[e("li",[s._v("Server的依赖结构")])]),s._v(" "),e("p",[e("img",{attrs:{src:n(3377),alt:""}})]),s._v(" "),e("h1",{attrs:{id:"lifecycle接口"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle接口"}},[s._v("#")]),s._v(" LifeCycle接口")]),s._v(" "),e("hr"),s._v(" "),e("blockquote",[e("p",[s._v("理解Lifecycle主要有两点：第一是三类接口方法；第二是状态机。@pdai")])]),s._v(" "),e("h3",{attrs:{id:"一个标准的lifecycle有哪些方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一个标准的lifecycle有哪些方法"}},[s._v("#")]),s._v(" 一个标准的LifeCycle有哪些方法？")]),s._v(" "),e("p",[s._v("分三类去看：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public interface Lifecycle {\n    /** 第1类：针对监听器 **/\n    // 添加监听器\n    public void addLifecycleListener(LifecycleListener listener);\n    // 获取所以监听器\n    public LifecycleListener[] findLifecycleListeners();\n    // 移除某个监听器\n    public void removeLifecycleListener(LifecycleListener listener);\n    \n    /** 第2类：针对控制流程 **/\n    // 初始化方法\n    public void init() throws LifecycleException;\n    // 启动方法\n    public void start() throws LifecycleException;\n    // 停止方法，和start对应\n    public void stop() throws LifecycleException;\n    // 销毁方法，和init对应\n    public void destroy() throws LifecycleException;\n    \n    /** 第3类：针对状态 **/\n    // 获取生命周期状态\n    public LifecycleState getState();\n    // 获取字符串类型的生命周期状态\n    public String getStateName();\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("h3",{attrs:{id:"lifecycle状态机有哪些状态"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lifecycle状态机有哪些状态"}},[s._v("#")]),s._v(" LifeCycle状态机有哪些状态？")]),s._v(" "),e("p",[s._v("Tomcat 给各个组件定义了一些生命周期中的状态")]),s._v(" "),e("ul",[e("li",[s._v("在枚举类 LifecycleState 里")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public enum LifecycleState {\n    NEW(false, null),\n    INITIALIZING(false, Lifecycle.BEFORE_INIT_EVENT),\n    INITIALIZED(false, Lifecycle.AFTER_INIT_EVENT),\n    STARTING_PREP(false, Lifecycle.BEFORE_START_EVENT),\n    STARTING(true, Lifecycle.START_EVENT),\n    STARTED(true, Lifecycle.AFTER_START_EVENT),\n    STOPPING_PREP(true, Lifecycle.BEFORE_STOP_EVENT),\n    STOPPING(false, Lifecycle.STOP_EVENT),\n    STOPPED(false, Lifecycle.AFTER_STOP_EVENT),\n    DESTROYING(false, Lifecycle.BEFORE_DESTROY_EVENT),\n    DESTROYED(false, Lifecycle.AFTER_DESTROY_EVENT),\n    FAILED(false, null);\n\n    private final boolean available;\n    private final String lifecycleEvent;\n\n    private LifecycleState(boolean available, String lifecycleEvent) {\n        this.available = available;\n        this.lifecycleEvent = lifecycleEvent;\n    }\n    ……\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("ul",[e("li",[s._v("它们之间的关系是怎么样的呢？")])]),s._v(" "),e("p",[s._v("在Lifecycle.java源码中有相关的注释：")]),s._v(" "),e("p",[e("img",{attrs:{src:n(3378),alt:""}})]),s._v(" "),e("p",[s._v("看不太清楚的可以看下图：")]),s._v(" "),e("p",[e("img",{attrs:{src:n(3379),alt:""}})]),s._v(" "),e("h1",{attrs:{id:"lifecyclebase-lifecycle的基本实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lifecyclebase-lifecycle的基本实现"}},[s._v("#")]),s._v(" LifecycleBase - LifeCycle的基本实现")]),s._v(" "),e("hr"),s._v(" "),e("blockquote",[e("p",[s._v("LifecycleBase是Lifecycle的基本实现。")])]),s._v(" "),e("h3",{attrs:{id:"监听器相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#监听器相关"}},[s._v("#")]),s._v(" 监听器相关")]),s._v(" "),e("p",[s._v("生命周期监听器保存在一个线程安全的"),e("strong",[s._v("CopyOnWriteArrayList")]),s._v("中。所以add和remove都是直接调用此List的相应方法。 findLifecycleListeners返回的是一个数组，为了线程安全，所以这儿会生成一个新数组。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("private final List<LifecycleListener> lifecycleListeners = new CopyOnWriteArrayList<>();\n\n@Override\npublic void addLifecycleListener(LifecycleListener listener) {\n    lifecycleListeners.add(listener);\n}\n@Override\npublic LifecycleListener[] findLifecycleListeners() {\n    return lifecycleListeners.toArray(new LifecycleListener[0]);\n}\n@Override\npublic void removeLifecycleListener(LifecycleListener listener) {\n    lifecycleListeners.remove(listener);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h3",{attrs:{id:"生命周期相关"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#生命周期相关"}},[s._v("#")]),s._v(" 生命周期相关")]),s._v(" "),e("ul",[e("li",[s._v("init")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Override\npublic final synchronized void init() throws LifecycleException {\n    // 非NEW状态，不允许调用init()方法\n    if (!state.equals(LifecycleState.NEW)) {\n        invalidTransition(Lifecycle.BEFORE_INIT_EVENT);\n    }\n\n    try {\n        // 初始化逻辑之前，先将状态变更为`INITIALIZING`\n        setStateInternal(LifecycleState.INITIALIZING, null, false);\n        // 初始化，该方法为一个abstract方法，需要组件自行实现\n        initInternal();\n        // 初始化完成之后，状态变更为`INITIALIZED`\n        setStateInternal(LifecycleState.INITIALIZED, null, false);\n    } catch (Throwable t) {\n        // 初始化的过程中，可能会有异常抛出，这时需要捕获异常，并将状态变更为`FAILED`\n        ExceptionUtils.handleThrowable(t);\n        setStateInternal(LifecycleState.FAILED, null, false);\n        throw new LifecycleException(\n                sm.getString("lifecycleBase.initFail",toString()), t);\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[s._v("我们再来看看invalidTransition方法，该方法直接抛出异常。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('private void invalidTransition(String type) throws LifecycleException {\n    String msg = sm.getString("lifecycleBase.invalidTransition", type,\n            toString(), state);\n    throw new LifecycleException(msg);\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("setStateInternal方法用于维护状态，同时在状态转换成功之后触发事件。为了状态的可见性，所以state声明为volatile类型的。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('private volatile LifecycleState state = LifecycleState.NEW;。\n\nprivate synchronized void setStateInternal(LifecycleState state,\n        Object data, boolean check) throws LifecycleException {\n    if (log.isDebugEnabled()) {\n        log.debug(sm.getString("lifecycleBase.setState", this, state));\n    }\n\n    // 是否校验状态\n    if (check) {\n        // Must have been triggered by one of the abstract methods (assume\n        // code in this class is correct)\n        // null is never a valid state\n        // state不允许为null\n        if (state == null) {\n            invalidTransition("null");\n            // Unreachable code - here to stop eclipse complaining about\n            // a possible NPE further down the method\n            return;\n        }\n\n        // Any method can transition to failed\n        // startInternal() permits STARTING_PREP to STARTING\n        // stopInternal() permits STOPPING_PREP to STOPPING and FAILED to\n        // STOPPING\n        if (!(state == LifecycleState.FAILED ||\n                (this.state == LifecycleState.STARTING_PREP &&\n                        state == LifecycleState.STARTING) ||\n                (this.state == LifecycleState.STOPPING_PREP &&\n                        state == LifecycleState.STOPPING) ||\n                (this.state == LifecycleState.FAILED &&\n                        state == LifecycleState.STOPPING))) {\n            // No other transition permitted\n            invalidTransition(state.name());\n        }\n    }\n\n    // 设置状态\n    this.state = state;\n    // 触发事件\n    String lifecycleEvent = state.getLifecycleEvent();\n    if (lifecycleEvent != null) {\n        fireLifecycleEvent(lifecycleEvent, data);\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br")])]),e("p",[s._v("设置完 state 的状态之后，就触发该状态的事件了，通知事件监听器")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n * The list of registered LifecycleListeners for event notifications.\n */\nprivate final List<LifecycleListener> lifecycleListeners = new CopyOnWriteArrayList<>();\n\n\nprotected void fireLifecycleEvent(String type, Object data) {\n    LifecycleEvent event = new LifecycleEvent(this, type, data);\n    for (LifecycleListener listener : lifecycleListeners) {\n        listener.lifecycleEvent(event);\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("这里的 LifecycleListener 对象是在 Catalina 对象解析 server.xml 文件时就已经创建好并加到 lifecycleListeners 里的。这个不是特别重要就不细讲了。")]),s._v(" "),e("ul",[e("li",[s._v("start")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Override\npublic final synchronized void start() throws LifecycleException {\n    // `STARTING_PREP`、`STARTING`和`STARTED时，将忽略start()逻辑\n    if (LifecycleState.STARTING_PREP.equals(state) || LifecycleState.STARTING.equals(state) ||\n            LifecycleState.STARTED.equals(state)) {\n\n        if (log.isDebugEnabled()) {\n            Exception e = new LifecycleException();\n            log.debug(sm.getString("lifecycleBase.alreadyStarted", toString()), e);\n        } else if (log.isInfoEnabled()) {\n            log.info(sm.getString("lifecycleBase.alreadyStarted", toString()));\n        }\n\n        return;\n    }\n\n    // `NEW`状态时，执行init()方法\n    if (state.equals(LifecycleState.NEW)) {\n        init();\n    }\n\n    // `FAILED`状态时，执行stop()方法\n    else if (state.equals(LifecycleState.FAILED)) {\n        stop();\n    }\n\n    // 不是`INITIALIZED`和`STOPPED`时，则说明是非法的操作\n    else if (!state.equals(LifecycleState.INITIALIZED) &&\n            !state.equals(LifecycleState.STOPPED)) {\n        invalidTransition(Lifecycle.BEFORE_START_EVENT);\n    }\n\n    try {\n        // start前的状态设置\n        setStateInternal(LifecycleState.STARTING_PREP, null, false);\n        // start逻辑，抽象方法，由组件自行实现\n        startInternal();\n        // start过程中，可能因为某些原因失败，这时需要stop操作\n        if (state.equals(LifecycleState.FAILED)) {\n            // This is a \'controlled\' failure. The component put itself into the\n            // FAILED state so call stop() to complete the clean-up.\n            stop();\n        } else if (!state.equals(LifecycleState.STARTING)) {\n            // Shouldn\'t be necessary but acts as a check that sub-classes are\n            // doing what they are supposed to.\n            invalidTransition(Lifecycle.AFTER_START_EVENT);\n        } else {\n            // 设置状态为STARTED\n            setStateInternal(LifecycleState.STARTED, null, false);\n        }\n    } catch (Throwable t) {\n        // This is an \'uncontrolled\' failure so put the component into the\n        // FAILED state and throw an exception.\n        ExceptionUtils.handleThrowable(t);\n        setStateInternal(LifecycleState.FAILED, null, false);\n        throw new LifecycleException(sm.getString("lifecycleBase.startFail", toString()), t);\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("ul",[e("li",[s._v("stop")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Override\npublic final synchronized void stop() throws LifecycleException {\n    // `STOPPING_PREP`、`STOPPING`和STOPPED时，将忽略stop()的执行\n    if (LifecycleState.STOPPING_PREP.equals(state) || LifecycleState.STOPPING.equals(state) ||\n            LifecycleState.STOPPED.equals(state)) {\n\n        if (log.isDebugEnabled()) {\n            Exception e = new LifecycleException();\n            log.debug(sm.getString("lifecycleBase.alreadyStopped", toString()), e);\n        } else if (log.isInfoEnabled()) {\n            log.info(sm.getString("lifecycleBase.alreadyStopped", toString()));\n        }\n\n        return;\n    }\n\n    // `NEW`状态时，直接将状态变更为`STOPPED`\n    if (state.equals(LifecycleState.NEW)) {\n        state = LifecycleState.STOPPED;\n        return;\n    }\n\n    // stop()的执行，必须要是`STARTED`和`FAILED`\n    if (!state.equals(LifecycleState.STARTED) && !state.equals(LifecycleState.FAILED)) {\n        invalidTransition(Lifecycle.BEFORE_STOP_EVENT);\n    }\n\n    try {\n        // `FAILED`时，直接触发BEFORE_STOP_EVENT事件\n        if (state.equals(LifecycleState.FAILED)) {\n            // Don\'t transition to STOPPING_PREP as that would briefly mark the\n            // component as available but do ensure the BEFORE_STOP_EVENT is\n            // fired\n            fireLifecycleEvent(BEFORE_STOP_EVENT, null);\n        } else {\n            // 设置状态为STOPPING_PREP\n            setStateInternal(LifecycleState.STOPPING_PREP, null, false);\n        }\n\n        // stop逻辑，抽象方法，组件自行实现\n        stopInternal();\n\n        // Shouldn\'t be necessary but acts as a check that sub-classes are\n        // doing what they are supposed to.\n        if (!state.equals(LifecycleState.STOPPING) && !state.equals(LifecycleState.FAILED)) {\n            invalidTransition(Lifecycle.AFTER_STOP_EVENT);\n        }\n        // 设置状态为STOPPED\n        setStateInternal(LifecycleState.STOPPED, null, false);\n    } catch (Throwable t) {\n        ExceptionUtils.handleThrowable(t);\n        setStateInternal(LifecycleState.FAILED, null, false);\n        throw new LifecycleException(sm.getString("lifecycleBase.stopFail",toString()), t);\n    } finally {\n        if (this instanceof Lifecycle.SingleUse) {\n            // Complete stop process first\n            setStateInternal(LifecycleState.STOPPED, null, false);\n            destroy();\n        }\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br")])]),e("ul",[e("li",[s._v("destory")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Override\npublic final synchronized void destroy() throws LifecycleException {\n    // `FAILED`状态时，直接触发stop()逻辑\n    if (LifecycleState.FAILED.equals(state)) {\n        try {\n            // Triggers clean-up\n            stop();\n        } catch (LifecycleException e) {\n            // Just log. Still want to destroy.\n            log.warn(sm.getString(\n                    "lifecycleBase.destroyStopFail", toString()), e);\n        }\n    }\n\n    // `DESTROYING`和`DESTROYED`时，忽略destroy的执行\n    if (LifecycleState.DESTROYING.equals(state) ||\n            LifecycleState.DESTROYED.equals(state)) {\n\n        if (log.isDebugEnabled()) {\n            Exception e = new LifecycleException();\n            log.debug(sm.getString("lifecycleBase.alreadyDestroyed", toString()), e);\n        } else if (log.isInfoEnabled() && !(this instanceof Lifecycle.SingleUse)) {\n            // Rather than have every component that might need to call\n            // destroy() check for SingleUse, don\'t log an info message if\n            // multiple calls are made to destroy()\n            log.info(sm.getString("lifecycleBase.alreadyDestroyed", toString()));\n        }\n\n        return;\n    }\n\n    // 非法状态判断\n    if (!state.equals(LifecycleState.STOPPED) &&\n            !state.equals(LifecycleState.FAILED) &&\n            !state.equals(LifecycleState.NEW) &&\n            !state.equals(LifecycleState.INITIALIZED)) {\n        invalidTransition(Lifecycle.BEFORE_DESTROY_EVENT);\n    }\n\n    try {\n        // destroy前状态设置\n        setStateInternal(LifecycleState.DESTROYING, null, false);\n       // 抽象方法，组件自行实现\n        destroyInternal();\n        // destroy后状态设置\n        setStateInternal(LifecycleState.DESTROYED, null, false);\n    } catch (Throwable t) {\n        ExceptionUtils.handleThrowable(t);\n        setStateInternal(LifecycleState.FAILED, null, false);\n        throw new LifecycleException(\n                sm.getString("lifecycleBase.destroyFail",toString()), t);\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br")])]),e("h3",{attrs:{id:"用了什么设计模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#用了什么设计模式"}},[s._v("#")]),s._v(" 用了什么设计模式？")]),s._v(" "),e("p",[s._v("从上述源码看得出来，LifecycleBase是使用了"),e("strong",[s._v("状态机")]),s._v("+"),e("strong",[s._v("模板模式")]),s._v("来实现的。模板方法有下面这几个：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 初始化方法\nprotected abstract void initInternal() throws LifecycleException;\n// 启动方法\nprotected abstract void startInternal() throws LifecycleException;\n// 停止方法\nprotected abstract void stopInternal() throws LifecycleException;\n// 销毁方法\nprotected abstract void destroyInternal() throws LifecycleException;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h1",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),e("hr"),s._v(" "),e("ul",[e("li",[s._v("https://segmentfault.com/a/1190000022016991")]),s._v(" "),e("li",[s._v("https://www.jianshu.com/p/2a9ffbd00724)")])])])}),[],!1,null,null,null);e.default=t.exports}}]);
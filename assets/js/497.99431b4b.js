(window.webpackJsonp=window.webpackJsonp||[]).push([[497],{3522:function(a,e,s){"use strict";s.r(e);var t=s(7),n=Object(t.a)({},(function(){var a=this,e=a._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"map-weakhashmap源码解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#map-weakhashmap源码解析"}},[a._v("#")]),a._v(" Map - WeakHashMap源码解析")]),a._v(" "),e("blockquote",[e("p",[a._v("本文主要对Map - WeakHashMap源码解析 源码解析。@pdai")])]),a._v(" "),e("h2",{attrs:{id:"java-7-weakhashmap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-7-weakhashmap"}},[a._v("#")]),a._v(" Java 7- WeakHashMap")]),a._v(" "),e("h3",{attrs:{id:"总体介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#总体介绍"}},[a._v("#")]),a._v(" 总体介绍")]),a._v(" "),e("p",[a._v("在Java集合框架系列文章的最后，笔者打算介绍一个特殊的成员: "),e("em",[a._v("WeakHashMap")]),a._v("，从名字可以看出它是某种 "),e("em",[a._v("Map")]),a._v("。它的特殊之处在于 "),e("em",[a._v("WeakHashMap")]),a._v(" 里的"),e("code",[a._v("entry")]),a._v("可能会被GC自动删除，即使程序员没有调用"),e("code",[a._v("remove()")]),a._v("或者"),e("code",[a._v("clear()")]),a._v("方法。")]),a._v(" "),e("p",[a._v("更直观的说，当使用 "),e("em",[a._v("WeakHashMap")]),a._v(" 时，即使没有显示的添加或删除任何元素，也可能发生如下情况:")]),a._v(" "),e("blockquote",[e("ul",[e("li",[a._v("调用两次"),e("code",[a._v("size()")]),a._v("方法返回不同的值；")]),a._v(" "),e("li",[a._v("两次调用"),e("code",[a._v("isEmpty()")]),a._v("方法，第一次返回"),e("code",[a._v("false")]),a._v("，第二次返回"),e("code",[a._v("true")]),a._v("；")]),a._v(" "),e("li",[a._v("两次调用"),e("code",[a._v("containsKey()")]),a._v("方法，第一次返回"),e("code",[a._v("true")]),a._v("，第二次返回"),e("code",[a._v("false")]),a._v("，尽管两次使用的是同一个"),e("code",[a._v("key")]),a._v("；")]),a._v(" "),e("li",[a._v("两次调用"),e("code",[a._v("get()")]),a._v("方法，第一次返回一个"),e("code",[a._v("value")]),a._v("，第二次返回"),e("code",[a._v("null")]),a._v("，尽管两次使用的是同一个对象。")])])]),a._v(" "),e("p",[a._v("遇到这么奇葩的现象，你是不是觉得使用者一定会疯掉? 其实不然，"),e("strong",[e("em",[a._v("WeakHashMap")]),a._v(" 的这个特点特别适用于需要缓存的场景")]),a._v("。在缓存场景下，由于内存是有限的，不能缓存所有对象；对象缓存命中可以提高系统效率，但缓存MISS也不会造成错误，因为可以通过计算重新得到。")]),a._v(" "),e("p",[a._v("要明白 "),e("em",[a._v("WeakHashMap")]),a._v(" 的工作原理，还需要引入一个概念 : "),e("strong",[a._v("弱引用(WeakReference)")]),a._v("。我们都知道Java中内存是通过GC自动管理的，GC会在程序运行过程中自动判断哪些对象是可以被回收的，并在合适的时机进行内存释放。GC判断某个对象是否可被回收的依据是，"),e("strong",[a._v("是否有有效的引用指向该对象")]),a._v("。如果没有有效引用指向该对象(基本意味着不存在访问该对象的方式)，那么该对象就是可回收的。这里的"),e("strong",[a._v("有效引用")]),a._v(" 并不包括"),e("strong",[a._v("弱引用")]),a._v("。也就是说，"),e("strong",[a._v("虽然弱引用可以用来访问对象，但进行垃圾回收时弱引用并不会被考虑在内，仅有弱引用指向的对象仍然会被GC回收")]),a._v("。")]),a._v(" "),e("p",[e("em",[a._v("WeakHashMap")]),a._v(" 内部是通过弱引用来管理"),e("code",[a._v("entry")]),a._v("的，弱引用的特性对应到 "),e("em",[a._v("WeakHashMap")]),a._v(" 上意味着什么呢？"),e("strong",[a._v("将一对"),e("code",[a._v("key, value")]),a._v("放入到 "),e("em",[a._v("WeakHashMap")]),a._v(" 里并不能避免该"),e("code",[a._v("key")]),a._v("值被GC回收，除非在 "),e("em",[a._v("WeakHashMap")]),a._v(" 之外还有对该"),e("code",[a._v("key")]),a._v("的强引用")]),a._v("。")]),a._v(" "),e("p",[a._v("关于强引用，弱引用等概念以后再具体讲解，这里只需要知道Java中引用也是分种类的，并且不同种类的引用对GC的影响不同就够了。")]),a._v(" "),e("h3",{attrs:{id:"具体实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#具体实现"}},[a._v("#")]),a._v(" 具体实现")]),a._v(" "),e("p",[a._v("WeakHashMap的存储结构类似于"),e("a",{attrs:{href:"https://pdai.tech/md/java/collection/java-map-HashMap&HashSet.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Map - HashSet & HashMap 源码解析"),e("OutboundLink")],1),a._v("，这里不再赘述。")]),a._v(" "),e("p",[a._v("关于强弱引用的管理方式，博主将会另开专题单独讲解。")]),a._v(" "),e("h3",{attrs:{id:"weak-hashset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#weak-hashset"}},[a._v("#")]),a._v(" Weak HashSet?")]),a._v(" "),e("p",[a._v("如果你看过前几篇关于 "),e("em",[a._v("Map")]),a._v(" 和 "),e("em",[a._v("Set")]),a._v(" 的讲解，一定会问: 既然有 "),e("em",[a._v("WeakHashMap")]),a._v("，是否有 "),e("em",[a._v("WeekHashSet")]),a._v(" 呢? 答案是没有:( 。不过Java "),e("em",[a._v("Collections_工具类给出了解决方案，"),e("code",[a._v("Collections.newSetFromMap(Map<E,Boolean> map)")]),a._v("方法可以将任何 "),e("em",[a._v("Map")]),a._v("包装成一个_Set")]),a._v("。通过如下方式可以快速得到一个 "),e("em",[a._v("Weak HashSet")]),a._v(":")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("// 将WeakHashMap包装成一个Set\nSet<Object> weakHashSet = Collections.newSetFromMap(\n        new WeakHashMap<Object, Boolean>()); \n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("p",[a._v("不出你所料，"),e("code",[a._v("newSetFromMap()")]),a._v("方法只是对传入的 "),e("em",[a._v("Map")]),a._v("做了简单包装:")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('// Collections.newSetFromMap()用于将任何Map包装成一个Set\npublic static <E> Set<E> newSetFromMap(Map<E, Boolean> map) {\n    return new SetFromMap<>(map);\n}\n\nprivate static class SetFromMap<E> extends AbstractSet<E>\n    implements Set<E>, Serializable\n{\n    private final Map<E, Boolean> m;  // The backing map\n    private transient Set<E> s;       // Its keySet\n    SetFromMap(Map<E, Boolean> map) {\n        if (!map.isEmpty())\n            throw new IllegalArgumentException("Map is non-empty");\n        m = map;\n        s = map.keySet();\n    }\n    public void clear()               {        m.clear(); }\n    public int size()                 { return m.size(); }\n    public boolean isEmpty()          { return m.isEmpty(); }\n    public boolean contains(Object o) { return m.containsKey(o); }\n    public boolean remove(Object o)   { return m.remove(o) != null; }\n    public boolean add(E e) { return m.put(e, Boolean.TRUE) == null; }\n    public Iterator<E> iterator()     { return s.iterator(); }\n    public Object[] toArray()         { return s.toArray(); }\n    public <T> T[] toArray(T[] a)     { return s.toArray(a); }\n    public String toString()          { return s.toString(); }\n    public int hashCode()             { return s.hashCode(); }\n    public boolean equals(Object o)   { return o == this || s.equals(o); }\n    public boolean containsAll(Collection<?> c) {return s.containsAll(c);}\n    public boolean removeAll(Collection<?> c)   {return s.removeAll(c);}\n    public boolean retainAll(Collection<?> c)   {return s.retainAll(c);}\n    // addAll is the only inherited implementation\n    ......\n} \n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br")])]),e("h3",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),e("ul",[e("li",[a._v("浅谈WeakHashMap https://www.cnblogs.com/CarpenterLee/p/5544598.html")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
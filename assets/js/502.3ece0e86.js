(window.webpackJsonp=window.webpackJsonp||[]).push([[502],{3559:function(n,e,s){"use strict";s.r(e);var a=s(7),t=Object(a.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"java-n-a-io-框架-netty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-n-a-io-框架-netty"}},[n._v("#")]),n._v(" Java N(A)IO - 框架: Netty")]),n._v(" "),e("p",[n._v("==================================================")]),n._v(" "),e("blockquote",[e("p",[n._v("Netty是一个高性能、异步事件驱动的NIO框架，提供了对TCP、UDP和文件传输的支持。作为当前最流行的NIO框架，Netty在互联网领域、大数据分布式计算领域、游戏行业、通信行业等获得了广泛的应用，一些业界著名的开源组件也基于Netty构建，比如RPC框架、zookeeper等。@pdai")])]),n._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#java-naio---%E6%A1%86%E6%9E%B6-netty"}},[n._v("Java N(A)IO - 框架: Netty")]),n._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#nio%E6%A1%86%E6%9E%B6"}},[n._v("NIO框架")])]),n._v(" "),e("li",[e("a",{attrs:{href:"#%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84%E5%9F%BA%E4%BA%8Enio%E7%9A%84%E5%BC%80%E6%BA%90%E6%A1%86%E6%9E%B6netty"}},[n._v("比较好的基于NIO的开源框架(Netty)")]),n._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%BC%98%E7%82%B9"}},[n._v("优点")])]),n._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BE%8B%E5%AD%90"}},[n._v("例子")])])])]),n._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[n._v("参考文章")])])])])]),n._v(" "),e("h2",{attrs:{id:"nio框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nio框架"}},[n._v("#")]),n._v(" NIO框架")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("目前流行的NIO框架非常的多。在论坛上、互联网上大家讨论和使用最多的有以下几种:")]),n._v(" "),e("ul",[e("li",[n._v("原生JAVA NIO框架:")])]),n._v(" "),e("p",[n._v("JAVA NIO通信框架基于多路复用IO原理，我们将详细讲解它的工作原理。")]),n._v(" "),e("ul",[e("li",[n._v("APACHE MINA 2:")])]),n._v(" "),e("p",[n._v("是一个网络应用程序框架，用来帮助用户简单地开发高性能和高可扩展性的网络应用程序。它提供了一个通过Java NIO在不同的传输例如TCP/IP和UDP/IP上抽象的事件驱动的异步API。")]),n._v(" "),e("ul",[e("li",[n._v("NETTY 4/5:")])]),n._v(" "),e("p",[n._v("Netty是由JBOSS提供的一个java开源框架。Netty提供异步的、事件驱动的网络应用程序框架和工具，用以快速开发高性能、高可靠性的网络服务器和客户端程序。我们将讲解NETTY 4 的工作原理。另外说一句: MINA和NETTY的主要作者是同一人Trustin Lee。")]),n._v(" "),e("ul",[e("li",[n._v("Grizzly:")])]),n._v(" "),e("p",[n._v("Grizzly是一种应用程序框架，专门解决编写成千上万用户访问服务器时候产生的各种问题。使用JAVA NIO作为基础，并隐藏其编程的复杂性。")]),n._v(" "),e("h2",{attrs:{id:"比较好的基于nio的开源框架-netty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#比较好的基于nio的开源框架-netty"}},[n._v("#")]),n._v(" 比较好的基于NIO的开源框架(Netty)")]),n._v(" "),e("hr"),n._v(" "),e("h3",{attrs:{id:"优点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[n._v("#")]),n._v(" 优点")]),n._v(" "),e("ul",[e("li",[n._v("api简单，开发门槛低")]),n._v(" "),e("li",[n._v("功能强大，内置了多种编码、解码功能")]),n._v(" "),e("li",[n._v("与其它业界主流的NIO框架对比，netty的综合性能最优")]),n._v(" "),e("li",[n._v("社区活跃，使用广泛，经历过很多商业应用项目的考验")]),n._v(" "),e("li",[n._v("定制能力强，可以对框架进行灵活的扩展")])]),n._v(" "),e("h3",{attrs:{id:"例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[n._v("#")]),n._v(" 例子")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("<dependency>\n     <groupId>org.jboss.netty</groupId>\n     <artifactId>netty</artifactId>\n     <version>3.2.5.Final</version>\n</dependency> \n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("ul",[e("li",[n._v("服务端。接收客户端请求并将内容打印出来，同时发送一个消息收到回执。")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class NettyServer {\n\n    private static int HEADER_LENGTH = 4;\n\n    public void bind(int port) throws Exception {\n\n        ServerBootstrap b = new ServerBootstrap(new NioServerSocketChannelFactory(Executors.newCachedThreadPool(),\n                                                                                  Executors.newCachedThreadPool()));\n\n        // 构造对应的pipeline\n        b.setPipelineFactory(new ChannelPipelineFactory() {\n\n            public ChannelPipeline getPipeline() throws Exception {\n                ChannelPipeline pipelines = Channels.pipeline();\n                pipelines.addLast(MessageHandler.class.getName(), new MessageHandler());\n                return pipelines;\n            }\n        });\n        // 监听端口号\n        b.bind(new InetSocketAddress(port));\n    }\n\n    // 处理消息\n    static class MessageHandler extends SimpleChannelHandler {\n\n        public void messageReceived(ChannelHandlerContext ctx, MessageEvent e) throws Exception {\n            // 接收客户端请求\n            ChannelBuffer buffer = (ChannelBuffer) e.getMessage();\n            String message = new String(buffer.readBytes(buffer.readableBytes()).array(), "UTF-8");\n            System.out.println("<服务端>收到内容=" + message);\n\n            // 给客户端发送回执\n            byte[] body = "服务端已收到".getBytes();\n            byte[] header = ByteBuffer.allocate(HEADER_LENGTH).order(ByteOrder.BIG_ENDIAN).putInt(body.length).array();\n            Channels.write(ctx.getChannel(), ChannelBuffers.wrappedBuffer(header, body));\n            System.out.println("<服务端>发送回执,time=" + System.currentTimeMillis());\n\n        }\n    }\n\n    public static void main(String[] args) {\n        try {\n            new NettyServer().bind(1088);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        ;\n    }\n} \n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br")])]),e("ul",[e("li",[n._v("客户端。向服务端发送一个请求，然后打印服务端响应的内容。")])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('public class NettyClient {\n\n    private final ByteBuffer readHeader  = ByteBuffer.allocate(4).order(ByteOrder.BIG_ENDIAN);\n    private final ByteBuffer writeHeader = ByteBuffer.allocate(4).order(ByteOrder.BIG_ENDIAN);\n    private SocketChannel    channel;\n\n    public void sendMessage(byte[] body) throws Exception {\n        // 创建客户端通道\n        channel = SocketChannel.open();\n        channel.socket().setSoTimeout(60000);\n        channel.connect(new InetSocketAddress(AddressUtils.getHostIp(), 1088));\n\n        // 客户端发请求\n        writeWithHeader(channel, body);\n\n        // 接收服务端响应的信息\n        readHeader.clear();\n        read(channel, readHeader);\n        int bodyLen = readHeader.getInt(0);\n        ByteBuffer bodyBuf = ByteBuffer.allocate(bodyLen).order(ByteOrder.BIG_ENDIAN);\n        read(channel, bodyBuf);\n        System.out.println("<客户端>收到响应内容: " + new String(bodyBuf.array(), "UTF-8") + ",长度:" + bodyLen);\n    }\n\n    private void writeWithHeader(SocketChannel channel, byte[] body) throws IOException {\n        writeHeader.clear();\n        writeHeader.putInt(body.length);\n        writeHeader.flip();\n        // channel.write(writeHeader);\n        channel.write(ByteBuffer.wrap(body));\n    }\n\n    private void read(SocketChannel channel, ByteBuffer buffer) throws IOException {\n        while (buffer.hasRemaining()) {\n            int r = channel.read(buffer);\n            if (r == -1) {\n                throw new IOException("end of stream when reading header");\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        String body = "客户发的测试请求！";\n        try {\n            new NettyClient().sendMessage(body.getBytes());\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n} \n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br")])]),e("h2",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[n._v("#")]),n._v(" 参考文章")]),n._v(" "),e("hr"),n._v(" "),e("ul",[e("li",[n._v("https://blog.csdn.net/yinwenjie/article/details/48829419")]),n._v(" "),e("li",[n._v("https://blog.csdn.net/yinwenjie/article/details/48969853")]),n._v(" "),e("li",[e("a",{attrs:{href:"https://mp.weixin.qq.com/s/RPTETiULRAkOS-ZTd6xM2A",target:"_blank",rel:"noopener noreferrer"}},[n._v("Netty入门简介在新窗口打开"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=t.exports}}]);
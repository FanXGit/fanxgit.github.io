(window.webpackJsonp=window.webpackJsonp||[]).push([[389],{3380:function(a,n,s){a.exports=s.p+"assets/img/tomcat-x-catalina-1.6bc4b105.png"},3381:function(a,n,s){a.exports=s.p+"assets/img/tomcat-x-catalina-2.57875991.png"},4201:function(a,n,s){"use strict";s.r(n);var e=s(7),t=Object(e.a)({},(function(){var a=this,n=a._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"tomcat-启动过程-catalina的加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tomcat-启动过程-catalina的加载"}},[a._v("#")]),a._v(" Tomcat - 启动过程:Catalina的加载")]),a._v(" "),n("p",[a._v("=======================================================")]),a._v(" "),n("blockquote",[n("p",[a._v("通过前两篇文章，我们知道了"),n("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-classloader.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("Tomcat的类加载机制"),n("OutboundLink")],1),a._v("和"),n("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-start.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("整体的组件加载流程"),n("OutboundLink")],1),a._v("；我们也知道通过Bootstrap初始化的catalinaClassLoader加载了Catalina，那么进而引入了一个问题就是Catalina是如何加载的呢？加载了什么呢？本文将带你进一步分析。@pdai")])]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#tomcat---%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8Bcatalina%E7%9A%84%E5%8A%A0%E8%BD%BD"}},[a._v("Tomcat - 启动过程:Catalina的加载")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#catalina%E7%9A%84%E5%BC%95%E5%85%A5"}},[a._v("Catalina的引入")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#catalina%E7%9A%84%E5%8A%A0%E8%BD%BD"}},[a._v("Catalina的加载")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#initdirs"}},[a._v("initDirs")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#initnaming"}},[a._v("initNaming")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#serverxml%E7%9A%84%E8%A7%A3%E6%9E%90"}},[a._v("Server.xml的解析")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#initstreams"}},[a._v("initStreams")])])])]),a._v(" "),n("li",[n("a",{attrs:{href:"#catalina-%E7%9A%84%E5%90%AF%E5%8A%A8"}},[a._v("Catalina 的启动")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#catalina-%E7%9A%84%E5%85%B3%E9%97%AD"}},[a._v("Catalina 的关闭")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#%E8%81%8A%E8%81%8A%E5%85%B3%E9%97%AD%E9%92%A9%E5%AD%90"}},[a._v("聊聊关闭钩子")]),a._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("使用场景")])])])]),a._v(" "),n("li",[n("a",{attrs:{href:"#%E5%B0%8F%E7%BB%93"}},[a._v("小结")])]),a._v(" "),n("li",[n("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[a._v("参考文章")])])])])]),a._v(" "),n("h1",{attrs:{id:"catalina的引入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#catalina的引入"}},[a._v("#")]),a._v(" Catalina的引入")]),a._v(" "),n("hr"),a._v(" "),n("blockquote",[n("p",[a._v("通过前两篇文章，我们知道了Tomcat的类加载机制和整体的组件加载流程；我们也知道通过Bootstrap初始化的catalinaClassLoader加载了Catalina，那么进而引入了一个问题就是Catalina是如何加载的呢？加载了什么呢？")])]),a._v(" "),n("ul",[n("li",[a._v("先回顾下整个流程，和我们分析的阶段")])]),a._v(" "),n("p",[n("img",{attrs:{src:s(3380),alt:""}})]),a._v(" "),n("ul",[n("li",[a._v("看下Bootstrap中Load的过程")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('/**\n  * 加载守护进程\n  */\nprivate void load(String[] arguments) throws Exception {\n\n    // Call the load() method\n    String methodName = "load";\n    Object param[];\n    Class<?> paramTypes[];\n    if (arguments==null || arguments.length==0) {\n        paramTypes = null;\n        param = null;\n    } else {\n        paramTypes = new Class[1];\n        paramTypes[0] = arguments.getClass();\n        param = new Object[1];\n        param[0] = arguments;\n    }\n    Method method =\n        catalinaDaemon.getClass().getMethod(methodName, paramTypes); \n    if (log.isDebugEnabled()) {\n        log.debug("Calling startup class " + method);\n    }\n    method.invoke(catalinaDaemon, param);// 本质上就是调用catalina的load方法\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br")])]),n("h1",{attrs:{id:"catalina的加载"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#catalina的加载"}},[a._v("#")]),a._v(" Catalina的加载")]),a._v(" "),n("hr"),a._v(" "),n("p",[a._v("上一步，我们知道catalina load的触发，因为有参数所以是load(String[])方法。我们进而看下这个load方法做了什么？")]),a._v(" "),n("ul",[n("li",[a._v("load(String[])本质上还是调用了load方法")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/*\n  * Load using arguments\n  */\npublic void load(String args[]) {\n\n    try {\n        if (arguments(args)) { // 处理命令行的参数\n            load();\n        }\n    } catch (Exception e) {\n        e.printStackTrace(System.out);\n    }\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br")])]),n("ul",[n("li",[a._v("load加载过程本质上是初始化Server的实例")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('/**\n  * Start a new server instance.\n  */\npublic void load() {\n\n    // 如果已经加载则退出\n    if (loaded) {\n        return;\n    }\n    loaded = true;\n\n    long t1 = System.nanoTime();\n\n    // （已经弃用）\n    initDirs();\n\n    // Before digester - it may be needed\n    initNaming();\n\n    // 解析 server.xml\n    parseServerXml(true);\n    Server s = getServer();\n    if (s == null) {\n        return;\n    }\n\n    getServer().setCatalina(this);\n    getServer().setCatalinaHome(Bootstrap.getCatalinaHomeFile());\n    getServer().setCatalinaBase(Bootstrap.getCatalinaBaseFile());\n\n    // Stream redirection\n    initStreams();\n\n    // 启动Server\n    try {\n        getServer().init();\n    } catch (LifecycleException e) {\n        if (Boolean.getBoolean("org.apache.catalina.startup.EXIT_ON_INIT_FAILURE")) {\n            throw new java.lang.Error(e);\n        } else {\n            log.error(sm.getString("catalina.initError"), e);\n        }\n    }\n\n    if(log.isInfoEnabled()) {\n        log.info(sm.getString("catalina.init", Long.toString(TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - t1))));\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br")])]),n("p",[a._v("总体流程如下：")]),a._v(" "),n("p",[n("img",{attrs:{src:s(3381),alt:""}})]),a._v(" "),n("h3",{attrs:{id:"initdirs"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#initdirs"}},[a._v("#")]),a._v(" initDirs")]),a._v(" "),n("p",[a._v("已经弃用了，Tomcat10会删除这个方法。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/**\n  * @deprecated unused. Will be removed in Tomcat 10 onwards.\n  */\n@Deprecated\nprotected void initDirs() {\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("h3",{attrs:{id:"initnaming"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#initnaming"}},[a._v("#")]),a._v(" initNaming")]),a._v(" "),n("p",[a._v("设置额外的系统变量")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('protected void initNaming() {\n  // Setting additional variables\n  if (!useNaming) {\n      log.info(sm.getString("catalina.noNaming"));\n      System.setProperty("catalina.useNaming", "false");\n  } else {\n      System.setProperty("catalina.useNaming", "true");\n      String value = "org.apache.naming";\n      String oldValue =\n          System.getProperty(javax.naming.Context.URL_PKG_PREFIXES);\n      if (oldValue != null) {\n          value = value + ":" + oldValue;\n      }\n      System.setProperty(javax.naming.Context.URL_PKG_PREFIXES, value);\n      if( log.isDebugEnabled() ) {\n          log.debug("Setting naming prefix=" + value);\n      }\n      value = System.getProperty\n          (javax.naming.Context.INITIAL_CONTEXT_FACTORY);\n      if (value == null) {\n          System.setProperty\n              (javax.naming.Context.INITIAL_CONTEXT_FACTORY,\n                "org.apache.naming.java.javaURLContextFactory");\n      } else {\n          log.debug("INITIAL_CONTEXT_FACTORY already set " + value );\n      }\n  }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br")])]),n("h3",{attrs:{id:"server-xml的解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#server-xml的解析"}},[a._v("#")]),a._v(" Server.xml的解析")]),a._v(" "),n("p",[a._v("分三大块，下面的代码还是很清晰的:")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('protected void parseServerXml(boolean start) {\n    // Set configuration source\n    ConfigFileLoader.setSource(new CatalinaBaseConfigurationSource(Bootstrap.getCatalinaBaseFile(), getConfigFile()));\n    File file = configFile();\n\n    if (useGeneratedCode && !Digester.isGeneratedCodeLoaderSet()) {\n        // Load loader\n        String loaderClassName = generatedCodePackage + ".DigesterGeneratedCodeLoader";\n        try {\n            Digester.GeneratedCodeLoader loader =\n                    (Digester.GeneratedCodeLoader) Catalina.class.getClassLoader().loadClass(loaderClassName).newInstance();\n            Digester.setGeneratedCodeLoader(loader);\n        } catch (Exception e) {\n            if (log.isDebugEnabled()) {\n                log.info(sm.getString("catalina.noLoader", loaderClassName), e);\n            } else {\n                log.info(sm.getString("catalina.noLoader", loaderClassName));\n            }\n            // No loader so don\'t use generated code\n            useGeneratedCode = false;\n        }\n    }\n\n    // 初始化server.xml的位置\n    File serverXmlLocation = null;\n    String xmlClassName = null;\n    if (generateCode || useGeneratedCode) {\n        xmlClassName = start ? generatedCodePackage + ".ServerXml" : generatedCodePackage + ".ServerXmlStop";\n    }\n    if (generateCode) {\n        if (generatedCodeLocationParameter != null) {\n            generatedCodeLocation = new File(generatedCodeLocationParameter);\n            if (!generatedCodeLocation.isAbsolute()) {\n                generatedCodeLocation = new File(Bootstrap.getCatalinaHomeFile(), generatedCodeLocationParameter);\n            }\n        } else {\n            generatedCodeLocation = new File(Bootstrap.getCatalinaHomeFile(), "work");\n        }\n        serverXmlLocation = new File(generatedCodeLocation, generatedCodePackage);\n        if (!serverXmlLocation.isDirectory() && !serverXmlLocation.mkdirs()) {\n            log.warn(sm.getString("catalina.generatedCodeLocationError", generatedCodeLocation.getAbsolutePath()));\n            // Disable code generation\n            generateCode = false;\n        }\n    }\n\n    // 用 SAXParser 来解析 xml，解析完了之后，xml 里定义的各种标签就有对应的实现类对象了\n    ServerXml serverXml = null;\n    if (useGeneratedCode) {\n        serverXml = (ServerXml) Digester.loadGeneratedClass(xmlClassName);\n    }\n\n    if (serverXml != null) {\n        serverXml.load(this);\n    } else {\n        try (ConfigurationSource.Resource resource = ConfigFileLoader.getSource().getServerXml()) {\n            // Create and execute our Digester\n            Digester digester = start ? createStartDigester() : createStopDigester();\n            InputStream inputStream = resource.getInputStream();\n            InputSource inputSource = new InputSource(resource.getURI().toURL().toString());\n            inputSource.setByteStream(inputStream);\n            digester.push(this);\n            if (generateCode) {\n                digester.startGeneratingCode();\n                generateClassHeader(digester, start);\n            }\n            digester.parse(inputSource);\n            if (generateCode) {\n                generateClassFooter(digester);\n                try (FileWriter writer = new FileWriter(new File(serverXmlLocation,\n                        start ? "ServerXml.java" : "ServerXmlStop.java"))) {\n                    writer.write(digester.getGeneratedCode().toString());\n                }\n                digester.endGeneratingCode();\n                Digester.addGeneratedClass(xmlClassName);\n            }\n        } catch (Exception e) {\n            log.warn(sm.getString("catalina.configFail", file.getAbsolutePath()), e);\n            if (file.exists() && !file.canRead()) {\n                log.warn(sm.getString("catalina.incorrectPermissions"));\n            }\n        }\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br"),n("span",{staticClass:"line-number"},[a._v("49")]),n("br"),n("span",{staticClass:"line-number"},[a._v("50")]),n("br"),n("span",{staticClass:"line-number"},[a._v("51")]),n("br"),n("span",{staticClass:"line-number"},[a._v("52")]),n("br"),n("span",{staticClass:"line-number"},[a._v("53")]),n("br"),n("span",{staticClass:"line-number"},[a._v("54")]),n("br"),n("span",{staticClass:"line-number"},[a._v("55")]),n("br"),n("span",{staticClass:"line-number"},[a._v("56")]),n("br"),n("span",{staticClass:"line-number"},[a._v("57")]),n("br"),n("span",{staticClass:"line-number"},[a._v("58")]),n("br"),n("span",{staticClass:"line-number"},[a._v("59")]),n("br"),n("span",{staticClass:"line-number"},[a._v("60")]),n("br"),n("span",{staticClass:"line-number"},[a._v("61")]),n("br"),n("span",{staticClass:"line-number"},[a._v("62")]),n("br"),n("span",{staticClass:"line-number"},[a._v("63")]),n("br"),n("span",{staticClass:"line-number"},[a._v("64")]),n("br"),n("span",{staticClass:"line-number"},[a._v("65")]),n("br"),n("span",{staticClass:"line-number"},[a._v("66")]),n("br"),n("span",{staticClass:"line-number"},[a._v("67")]),n("br"),n("span",{staticClass:"line-number"},[a._v("68")]),n("br"),n("span",{staticClass:"line-number"},[a._v("69")]),n("br"),n("span",{staticClass:"line-number"},[a._v("70")]),n("br"),n("span",{staticClass:"line-number"},[a._v("71")]),n("br"),n("span",{staticClass:"line-number"},[a._v("72")]),n("br"),n("span",{staticClass:"line-number"},[a._v("73")]),n("br"),n("span",{staticClass:"line-number"},[a._v("74")]),n("br"),n("span",{staticClass:"line-number"},[a._v("75")]),n("br"),n("span",{staticClass:"line-number"},[a._v("76")]),n("br"),n("span",{staticClass:"line-number"},[a._v("77")]),n("br"),n("span",{staticClass:"line-number"},[a._v("78")]),n("br"),n("span",{staticClass:"line-number"},[a._v("79")]),n("br"),n("span",{staticClass:"line-number"},[a._v("80")]),n("br"),n("span",{staticClass:"line-number"},[a._v("81")]),n("br"),n("span",{staticClass:"line-number"},[a._v("82")]),n("br"),n("span",{staticClass:"line-number"},[a._v("83")]),n("br"),n("span",{staticClass:"line-number"},[a._v("84")]),n("br")])]),n("h3",{attrs:{id:"initstreams"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#initstreams"}},[a._v("#")]),a._v(" initStreams")]),a._v(" "),n("p",[a._v("替换掉System.out, System.err为自定义的PrintStream")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("protected void initStreams() {\n    // Replace System.out and System.err with a custom PrintStream\n    System.setOut(new SystemLogHandler(System.out));\n    System.setErr(new SystemLogHandler(System.err));\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h1",{attrs:{id:"catalina-的启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#catalina-的启动"}},[a._v("#")]),a._v(" Catalina 的启动")]),a._v(" "),n("hr"),a._v(" "),n("p",[a._v("在 load 方法之后，Tomcat 就初始化了一系列的组件，接着就可以调用 start 方法进行启动了。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('/**\n  * Start a new server instance.\n  */\npublic void start() {\n\n    if (getServer() == null) {\n        load();\n    }\n\n    if (getServer() == null) {\n        log.fatal(sm.getString("catalina.noServer"));\n        return;\n    }\n\n    long t1 = System.nanoTime();\n\n    // Start the new server\n    try {\n        getServer().start();\n    } catch (LifecycleException e) {\n        log.fatal(sm.getString("catalina.serverStartFail"), e);\n        try {\n            getServer().destroy();\n        } catch (LifecycleException e1) {\n            log.debug("destroy() failed for failed Server ", e1);\n        }\n        return;\n    }\n\n    long t2 = System.nanoTime();\n    if(log.isInfoEnabled()) {\n        log.info(sm.getString("catalina.startup", Long.valueOf((t2 - t1) / 1000000)));\n    }\n\n    // Register shutdown hook\n    if (useShutdownHook) {\n        if (shutdownHook == null) {\n            shutdownHook = new CatalinaShutdownHook();\n        }\n        Runtime.getRuntime().addShutdownHook(shutdownHook);\n\n        // If JULI is being used, disable JULI\'s shutdown hook since\n        // shutdown hooks run in parallel and log messages may be lost\n        // if JULI\'s hook completes before the CatalinaShutdownHook()\n        LogManager logManager = LogManager.getLogManager();\n        if (logManager instanceof ClassLoaderLogManager) {\n            ((ClassLoaderLogManager) logManager).setUseShutdownHook(\n                    false);\n        }\n    }\n\n    if (await) {\n        await();\n        stop();\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br"),n("span",{staticClass:"line-number"},[a._v("49")]),n("br"),n("span",{staticClass:"line-number"},[a._v("50")]),n("br"),n("span",{staticClass:"line-number"},[a._v("51")]),n("br"),n("span",{staticClass:"line-number"},[a._v("52")]),n("br"),n("span",{staticClass:"line-number"},[a._v("53")]),n("br"),n("span",{staticClass:"line-number"},[a._v("54")]),n("br"),n("span",{staticClass:"line-number"},[a._v("55")]),n("br"),n("span",{staticClass:"line-number"},[a._v("56")]),n("br")])]),n("p",[a._v("上面这段代码，逻辑非常简单，首先确定 getServer() 方法不为 null ，也就是确定 server 属性不为null，而 server 属性是在 load 方法就初始化了。")]),a._v(" "),n("p",[a._v("整段代码的核心就是 try-catch 里的 getServer().start() 方法了，也就是调用 Server 对象的 start() 方法来启动 Tomcat。本篇文章就先不对 Server 的 start() 方法进行解析了，下篇文章会单独讲。")]),a._v(" "),n("h1",{attrs:{id:"catalina-的关闭"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#catalina-的关闭"}},[a._v("#")]),a._v(" Catalina 的关闭")]),a._v(" "),n("hr"),a._v(" "),n("p",[a._v("调用完 Server#start 方法之后，注册了一个ShutDownHook，也就是 CatalinaShutdownHook 对象，")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('/**\n  * Shutdown hook which will perform a clean shutdown of Catalina if needed.\n  */\nprotected class CatalinaShutdownHook extends Thread {\n\n  @Override\n  public void run() {\n      try {\n          if (getServer() != null) {\n              Catalina.this.stop();\n          }\n      } catch (Throwable ex) {\n          ExceptionUtils.handleThrowable(ex);\n          log.error(sm.getString("catalina.shutdownHookFail"), ex);\n      } finally {\n          // If JULI is used, shut JULI down *after* the server shuts down\n          // so log messages aren\'t lost\n          LogManager logManager = LogManager.getLogManager();\n          if (logManager instanceof ClassLoaderLogManager) {\n              ((ClassLoaderLogManager) logManager).shutdown();\n          }\n      }\n  }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br")])]),n("p",[a._v("CatalinaShutdownHook 的逻辑也简单，就是调用 Catalina 对象的 stop 方法来停止 tomcat。")]),a._v(" "),n("p",[a._v("最后就进入 if 语句了，await 是在 Bootstrap 里调用的时候设置为 true 的，也就是本文开头的时候提到的三个方法中的一个。await 方法的作用是停住主线程，等待用户输入shutdown 命令之后，停止等待，之后 main 线程就调用 stop 方法来停止Tomcat。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("/**\n  * Stop an existing server instance.\n  */\npublic void stop() {\n\n    try {\n        // Remove the ShutdownHook first so that server.stop()\n        // doesn't get invoked twice\n        if (useShutdownHook) {\n            Runtime.getRuntime().removeShutdownHook(shutdownHook);\n\n            // If JULI is being used, re-enable JULI's shutdown to ensure\n            // log messages are not lost\n            LogManager logManager = LogManager.getLogManager();\n            if (logManager instanceof ClassLoaderLogManager) {\n                ((ClassLoaderLogManager) logManager).setUseShutdownHook(\n                        true);\n            }\n        }\n    } catch (Throwable t) {\n        ExceptionUtils.handleThrowable(t);\n        // This will fail on JDK 1.2. Ignoring, as Tomcat can run\n        // fine without the shutdown hook.\n    }\n\n    // Shut down the server\n    try {\n        Server s = getServer();\n        LifecycleState state = s.getState();\n        if (LifecycleState.STOPPING_PREP.compareTo(state) <= 0\n                && LifecycleState.DESTROYED.compareTo(state) >= 0) {\n            // Nothing to do. stop() was already called\n        } else {\n            s.stop();\n            s.destroy();\n        }\n    } catch (LifecycleException e) {\n        log.error(sm.getString(\"catalina.stopError\"), e);\n    }\n\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br")])]),n("p",[a._v("Catalina 的 stop 方法主要逻辑是调用 Server 对象的 stop 方法。")]),a._v(" "),n("h1",{attrs:{id:"聊聊关闭钩子"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#聊聊关闭钩子"}},[a._v("#")]),a._v(" 聊聊关闭钩子")]),a._v(" "),n("hr"),a._v(" "),n("p",[a._v("上面我们看到CatalinaShutdownHook, 这里有必要谈谈JVM的关闭钩子。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("if (shutdownHook == null) {\n    shutdownHook = new CatalinaShutdownHook();\n}\nRuntime.getRuntime().addShutdownHook(shutdownHook);\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("关闭钩子是指通过"),n("strong",[a._v("Runtime.addShutdownHook注册的但尚未开始的线程")]),a._v("。这些钩子可以用于"),n("strong",[a._v("实现服务或者应用程序的清理工作")]),a._v("，例如删除临时文件，或者清除无法由操作系统自动清除的资源。")]),a._v(" "),n("p",[a._v("JVM既可以正常关闭，也可以强行关闭。正常关闭的触发方式有多种，包括：当最后一个“正常（非守护）”线程结束时，或者当调用了System.exit时，或者通过其他特定于平台的方法关闭时（例如发送了SIGINT信号或者键入Ctrl-C）。")]),a._v(" "),n("p",[a._v("在"),n("strong",[a._v("正常关闭中，JVM首先调用所有已注册的关闭钩子")]),a._v("。JVM并不能保证关闭钩子的调用顺序。在关闭应用程序线程时，如果有（守护或者非守护）线程仍然在执行，那么这些线程接下来将与关闭进程并发执行。当所有的关闭钩子都执行结束时，如果runFinalizersOnExit为true【通过Runtime.runFinalizersOnExit(true)设置】，那么JVM将运行这些Finalizer（对象重写的finalize方法），然后再停止。JVM不会停止或中断任何在关闭时仍然运行的应用程序线程。当JVM最终结束时，这些线程将被强行结束。如果关闭钩子或者Finalizer没有执行完成，那么正常关闭进程“挂起”并且JVM必须被强行关闭。当"),n("strong",[a._v("JVM被强行关闭时，只是关闭JVM，并不会运行关闭钩子")]),a._v("（举个例子，类似于电源都直接拔了，还怎么做其它动作呢？）。")]),a._v(" "),n("p",[a._v("下面是一个简单的示例：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('public class T {\n\t@SuppressWarnings("deprecation")\n\tpublic static void main(String[] args) throws Exception {\n\t\t//启用退出JVM时执行Finalizer\n\t\tRuntime.runFinalizersOnExit(true);\n\t\tMyHook hook1 = new MyHook("Hook1");\n\t\tMyHook hook2 = new MyHook("Hook2");\n\t\tMyHook hook3 = new MyHook("Hook3");\n\t\t\n\t\t//注册关闭钩子\n\t\tRuntime.getRuntime().addShutdownHook(hook1);\n\t\tRuntime.getRuntime().addShutdownHook(hook2);\n\t\tRuntime.getRuntime().addShutdownHook(hook3);\n\t\t\n\t\t//移除关闭钩子\n\t\tRuntime.getRuntime().removeShutdownHook(hook3);\n\t\t\n\t\t//Main线程将在执行这句之后退出\n\t\tSystem.out.println("Main Thread Ends.");\n\t}\n}\n\nclass MyHook extends Thread {\n\tprivate String name;\n\tpublic MyHook (String name) {\n\t\tthis.name = name;\n\t\tsetName(name);\n\t}\n\tpublic void run() {\n\t\tSystem.out.println(name + " Ends.");\n\t}\n\t//重写Finalizer，将在关闭钩子后调用\n\tprotected void finalize() throws Throwable {\n\t\tSystem.out.println(name + " Finalize.");\n\t}\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br")])]),n("p",[a._v("和（可能的）执行结果（因为JVM不保证关闭钩子的调用顺序，因此结果中的第二、三行可能出现相反的顺序）：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Main Thread Ends.\nHook2 Ends.\nHook1 Ends.\nHook3 Finalize.\nHook2 Finalize.\nHook1 Finalize.\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])]),n("p",[a._v("可以看到，main函数执行完成，首先输出的是Main Thread Ends，接下来执行关闭钩子，输出Hook2 Ends和Hook1 Ends。这两行也可以证实：JVM确实不是以注册的顺序来调用关闭钩子的。而由于hook3在调用了addShutdownHook后，接着对其调用了removeShutdownHook将其移除，于是hook3在JVM退出时没有执行，因此没有输出Hook3 Ends。")]),a._v(" "),n("p",[a._v("另外，由于MyHook类实现了finalize方法，而main函数中第一行又通过Runtime.runFinalizersOnExit(true)打开了退出JVM时执行Finalizer的开关，于是3个hook对象的finalize方法被调用，输出了3行Finalize。")]),a._v(" "),n("p",[a._v("注意，多次调用addShutdownHook来注册同一个关闭钩子将会抛出IllegalArgumentException:")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('Exception in thread "main" java.lang.IllegalArgumentException: Hook previously registered\n\tat java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:72)\n\tat java.lang.Runtime.addShutdownHook(Runtime.java:211)\n\tat T.main(T.java:12)\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("另外，从JavaDoc中得知："),n("strong",[a._v("一旦JVM关闭流程开始，就只能通过调用halt方法来停止该流程，也不可能再注册或移除关闭钩子了，这些操作将导致抛出IllegalStateException")]),a._v("。")]),a._v(" "),n("p",[a._v("如果在关闭钩子中关闭应用程序的公共的组件，如日志服务，或者数据库连接等，像下面这样：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("Runtime.getRuntime().addShutdownHook(new Thread() {\n\tpublic void run() {\n\t\ttry { \n\t\t\tLogService.this.stop();\n\t\t} catch (InterruptedException ignored){\n\t\t\t//ignored\n\t\t}\n\t}\n});\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br")])]),n("p",[a._v("由于"),n("strong",[a._v("关闭钩子将并发执行，因此在关闭日志时可能导致其他需要日志服务的关闭钩子产生问题")]),a._v("。"),n("strong",[a._v("为了避免这种情况，可以使关闭钩子不依赖那些可能被应用程序或其他关闭钩子关闭的服务")]),a._v("。实现这种功能的一种方式是对所有服务使用同一个关闭钩子（而不是每个服务使用一个不同的关闭钩子），并且在该关闭钩子中执行一系列的关闭操作。这确保了关闭操作在单个线程中串行执行，从而避免了在关闭操作之前出现竞态条件或死锁等问题。")]),a._v(" "),n("h3",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[a._v("#")]),a._v(" 使用场景")]),a._v(" "),n("p",[a._v("通过Hook实现临时文件清理")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('public class test {\n\n  public static void main(String[] args) {\n      try {\n          Thread.sleep(20000);\n      } catch (InterruptedException e) {\n          e.printStackTrace();\n      }\n\n      Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n          public void run() {\n              System.out.println("auto clean temporary file");\n          }\n      }));\n  }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br")])]),n("h1",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),n("hr"),a._v(" "),n("p",[a._v("Catalina 类承接了 Bootstrap 类的 load 和 start 方法，然后根据配置初始化了 Tomcat 的组件，并调用了 Server 类的 init 和 start 方法来启动 Tomcat。")]),a._v(" "),n("h1",{attrs:{id:"参考文章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),n("hr"),a._v(" "),n("ul",[n("li",[a._v("https://segmentfault.com/a/1190000022012525")]),a._v(" "),n("li",[a._v("https://my.oschina.net/itblog/blog/811053)")])])])}),[],!1,null,null,null);n.default=t.exports}}]);
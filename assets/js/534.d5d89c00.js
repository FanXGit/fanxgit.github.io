(window.webpackJsonp=window.webpackJsonp||[]).push([[534],{3667:function(t,s,e){"use strict";e.r(s);var n=e(7),a=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"springboot接口-如何访问外部接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口-如何访问外部接口"}},[t._v("#")]),t._v(" SpringBoot接口 - 如何访问外部接口")]),t._v(" "),s("blockquote",[s("p",[t._v("在SpringBoot接口开发中，存在着本模块的代码需要访问外面模块接口或外部url链接的需求, 比如调用外部的地图API或者天气API。那么有哪些方式可以调用外部接口呢？@pdai")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#springboot%E6%8E%A5%E5%8F%A3---%E5%A6%82%E4%BD%95%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3"}},[t._v("SpringBoot接口 - 如何访问外部接口")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%9C%BA%E6%99%AF%E9%9C%80%E8%A6%81%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3"}},[t._v("什么样的场景需要访问外部接口")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%AE%BF%E9%97%AE%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3%E7%9A%84%E5%B8%B8%E8%A7%81%E6%96%B9%E6%A1%88"}},[t._v("访问外部接口的常见方案")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%96%B9%E6%A1%88%E4%B8%80-%E9%87%87%E7%94%A8%E5%8E%9F%E7%94%9F%E7%9A%84http%E8%AF%B7%E6%B1%82"}},[t._v("方案一: 采用原生的Http请求")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%96%B9%E6%A1%88%E4%BA%8C-%E9%87%87%E7%94%A8feign%E8%BF%9B%E8%A1%8C%E6%B6%88%E8%B4%B9"}},[t._v("方案二: 采用Feign进行消费")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%96%B9%E6%A1%88%E4%B8%89-%E9%87%87%E7%94%A8resttemplate%E6%96%B9%E6%B3%95"}},[t._v("方案三: 采用RestTemplate方法")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#get%E8%AF%B7%E6%B1%82%E4%B9%8Bgetforentitystringurlclass-responsetypeobjecturlvariables"}},[t._v("Get请求之——getForEntity(Stringurl,Class responseType,Object…urlVariables)")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#get%E8%AF%B7%E6%B1%82%E4%B9%8Bgetforentityuri-urlclass-responsetype"}},[t._v("Get请求之——getForEntity(URI url,Class responseType)")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#get%E8%AF%B7%E6%B1%82%E4%B9%8Bgetforobject"}},[t._v("Get请求之——getForObject")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#post-%E8%AF%B7%E6%B1%82"}},[t._v("Post 请求")])])])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[t._v("进一步理解")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%9C%A8%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8%E4%B8%AD%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88"}},[t._v("在接口调用中需要注意什么?")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[t._v("参考文章")])])])])]),t._v(" "),s("h1",{attrs:{id:"什么样的场景需要访问外部接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么样的场景需要访问外部接口"}},[t._v("#")]),t._v(" 什么样的场景需要访问外部接口")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("调用其它模块的API，或者其它三方服务，比如调用外部的地图API或者天气API等。")]),t._v(" "),s("h1",{attrs:{id:"访问外部接口的常见方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问外部接口的常见方案"}},[t._v("#")]),t._v(" 访问外部接口的常见方案")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("主要有如下几种方案，其中RestTemplate需要重点掌握。")])]),t._v(" "),s("h3",{attrs:{id:"方案一-采用原生的http请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案一-采用原生的http请求"}},[t._v("#")]),t._v(" 方案一: 采用原生的Http请求")]),t._v(" "),s("p",[t._v("在代码中采用原生的http请求，代码参考如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@RequestMapping("/doPostGetJson")\npublic String doPostGetJson() throws ParseException {\n   //此处将要发送的数据转换为json格式字符串\n   String jsonText = "{id: 1}";\n   JSONObject json = (JSONObject) JSONObject.parse(jsonText);\n   JSONObject sr = this.doPost(json);\n   System.out.println("返回参数: " + sr);\n   return sr.toString();\n}\n\npublic static JSONObject doPost(JSONObject date) {\n   HttpClient client = HttpClients.createDefault();\n   // 要调用的接口方法\n   String url = "http://192.168.1.101:8080/getJson";\n   HttpPost post = new HttpPost(url);\n   JSONObject jsonObject = null;\n   try {\n      StringEntity s = new StringEntity(date.toString());\n      s.setContentEncoding("UTF-8");\n      s.setContentType("application/json");\n      post.setEntity(s);\n      post.addHeader("content-type", "text/xml");\n      HttpResponse res = client.execute(post);\n      String response1 = EntityUtils.toString(res.getEntity());\n      System.out.println(response1);\n      if (res.getStatusLine().getStatusCode() == HttpStatus.SC_OK) {\n         String result = EntityUtils.toString(res.getEntity());// 返回json格式: \n         jsonObject = JSONObject.parseObject(result);\n      }\n   } catch (Exception e) {\n      throw new RuntimeException(e);\n   }\n   return jsonObject;\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br")])]),s("h3",{attrs:{id:"方案二-采用feign进行消费"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案二-采用feign进行消费"}},[t._v("#")]),t._v(" 方案二: 采用Feign进行消费")]),t._v(" "),s("p",[t._v("1、在maven项目中添加依赖")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-feign</artifactId>\n    <version>1.2.2.RELEASE</version>\n</dependency>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("2、编写接口，放置在service层")]),t._v(" "),s("p",[t._v("这里的decisionEngine.url 是配置在properties中的 是ip地址和端口号 decisionEngine.url=http://10.2.1.148:3333/decision/person 是接口名字")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@FeignClient(url = "${decisionEngine.url}",name="engine")\npublic interface DecisionEngineService {\n　　@RequestMapping(value="/decision/person",method= RequestMethod.POST)\n　　public JSONObject getEngineMesasge(@RequestParam("uid") String uid,@RequestParam("productCode") String productCode);\n\n}\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("3、在Java的启动类上加上@EnableFeignClients")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("@EnableFeignClients //参见此处\n@EnableDiscoveryClient\n@SpringBootApplication\n@EnableResourceServer\npublic class Application   implements CommandLineRunner {\n    private static final Logger LOGGER = LoggerFactory.getLogger(Application.class);\n    @Autowired\n    private AppMetricsExporter appMetricsExporter;\n\n    @Autowired\n    private AddMonitorUnitService addMonitorUnitService;\n\n    public static void main(String[] args) {\n        new SpringApplicationBuilder(Application.class).web(true).run(args);\n    }    \n}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("4、在代码中调用接口即可")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('@Autowired\nprivate DecisionEngineService decisionEngineService ;\n// ...\ndecisionEngineService.getEngineMesasge("uid" ,  "productCode");\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"方案三-采用resttemplate方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方案三-采用resttemplate方法"}},[t._v("#")]),t._v(" 方案三: 采用RestTemplate方法")]),t._v(" "),s("blockquote",[s("p",[t._v("在Spring-Boot开发中，RestTemplate同样提供了对外访问的接口API，这里主要介绍Get和Post方法的使用。Get请求提供了两种方式的接口getForObject 和 getForEntity，getForEntity提供如下三种方法的实现。")])]),t._v(" "),s("h4",{attrs:{id:"get请求之-getforentity-stringurl-class-responsetype-object-urlvariables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get请求之-getforentity-stringurl-class-responsetype-object-urlvariables"}},[t._v("#")]),t._v(" Get请求之——getForEntity(Stringurl,Class responseType,Object…urlVariables)")]),t._v(" "),s("p",[t._v("该方法提供了三个参数，其中url为请求的地址，responseType为请求响应body的包装类型，urlVariables为url中的参数绑定，该方法的参考调用如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// http://USER-SERVICE/user?name={name)\nRestTemplate restTemplate=new RestTemplate();\nMap<String,String> params=new HashMap<>();\nparams.put("name","dada");  //\nResponseEntity<String> responseEntity=restTemplate.getForEntity("http://USERSERVICE/user?name={name}",String.class,params);\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"get请求之-getforentity-uri-url-class-responsetype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get请求之-getforentity-uri-url-class-responsetype"}},[t._v("#")]),t._v(" Get请求之——getForEntity(URI url,Class responseType)")]),t._v(" "),s("p",[t._v("该方法使用URI对象来替代之前的url和urlVariables参数来指定访问地址和参数绑定。URI是JDK java.net包下的一个类，表示一个统一资源标识符(Uniform Resource Identifier)引用。参考如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('RestTemplate restTemplate=new RestTemplate();\nUriComponents uriComponents=UriComponentsBuilder.fromUriString("http://USER-SERVICE/user?name={name}")\n    .build()\n    .expand("dodo")\n    .encode();\nURI uri=uriComponents.toUri();\nResponseEntity<String> responseEntity=restTemplate.getForEntity(uri,String.class).getBody();\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h4",{attrs:{id:"get请求之-getforobject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get请求之-getforobject"}},[t._v("#")]),t._v(" Get请求之——getForObject")]),t._v(" "),s("p",[t._v("getForObject方法可以理解为对getForEntity的进一步封装，它通过HttpMessageConverterExtractor对HTTP的请求响应体body内容进行对象转换，实现请求直接返回包装好的对象内容。getForObject方法有如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("getForObject(String url,Class responseType,Object...urlVariables)\ngetForObject(String url,Class responseType,Map urlVariables)\ngetForObject(URI url,Class responseType)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h4",{attrs:{id:"post-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post-请求"}},[t._v("#")]),t._v(" Post 请求")]),t._v(" "),s("p",[t._v("Post请求提供有三种方法，postForEntity、postForObject和postForLocation。其中每种方法都存在三种方法，postForEntity方法使用如下:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('RestTemplate restTemplate=new RestTemplate();\nUser user=newUser("didi",30);\nResponseEntity<String> responseEntity=restTemplate.postForEntity("http://USER-SERVICE/user",user,String.class); //提交的body内容为user对象，请求的返回的body类型为String\nString body=responseEntity.getBody();\n')])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("postForEntity存在如下三种方法的重载")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("postForEntity(String url,Object request,Class responseType,Object... uriVariables)\npostForEntity(String url,Object request,Class responseType,Map uriVariables)\npostForEntity(URI url,Object request，Class responseType)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("postForEntity中的其它参数和getForEntity的参数大体相同在此不做介绍。")]),t._v(" "),s("h1",{attrs:{id:"进一步理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[t._v("#")]),t._v(" 进一步理解")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("通过如下问题帮助你更深入理解接口调用的注意点。")])]),t._v(" "),s("h3",{attrs:{id:"在接口调用中需要注意什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在接口调用中需要注意什么"}},[t._v("#")]),t._v(" 在接口调用中需要注意什么?")]),t._v(" "),s("p",[t._v("需要注意两点：")]),t._v(" "),s("ol",[s("li",[t._v("需要设置超时时间")]),t._v(" "),s("li",[t._v("需要自行处理异常")])]),t._v(" "),s("p",[t._v("具体原因可以参考"),s("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-task-spring-task-timer.html#%E4%BD%BF%E7%94%A8spring-schedule%E8%A6%81%E6%B3%A8%E6%84%8F%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("使用Spring Schedule要注意什么"),s("OutboundLink")],1)]),t._v(" "),s("h1",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),s("hr"),t._v(" "),s("ul",[s("li",[t._v("参考 https://blog.csdn.net/polo2044/article/details/85002282")])])])}),[],!1,null,null,null);s.default=a.exports}}]);
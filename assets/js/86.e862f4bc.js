(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{1873:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-1.2498cee4.png"},1874:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-2.25298b97.png"},1875:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-3.ff4b3786.png"},1876:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-4.ba82269a.png"},1877:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-5.323a2218.png"},1878:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-6.b3630bf7.png"},1879:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-7.99616185.png"},1880:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-8.0d3929dd.png"},1881:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-9.a48a44d3.png"},1882:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-10.910c371b.png"},1883:function(t,a,r){t.exports=r.p+"assets/img/arch-e-meituan-wuliu-11.d1fc63d2.png"},3851:function(t,a,r){"use strict";r.r(a);var e=r(7),i=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"【仓储物流】美团-即时物流的分布式系统架构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【仓储物流】美团-即时物流的分布式系统架构设计"}},[t._v("#")]),t._v(" 【仓储物流】美团-即时物流的分布式系统架构设计")]),t._v(" "),a("p",[t._v("=====================================================")]),t._v(" "),a("blockquote",[a("p",[t._v("美团外卖已经发展了五年，即时物流探索也经历了3年多的时间，业务从零孵化到初具规模，在整个过程中积累了一些分布式高并发系统的建设经验。文主要介绍在美团即时物流分布式系统架构逐层演变的进展中，遇到的技术障碍和挑战。")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E8%83%8C%E6%99%AF",target:"_blank",rel:"noopener noreferrer"}},[t._v("背景"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E7%BE%8E%E5%9B%A2%E5%8D%B3%E6%97%B6%E7%89%A9%E6%B5%81%E6%9E%B6%E6%9E%84",target:"_blank",rel:"noopener noreferrer"}},[t._v("美团即时物流架构"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%B7%B5",target:"_blank",rel:"noopener noreferrer"}},[t._v("分布式系统实践"),a("OutboundLink")],1),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E5%8D%95idc%E7%9A%84%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2-%E5%AE%B9%E7%81%BE",target:"_blank",rel:"noopener noreferrer"}},[t._v("单IDC的快速部署&容灾"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E5%A4%9A%E4%B8%AD%E5%BF%83%E5%B0%9D%E8%AF%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("多中心尝试"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E5%8D%95%E5%85%83%E5%8C%96%E5%B0%9D%E8%AF%95",target:"_blank",rel:"noopener noreferrer"}},[t._v("单元化尝试"),a("OutboundLink")],1)])])]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E6%99%BA%E8%83%BD%E7%89%A9%E6%B5%81%E7%9A%84%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E8%83%BD%E5%8A%9B%E5%92%8C%E5%B9%B3%E5%8F%B0%E6%B2%89%E6%B7%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("智能物流的核心技术能力和平台沉淀"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E6%9C%AA%E6%9D%A5%E7%9A%84%E6%8C%91%E6%88%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("未来的挑战"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E4%BD%9C%E8%80%85%E7%AE%80%E4%BB%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("作者简介"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/arch/arch-example-meituan-jishiwuliu.html#%E6%96%87%E7%AB%A0%E6%9D%A5%E6%BA%90",target:"_blank",rel:"noopener noreferrer"}},[t._v("文章来源"),a("OutboundLink")],1)])]),t._v(" "),a("h1",{attrs:{id:"背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("美团外卖已经发展了五年，即时物流探索也经历了3年多的时间，业务从零孵化到初具规模，在整个过程中积累了一些分布式高并发系统的建设经验。最主要的收获包括两点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("即时物流业务对故障和高延迟的容忍度极低，在业务复杂度提升的同时也要求系统具备分布式、可扩展、可容灾的能力。即时物流系统阶段性的逐步实施分布式系统的架构升级，最终解决了系统宕机的风险。")])]),t._v(" "),a("li",[a("p",[t._v("围绕成本、效率、体验核心三要素，即时物流体系大量结合AI技术，从定价、ETA、调度、运力规划、运力干预、补贴、核算、语音交互、LBS挖掘、业务运维、指标监控等方面，业务突破结合架构升级，达到促规模、保体验、降成本的效果。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:r(1873),alt:""}})]),t._v(" "),a("p",[t._v("本文主要介绍在美团即时物流分布式系统架构逐层演变的进展中，遇到的技术障碍和挑战：")]),t._v(" "),a("ul",[a("li",[t._v("订单、骑手规模大，供需匹配过程的超大规模计算问题。")]),t._v(" "),a("li",[t._v("遇到节假日或者恶劣天气，订单聚集效应，流量高峰是平常的十几倍。")]),t._v(" "),a("li",[t._v("物流履约是线上连接线下的关键环节，故障容忍度极低，不能宕机，不能丢单，可用性要求极高。")]),t._v(" "),a("li",[t._v("数据实时性、准确性要求高，对延迟、异常非常敏感。")])]),t._v(" "),a("h1",{attrs:{id:"美团即时物流架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#美团即时物流架构"}},[t._v("#")]),t._v(" 美团即时物流架构")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("美团即时物流配送平台主要围绕三件事展开：一是面向用户提供履约的SLA，包括计算送达时间ETA、配送费定价等；二是在多目标（成本、效率、体验）优化的背景下，匹配最合适的骑手；三是提供骑手完整履约过程中的辅助决策，包括智能语音、路径推荐、到店提醒等。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1874),alt:""}})]),t._v(" "),a("p",[t._v("在一系列服务背后，是美团强大的技术体系的支持，并由此沉淀出的配送业务架构体系，基于架构构建的平台、算法、系统和服务。庞大的物流系统背后离不开分布式系统架构的支撑，而且这个架构更要保证高可用和高并发。")]),t._v(" "),a("p",[t._v("分布式架构，是相对于集中式架构而言的一种架构体系。分布式架构适用CAP理论（Consistency 一致性，Availability 可用性，Partition Tolerance 分区容忍性）。在分布式架构中，一个服务部署在多个对等节点中，节点之间通过网络进行通信，多个节点共同组成服务集群来提供高可用、一致性的服务。")]),t._v(" "),a("p",[t._v("早期，美团按照业务领域划分成多个垂直服务架构；随着业务的发展，从可用性的角度考虑做了分层服务架构。后来，业务发展越发复杂，从运维、质量等多个角度考量后，逐步演进到微服务架构。这里主要遵循了两个原则：不宜过早的进入到微服务架构的设计中，好的架构是演进出来的不是提前设计出来的。")]),t._v(" "),a("h1",{attrs:{id:"分布式系统实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式系统实践"}},[t._v("#")]),t._v(" 分布式系统实践")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("img",{attrs:{src:r(1875),alt:""}})]),t._v(" "),a("p",[t._v("上图是比较典型的美团技术体系下的分布式系统结构：依托了美团公共组件和服务，完成了分区扩容、容灾和监控的能力。前端流量会通过HLB来分发和负载均衡；在分区内，服务与服务会通过OCTO进行通信，提供服务注册、自动发现、负载均衡、容错、灰度发布等等服务。当然也可以通过消息队列进行通信，例如Kafka、RabbitMQ。在存储层使用Zebra来访问分布式数据库进行读写操作。利用CAT（美团开源的分布式监控系统）进行分布式业务及系统日志的采集、上报和监控。分布式缓存使用Squirrel+Cellar的组合。分布式任务调度则是通过Crane。")]),t._v(" "),a("p",[t._v("在实践过程还要解决几个问题，比较典型的是集群的扩展性，有状态的集群可扩展性相对较差，无法快速扩容机器，无法缓解流量压力。同时，也会出现节点热点的问题，包括资源不均匀、CPU使用不均匀等等。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1876),alt:""}})]),t._v(" "),a("p",[t._v("首先，配送后台技术团队通过架构升级，将有状态节点变成无状态节点，通过并行计算的能力，让小的业务节点去分担计算压力，以此实现快速扩容。")]),t._v(" "),a("p",[t._v("第二是要解决一致性的问题，对于既要写DB也要写缓存的场景，业务写缓存无法保障数据一致性，美团内部主要通过Databus来解决，Databus是一个高可用、低延时、高并发、保证数据一致性的数据库变更实时传输系统。通过Databus上游可以监控业务Binlog变更，通过管道将变更信息传递给ES和其他DB，或者是其他KV系统，利用Databus的高可用特性来保证数据最终是可以同步到其他系统中。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1877),alt:""}})]),t._v(" "),a("p",[t._v("第三是我们一直在花精力解决的事情，就是保障集群高可用，主要从三个方面来入手，事前较多的是做全链路压测评，估峰值容量；周期性的集群健康性检查；随机故障演练（服务、机器、组件）。事中做异常报警（性能、业务指标、可用性）；快速的故障定位（单机故障、集群故障、IDC故障、组件异常、服务异常）；故障前后的系统变更收集。事后重点做系统回滚；扩容、限流、熔断、降级；核武器兜底。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1878),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"单idc的快速部署-容灾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单idc的快速部署-容灾"}},[t._v("#")]),t._v(" 单IDC的快速部署&容灾")]),t._v(" "),a("p",[t._v("单IDC故障之后，入口服务做到故障识别，自动流量切换；单IDC的快速扩容，数据提前同步，服务提前部署，Ready之后打开入口流量；要求所有做数据同步、流量分发的服务，都具备自动故障检测、故障服务自动摘除；按照IDC为单位扩缩容的能力。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1879),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"多中心尝试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多中心尝试"}},[t._v("#")]),t._v(" 多中心尝试")]),t._v(" "),a("p",[t._v("美团IDC以分区为单位，存在资源满排，分区无法扩容。美团的方案是多个IDC组成虚拟中心，以中心为分区的单位；服务无差别的部署在中心内；中心容量不够，直接增加新的IDC来扩容容量。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1880),alt:""}})]),t._v(" "),a("h3",{attrs:{id:"单元化尝试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单元化尝试"}},[t._v("#")]),t._v(" 单元化尝试")]),t._v(" "),a("p",[t._v("相比多中心来说，单元化是进行分区容灾和扩容的更优方案。关于流量路由，美团主要是根据业务特点，采用区域或城市进行路由。数据同步上，异地会出现延迟状况。SET容灾上要保证同本地或异地SET出现问题时，可以快速把SET切换到其他SET上来承担流量。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1881),alt:""}})]),t._v(" "),a("h1",{attrs:{id:"智能物流的核心技术能力和平台沉淀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#智能物流的核心技术能力和平台沉淀"}},[t._v("#")]),t._v(" 智能物流的核心技术能力和平台沉淀")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("机器学习平台，是一站式线下到线上的模型训练和算法应用平台。之所以构建这个平台，目的是要解决算法应用场景多，重复造轮子的矛盾问题，以及线上、线下数据质量不一致。如果流程不明确不连贯，会出现迭代效率低，特征、模型的应用上线部署出现数据质量等障碍问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1882),alt:""}})]),t._v(" "),a("p",[t._v("JARVIS是一个以稳定性保障为目标的智能化业务运维AIOps平台。主要用于处理系统故障时报警源很多，会有大量的重复报警，有效信息很容易被淹没等各种问题。此外，过往小规模分布式集群的运维故障主要靠人和经验来分析和定位，效率低下，处理速度慢，每次故障处理得到的预期不稳定，在有效性和及时性方面无法保证。所以需要AIOps平台来解决这些问题。")]),t._v(" "),a("p",[a("img",{attrs:{src:r(1883),alt:""}})]),t._v(" "),a("h1",{attrs:{id:"未来的挑战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#未来的挑战"}},[t._v("#")]),t._v(" 未来的挑战")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("经过复盘和Review之后，我们发现未来的挑战很大，微服务不再“微”了，业务复杂度提升之后，服务就会变得膨胀。其次，网状结构的服务集群，任何轻微的延迟，都可能导致的网络放大效应。另外复杂的服务拓扑，如何做到故障的快速定位和处理，这也是AIOps需要重点解决的难题。最后，就是单元化之后，从集群为单位的运维到以单元为单位的运维，业给美团业务部署能力带来很大的挑战。")]),t._v(" "),a("h1",{attrs:{id:"作者简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作者简介"}},[t._v("#")]),t._v(" 作者简介")]),t._v(" "),a("hr"),t._v(" "),a("ul",[a("li",[t._v("宋斌，美团资深技术专家，长期参与分布式系统架构、高并发系统稳定性保障相关工作。目前担任即时物流团队后台技术负责人。2013年加入美团，参与过美团外卖C端、即时物流体系从零搭建。现在带领团队负责调度、清结算、LBS、定价等业务系统、算法数据平台、稳定性保障平台等技术平台的研发和运维。最近重点关注AIOps方向，探索在高并发、分布式系统架构下，如何更好的做好系统稳定性保障。")])]),t._v(" "),a("h1",{attrs:{id:"文章来源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文章来源"}},[t._v("#")]),t._v(" 文章来源")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("转载说明:")]),t._v(" "),a("ul",[a("li",[t._v("版权声明：本文为「美团技术团队」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。")]),t._v(" "),a("li",[t._v("原文链接：https://tech.meituan.com/2018/11/22/instant-logistics-distributed-system-architecture.html")]),t._v(" "),a("li",[t._v("本文根据美团资深技术专家宋斌在ArchSummit架构师峰会上的演讲整理而成。)")])])])}),[],!1,null,null,null);a.default=i.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{1460:function(s,a,n){s.exports=n.p+"assets/img/alg-sort-shell-1.330df525.jpg"},1461:function(s,a,n){s.exports=n.p+"assets/img/alg-sort-shell-2.8975786b.jpg"},1462:function(s,a,n){s.exports=n.p+"assets/img/alg-sort-shell-3.6b7f11e7.jpg"},3775:function(s,a,n){"use strict";n.r(a);var t=n(7),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"排序-shell排序-shell-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#排序-shell排序-shell-sort"}},[s._v("#")]),s._v(" 排序 - Shell排序(Shell Sort)")]),s._v(" "),a("p",[s._v("====================================================")]),s._v(" "),a("blockquote",[a("p",[s._v("希尔排序(Shell Sort)是插入排序的一种，它是针对直接插入排序算法的改进。@pdai")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[s._v("希尔排序介绍"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[s._v("希尔排序实现"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("希尔排序的时间复杂度和稳定性"),a("OutboundLink")],1),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6",target:"_blank",rel:"noopener noreferrer"}},[s._v("希尔排序时间复杂度"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("希尔排序稳定性"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码实现"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-shell.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文章"),a("OutboundLink")],1)])]),s._v(" "),a("h1",{attrs:{id:"希尔排序介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序介绍"}},[s._v("#")]),s._v(" 希尔排序介绍")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("希尔排序实质上是一种分组插入方法。它的基本思想是: 对于n个待排序的数列，取一个小于n的整数gap(gap被称为步长)将待排序元素分成若干个组子序列，所有距离为gap的倍数的记录放在同一个组中；然后，对各组内的元素进行直接插入排序。 这一趟排序完成之后，每一个组的元素都是有序的。然后减小gap的值，并重复执行上述的分组和排序。重复这样的操作，当gap=1时，整个数列就是有序的。")]),s._v(" "),a("h1",{attrs:{id:"希尔排序实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序实现"}},[s._v("#")]),s._v(" 希尔排序实现")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("下面以数列{80,30,60,40,20,10,50,70}为例，演示它的希尔排序过程。")]),s._v(" "),a("p",[s._v("第1趟: (gap=4)")]),s._v(" "),a("p",[a("img",{attrs:{src:n(1460),alt:""}})]),s._v(" "),a("p",[s._v("当gap=4时,意味着将数列分为4个组: {80,20},{30,10},{60,50},{40,70}。 对应数列: {80,30,60,40,20,10,50,70} 对这4个组分别进行排序，排序结果: {20,80},{10,30},{50,60},{40,70}。 对应数列:")]),s._v(" "),a("p",[s._v("第2趟: (gap=2)")]),s._v(" "),a("p",[a("img",{attrs:{src:n(1461),alt:""}})]),s._v(" "),a("p",[s._v("当gap=2时,意味着将数列分为2个组: {20,50,80,60}, {10,40,30,70}。 对应数列: {20,10,50,40,80,30,60,70} 注意: {20,50,80,60}实际上有两个有序的数列{20,80}和{50,60}组成。 {10,40,30,70}实际上有两个有序的数列{10,30}和{40,70}组成。 对这2个组分别进行排序，排序结果: {20,50,60,80}, {10,30,40,70}。 对应数列:")]),s._v(" "),a("p",[s._v("第3趟: (gap=1)")]),s._v(" "),a("p",[a("img",{attrs:{src:n(1462),alt:""}})]),s._v(" "),a("p",[s._v("当gap=1时,意味着将数列分为1个组: {20,10,50,30,60,40,80,70} 注意: {20,10,50,30,60,40,80,70}实际上有两个有序的数列{20,50,60,80}和{10,30,40,70}组成。 对这1个组分别进行排序，排序结果:")]),s._v(" "),a("h1",{attrs:{id:"希尔排序的时间复杂度和稳定性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序的时间复杂度和稳定性"}},[s._v("#")]),s._v(" 希尔排序的时间复杂度和稳定性")]),s._v(" "),a("hr"),s._v(" "),a("h3",{attrs:{id:"希尔排序时间复杂度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序时间复杂度"}},[s._v("#")]),s._v(" 希尔排序时间复杂度")]),s._v(" "),a("p",[s._v("希尔排序的时间复杂度与增量(即，步长gap)的选取有关。例如，当增量为1时，希尔排序退化成了直接插入排序，此时的时间复杂度为O(N²)，而Hibbard增量的希尔排序的时间复杂度为O(N3/2)。")]),s._v(" "),a("h3",{attrs:{id:"希尔排序稳定性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#希尔排序稳定性"}},[s._v("#")]),s._v(" 希尔排序稳定性")]),s._v(" "),a("p",[s._v("希尔排序是按照不同步长对元素进行插入排序，当刚开始元素很无序的时候，步长最大，所以插入排序的元素个数很少，速度很快；当元素基本有序了，步长很小， 插入排序对于有序的序列效率很高。所以，希尔排序的时间复杂度会比O(n^2)好一些。由于多次插入排序，我们知道一次插入排序是稳定的，不会改变相同元素的相对顺序，但"),a("strong",[s._v("在不同的插入排序过程中，相同的元素可能在各自的插入排序中移动，最后其稳定性就会被打乱，所以shell排序是不稳定的")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("算法稳定性")]),s._v(" -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！")]),s._v(" "),a("h1",{attrs:{id:"代码实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * 希尔排序: Java\n *\n * @author skywang\n * @date 2014/03/11\n */\n\npublic class ShellSort {\n\n    /**\n     * 希尔排序\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组的长度\n     */\n    public static void shellSort1(int[] a, int n) {\n\n        // gap为步长，每次减为原来的一半。\n        for (int gap = n / 2; gap > 0; gap /= 2) {\n\n            // 共gap个组，对每一组都执行直接插入排序\n            for (int i = 0 ;i < gap; i++) {\n\n                for (int j = i + gap; j < n; j += gap) {\n\n                    // 如果a[j] < a[j-gap]，则寻找a[j]位置，并将后面数据的位置都后移。\n                    if (a[j] < a[j - gap]) {\n\n                        int tmp = a[j];\n                        int k = j - gap;\n                        while (k >= 0 && a[k] > tmp) {\n                            a[k + gap] = a[k];\n                            k -= gap;\n                        }\n                        a[k + gap] = tmp;\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * 对希尔排序中的单个组进行排序\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组总的长度\n     *     i -- 组的起始位置\n     *     gap -- 组的步长\n     *\n     *  组是"从i开始，将相隔gap长度的数都取出"所组成的！\n     */\n    public static void groupSort(int[] a, int n, int i,int gap) {\n\n        for (int j = i + gap; j < n; j += gap) {\n\n            // 如果a[j] < a[j-gap]，则寻找a[j]位置，并将后面数据的位置都后移。\n            if (a[j] < a[j - gap]) {\n\n                int tmp = a[j];\n                int k = j - gap;\n                while (k >= 0 && a[k] > tmp) {\n                    a[k + gap] = a[k];\n                    k -= gap;\n                }\n                a[k + gap] = tmp;\n            }\n        }\n    }\n\n    /**\n     * 希尔排序\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组的长度\n     */\n    public static void shellSort2(int[] a, int n) {\n        // gap为步长，每次减为原来的一半。\n        for (int gap = n / 2; gap > 0; gap /= 2) {\n            // 共gap个组，对每一组都执行直接插入排序\n            for (int i = 0 ;i < gap; i++)\n                groupSort(a, n, i, gap);\n        }\n    }\n\n    public static void main(String[] args) {\n        int i;\n        int a[] = {80,30,60,40,20,10,50,70};\n\n        System.out.printf("before sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n\n        shellSort1(a, a.length);\n        //shellSort2(a, a.length);\n\n        System.out.printf("after  sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br")])]),a("h1",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("提示")]),s._v(" "),a("p",[s._v("本文主要参考至 https://www.cnblogs.com/skywang12345/p/3597597.html, 在此基础上做了内容的增改。)")])])}),[],!1,null,null,null);a.default=r.exports}}]);
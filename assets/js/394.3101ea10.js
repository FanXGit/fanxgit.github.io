(window.webpackJsonp=window.webpackJsonp||[]).push([[394],{3494:function(t,a,s){t.exports=s.p+"assets/img/mybatis整体架构.8a1556c6.png"},3495:function(t,a,s){t.exports=s.p+"assets/img/mybatis执行的大致过程.2b9ba9b5.png"},4236:function(t,a,s){"use strict";s.r(a);var i=s(7),r=Object(i.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://mybatis.org/mybatis-3/zh/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("mybatis官网文档"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("MyBatis")]),t._v(" 是一款旨在帮助开发人员屏蔽底层重复性原生 "),a("strong",[t._v("JDBC")]),t._v(" 代码的持久化框架，其支持通过映射文件配置或注解将 "),a("strong",[t._v("ResultSet")]),t._v(" 映射为 "),a("strong",[t._v("Java")]),t._v(" 对象。相对于其它 "),a("strong",[t._v("ORM")]),t._v(" 框架，"),a("strong",[t._v("MyBatis")]),t._v(" 更为轻量级，支持定制化 SQL 和动态 SQL，方便优化查询性能，同时包含了良好的缓存机制。")]),t._v(" "),a("h1",{attrs:{id:"mybatis-整体架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mybatis-整体架构"}},[t._v("#")]),t._v(" MyBatis 整体架构")]),t._v(" "),a("p",[a("img",{attrs:{src:s(3494),alt:"mybatis整体架构"}})]),t._v(" "),a("h2",{attrs:{id:"_1、基础支持层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、基础支持层"}},[t._v("#")]),t._v(" 1、基础支持层")]),t._v(" "),a("p",[t._v("负责最基础的功能支撑，包括连接管理、事务管理、配置加载和缓存处理，这些都是共用的东西，将他们抽取出来作为最基础的组件。为上层的数据处理层提供最基础的支撑。")]),t._v(" "),a("p",[t._v("基础支持层由以下模块组成:")]),t._v(" "),a("ul",[a("li",[t._v("反射模块：提供封装的反射 API，方便上层调用。 位于mybatis 的reflection包下")]),t._v(" "),a("li",[t._v("类型转换：为简化配置文件提供了别名机制，并且实现了 Java 类型和 JDBC 类型的互转。位于mybatis 的type包下")]),t._v(" "),a("li",[t._v("日志模块：能够集成多种第三方日志框架。位于mybatis 的logging包下")]),t._v(" "),a("li",[t._v("资源加载模块：对类加载器进行封装，提供加载类文件和其它资源文件的功能。位于mybatis 的io包下")]),t._v(" "),a("li",[t._v("数据源模块：提供数据源实现并能够集成第三方数据源模块。位于mybatis 的datasource包下")]),t._v(" "),a("li",[t._v("事务管理：可以和 Spring 集成开发，对事务进行管理。位于mybatis 的transaction包下")]),t._v(" "),a("li",[t._v("缓存模块：提供一级缓存和二级缓存，将部分请求拦截在缓存层。位于mybatis 的cache包下")]),t._v(" "),a("li",[t._v("Binding 模块：在调用 SqlSession 相应方法执行数据库操作时，需要指定映射文件中的 SQL 节点，MyBatis 通过 Binding 模块将自定义 Mapper 接口与映射文件关联，避免拼写等错误导致在运行时才发现相应异常。位于mybatis 的binding包下")])]),t._v(" "),a("h2",{attrs:{id:"_2、核心处理层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、核心处理层"}},[t._v("#")]),t._v(" 2、核心处理层")]),t._v(" "),a("p",[t._v("负责具体的SQL查找、SQL解析、SQL解析和执行结果映射处理等。它主要的目的是根据调用的请求完成一次数据库操作。")]),t._v(" "),a("p",[t._v("核心处理层由以下模块组成:")]),t._v(" "),a("ul",[a("li",[t._v("配置解析：MyBatis 初始化时会加载配置文件、映射文件和 Mapper 接口的注解信息，解析后会以对象的形式保存到 Configuration 对象中。")]),t._v(" "),a("li",[t._v("SQL 解析与 scripting 模块：MyBatis 支持通过配置实现动态 SQL，即根据不同入参生成 SQL。")]),t._v(" "),a("li",[t._v("SQL 执行与结果解析：Executor 负责维护缓存和事务管理，并将数据库相关操作委托给 StatementHandler，ParmeterHadler 负责完成 SQL 语句的实参绑定并通过 Statement 对象执行 SQL，通过 ResultSet 返回结果，交由 ResultSetHandler 处理。")]),t._v(" "),a("li",[t._v("插件：支持开发者通过插件接口对 MyBatis 进行扩展。\n以下是mybatis执行 SQL 语句的大致过程。\n"),a("img",{attrs:{src:s(3495),alt:"大致过程"}})])]),t._v(" "),a("h2",{attrs:{id:"_3、接口层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、接口层"}},[t._v("#")]),t._v(" 3、接口层")]),t._v(" "),a("p",[t._v("其核心是SqlSession接口， 该接口中定义了MyBatis暴露给应用程序调用用的API，也就是上层应用于Mybatis交互的桥梁。接口层在接收到调用请求时，会调用核心处理层的相应模块来完成具体的数据库操作。")]),t._v(" "),a("h1",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("1、mybatis 在初始化的时候,根据使用mybatis的约束 ,将mybatis的配置文件、mapper.xml文件、mapper接口、插件、bean对象(用于别名映射)....等文件加载到内存，解析成Configuration对象，便于执行查询语句的时候使用。\n2、通过解析配置文件生成  SqlSessionFactoryBuilder -> SqlSessionFactory —> SqlSession  等对象。")])])}),[],!1,null,null,null);a.default=r.exports}}]);
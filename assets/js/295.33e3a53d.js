(window.webpackJsonp=window.webpackJsonp||[]).push([[295],{1199:function(a,r,s){a.exports=s.p+"assets/img/springboot-x-war-1.9d45edc7.png"},1200:function(a,r,s){a.exports=s.p+"assets/img/springboot-x-war-2.67c5ea8e.png"},1201:function(a,r,s){a.exports=s.p+"assets/img/springboot-x-war-3.1d21d8f3.png"},3720:function(a,r,s){"use strict";s.r(r);var t=s(7),n=Object(t.a)({},(function(){var a=this,r=a._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"springboot应用部署-打包成war部署"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#springboot应用部署-打包成war部署"}},[a._v("#")]),a._v(" SpringBoot应用部署 - 打包成war部署")]),a._v(" "),r("p",[a._v("=======================================================")]),a._v(" "),r("blockquote",[r("p",[a._v("前文我们知道SpringBoot web项目默认打包成jar部署是非常方便的，那什么样的场景下还会打包成war呢？本文主要介绍SpringBoot应用打包成war包的示例。@pdai")])]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#springboot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2---%E6%89%93%E5%8C%85%E6%88%90war%E9%83%A8%E7%BD%B2"}},[a._v("SpringBoot应用部署 - 打包成war部署")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E6%A6%82%E8%BF%B0"}},[a._v("概述")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%89%93%E5%8C%85%E6%88%90war"}},[a._v("打包成war")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E5%B0%86pom%E4%B8%ADpackaging%E8%AE%BE%E7%BD%AE%E4%B8%BAwar%E7%B1%BB%E5%9E%8B"}},[a._v("将pom中packaging设置为war类型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E7%A7%BB%E9%99%A4%E5%86%85%E5%B5%8C%E7%9A%84tomcat%E5%B9%B6%E5%A2%9E%E5%8A%A0servlet-api%E7%9A%84%E4%BE%9D%E8%B5%96%E5%8C%85"}},[a._v("移除内嵌的Tomcat，并增加servlet-api的依赖包")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%90%AF%E5%8A%A8%E7%B1%BB%E7%BB%A7%E6%89%BFspringbootservletinitialize"}},[a._v("启动类继承SpringBootServletInitialize")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#maven%E6%89%93%E5%8C%85%E6%88%90war%E7%9A%84%E6%8F%92%E4%BB%B6"}},[a._v("maven打包成war的插件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E6%89%93%E5%8C%85%E6%B5%8B%E8%AF%95"}},[a._v("打包测试")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[a._v("进一步理解")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E5%B0%86%E4%B8%89%E6%96%B9jar%E6%89%93%E5%8C%85%E8%BF%9B%E6%9D%A5"}},[a._v("如何将三方jar打包进来？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E6%89%93%E5%8C%85%E6%88%90jar%E5%8C%85%E5%91%A2"}},[a._v("如何打包成jar包呢？")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E6%89%93%E5%8C%85%E6%88%90docker%E9%95%9C%E5%83%8F%E5%91%A2"}},[a._v("如何打包成docker镜像呢？")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[a._v("示例源码")])])])])]),a._v(" "),r("h1",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),r("hr"),a._v(" "),r("blockquote",[r("p",[a._v("前文我们知道SpringBoot web项目默认打包成jar部署是非常方便的，那什么样的场景下还会打包成war呢？")])]),a._v(" "),r("p",[a._v("这主要是由于在早期没有SpringBoot时，一些老的项目已经通过Tomcat独立部署war包，并构建了相应的部署体系和闭环。而且对于老的成熟的项目不期望在投入精力去升级和改造，只需要最小大家的保证运行稳定，为了投入和产出的平衡。")]),a._v(" "),r("p",[a._v("在这种情况下，如果有一些必要性的更新（比如高危漏洞的修复），需要编译成war包。")]),a._v(" "),r("h1",{attrs:{id:"打包成war"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打包成war"}},[a._v("#")]),a._v(" 打包成war")]),a._v(" "),r("hr"),a._v(" "),r("blockquote",[r("p",[a._v("这里以一个Helloworld项目（"),r("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-hello-world.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringBoot入门 - 创建第一个Hello world工程"),r("OutboundLink")],1),a._v("）为例打包成war。")])]),a._v(" "),r("h3",{attrs:{id:"将pom中packaging设置为war类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#将pom中packaging设置为war类型"}},[a._v("#")]),a._v(" 将pom中packaging设置为war类型")]),a._v(" "),r("p",[a._v("默认是jar类型，需要添加或者改成war类型")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("<groupId>tech.pdai</groupId>\n<artifactId>103-springboot-demo-helloworld-build-war</artifactId>\n<packaging>war</packaging>\n<version>1.0-SNAPSHOT</version>\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br")])]),r("h3",{attrs:{id:"移除内嵌的tomcat-并增加servlet-api的依赖包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#移除内嵌的tomcat-并增加servlet-api的依赖包"}},[a._v("#")]),a._v(" 移除内嵌的Tomcat，并增加servlet-api的依赖包")]),a._v(" "),r("p",[a._v("因为默认内嵌了tomcat，所以需要移除；并增加servlet-api相关的包。")]),a._v(" "),r("p",[r("img",{attrs:{src:s(1199),alt:""}})]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <exclusions>\n        <exclusion>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n            <groupId>org.springframework.boot</groupId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>javax.servlet</groupId>\n    <artifactId>javax.servlet-api</artifactId>\n    <scope>provided</scope>\n</dependency>\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br")])]),r("h3",{attrs:{id:"启动类继承springbootservletinitialize"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#启动类继承springbootservletinitialize"}},[a._v("#")]),a._v(" 启动类继承SpringBootServletInitialize")]),a._v(" "),r("p",[a._v("修改项目默认启动方式，启动类继承SpringBootServletInitializer类并重写configure()方法")]),a._v(" "),r("p",[r("img",{attrs:{src:s(1200),alt:""}})]),a._v(" "),r("p",[a._v("完整代码如下")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('/**\n * @author pdai\n */\n@SpringBootApplication\n@RestController\npublic class SpringBootHelloWorldApplication extends SpringBootServletInitializer {\n\n    /**\n     * main interface.\n     *\n     * @param args args\n     */\n    public static void main(String[] args) {\n        SpringApplication.run(SpringBootHelloWorldApplication.class, args);\n    }\n\n    /**\n     * hello world.\n     *\n     * @return hello\n     */\n    @GetMapping("/hello")\n    public ResponseEntity<String> hello() {\n        return new ResponseEntity<>("hello world", HttpStatus.OK);\n    }\n\n    @Override\n    protected SpringApplicationBuilder configure(SpringApplicationBuilder builder) {\n        return builder.sources(SpringBootHelloWorldApplication.class);\n    }\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br")])]),r("h3",{attrs:{id:"maven打包成war的插件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#maven打包成war的插件"}},[a._v("#")]),a._v(" maven打包成war的插件")]),a._v(" "),r("p",[a._v("使用maven-war-plugin插件进行打包")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("<plugin>\n    <groupId>org.apache.maven.plugins</groupId>\n    <artifactId>maven-war-plugin</artifactId>\n    <version>3.3.1</version>\n    <configuration>\n        <failOnMissingWebXml>false</failOnMissingWebXml>\n    </configuration>\n</plugin>\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br")])]),r("h3",{attrs:{id:"打包测试"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#打包测试"}},[a._v("#")]),a._v(" 打包测试")]),a._v(" "),r("p",[a._v("通过maven 进行打包测试")]),a._v(" "),r("p",[r("img",{attrs:{src:s(1201),alt:""}})]),a._v(" "),r("h1",{attrs:{id:"进一步理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[a._v("#")]),a._v(" 进一步理解")]),a._v(" "),r("hr"),a._v(" "),r("blockquote",[r("p",[a._v("通过几个问题进一步理解。")])]),a._v(" "),r("h3",{attrs:{id:"如何将三方jar打包进来"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何将三方jar打包进来"}},[a._v("#")]),a._v(" 如何将三方jar打包进来？")]),a._v(" "),r("blockquote",[r("p",[a._v("在项目中我们经常需要使用第三方的Jar，比如某些SDK，这些SDK没有直接发布到公开的maven仓库中，这种情况下如何使用这些三方JAR呢？")])]),a._v(" "),r("p",[a._v("请参看："),r("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-deploy-jar-3rd.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringBoot应用部署 - 使用第三方JAR包"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"如何打包成jar包呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何打包成jar包呢"}},[a._v("#")]),a._v(" 如何打包成jar包呢？")]),a._v(" "),r("p",[a._v("请参看："),r("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-deploy-jar.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringBoot应用部署 - 打包成jar部署"),r("OutboundLink")],1)]),a._v(" "),r("h3",{attrs:{id:"如何打包成docker镜像呢"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#如何打包成docker镜像呢"}},[a._v("#")]),a._v(" 如何打包成docker镜像呢？")]),a._v(" "),r("p",[a._v("请参看："),r("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-deploy-docker.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("SpringBoot应用部署 - 打包成docker镜像"),r("OutboundLink")],1)]),a._v(" "),r("h1",{attrs:{id:"示例源码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[a._v("#")]),a._v(" 示例源码")]),a._v(" "),r("hr"),a._v(" "),r("p",[a._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);r.default=n.exports}}]);
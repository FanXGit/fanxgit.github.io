(window.webpackJsonp=window.webpackJsonp||[]).push([[386],{285:function(t,e,a){t.exports=a.p+"assets/img/tomcat-x-design-2-1.d3a4ecfa.jpeg"},286:function(t,e,a){t.exports=a.p+"assets/img/tomcat-x-start-1.e6eda8c2.png"},4193:function(t,e,a){"use strict";a.r(e);var r=a(7),o=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"♥tomcat源码详解知识体系详解♥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#♥tomcat源码详解知识体系详解♥"}},[t._v("#")]),t._v(" ♥Tomcat源码详解知识体系详解♥")]),t._v(" "),e("p",[t._v("===========================================")]),t._v(" "),e("blockquote",[e("p",[t._v("本系列主要对Tomcat源码知识体系进行深入理解。")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#tomcat%E6%BA%90%E7%A0%81%E8%AF%A6%E8%A7%A3%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB%E8%AF%A6%E8%A7%A3"}},[t._v("♥Tomcat源码详解知识体系详解♥")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB"}},[t._v("知识体系")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[t._v("参考文章")])])])])]),t._v(" "),e("h1",{attrs:{id:"知识体系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#知识体系"}},[t._v("#")]),t._v(" 知识体系")]),t._v(" "),e("hr"),t._v(" "),e("p",[e("em",[t._v("结构图")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(285),alt:""}})]),t._v(" "),e("p",[e("em",[t._v("初始化和启动流程")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(286),alt:""}})]),t._v(" "),e("p",[e("em",[t._v("相关文章")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-design-web-container.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 如何设计一个简单的web容器"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("在学习Tomcat前，很多人先入为主的对它的认知是巨复杂的；所以第一步，在学习它之前，要打破这种观念，我们通过学习如何设计一个最基本的web容器来看它需要考虑什么；进而在真正学习Tomcat时，多把重点放在它的顶层设计上，而不是某一块代码上, 思路永远比具体实现重要的多。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-arch.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 理解Tomcat架构设计"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("前文我们已经介绍了一个简单的Servlet容器是如何设计出来，我们就可以开始正式学习Tomcat了，在学习开始，我们有必要站在高点去看看Tomcat的架构设计。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-sourcecode.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 源码分析准备和分析入口"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文我们介绍了Tomcat的架构设计，接下来我们便可以下载源码以及寻找源码入口了。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-start.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 启动过程：初始化和启动流程"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("在有了Tomcat架构设计和源码入口以后，我们便可以开始真正读源码了。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-classloader.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 启动过程:类加载机制详解"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文我们讲了Tomcat在初始化时会初始化classLoader。本文将具体分析Tomcat的类加载机制，特别是区别于传统的"),e("code",[t._v("双亲委派模型")]),t._v("的加载机制。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-catalina.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 启动过程:Catalina的加载"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("通过前两篇文章，我们知道了"),e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-classloader.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat的类加载机制"),e("OutboundLink")],1),t._v("和"),e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-start.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("整体的组件加载流程"),e("OutboundLink")],1),t._v("；我们也知道通过Bootstrap初始化的catalinaClassLoader加载了Catalina，那么进而引入了一个问题就是Catalina是如何加载的呢？加载了什么呢？本文将带你进一步分析。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-lifecycle.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 组件生命周期管理:LifeCycle"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文中，我们已经知道Catalina初始化了Server（它调用了 Server 类的 init 和 start 方法来启动 Tomcat）；你会发现Server是Tomcat的配置文件server.xml的顶层元素，那这个阶段其实我们已经进入到Tomcat内部组件的详解；这时候有一个问题，这么多组件是如何管理它的生命周期的呢？")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-jmx.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 组件拓展管理:JMX和MBean"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("我们在前文中讲Lifecycle以及组件，怎么会突然讲JMX和MBean呢？本文通过承接上文Lifecycle讲Tomcat基于JMX的实现。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-listener.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 事件的监听机制：观察者模式"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("本文承接上文中Lifecycle中实现，引出Tomcat的监听机制。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-server.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Server的设计和实现: StandardServer"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("基于前面的几篇文章，我们终于可以总体上梳理Server的具体实现了，这里体现在StandardServer具体的功能实现上。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-service.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Service的设计和实现: StandardService"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文讲了Server的具体实现了，本文主要讲Service的设计和实现；我们从上文其实已经知道Server中包含多个service了。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-executor.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - 线程池的设计与实现：StandardThreadExecutor"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文中我们研究了下Service的设计和实现，StandardService中包含Executor的调用；这个比较好理解，Tomcat需要并发处理用户的请求，自然而言就想到线程池，那么Tomcat中线程池（Executor）具体是如何实现的？本文带你继续深度解析。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-container.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Request请求处理: Container设计"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("在理解了Server，Service和Executor后，我们可以进入Request处理环节了。我们知道客户端是可以发起多个请求的，Tomcat也是可以支持多个webapp的，有多个上下文，且一个webapp中可以有多个Servlet...等等，那么Tomcat是如何设计组件来支撑请求处理的呢？本节文将介绍Tomcat的Container设计。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-container-engine.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Container容器之Engine：StandardEngine"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文已经知道Container的整体结构和设计，其中Engine其实就是Servlet Engine，负责处理request的顶层容器。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-container-pipline.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Container的管道机制：责任链模式"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("上文中介绍了Engine的设计，其中有Pipline相关内容没有介绍，本文将向你阐述Tomcat的管道机制以及它要解决的问题。")])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/tomcat/tomcat-x-connector.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat - Request请求处理过程：Connector"),e("OutboundLink")],1),t._v(" "),e("ul",[e("li",[t._v("本文主要介绍request请求的处理过程。")])])])]),t._v(" "),e("h1",{attrs:{id:"参考文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),e("hr"),t._v(" "),e("ul",[e("li",[t._v("Tomcat - 如何设计一个最简单的web容器\n"),e("ul",[e("li",[t._v("https://segmentfault.com/q/1010000024466207?utm_source=tag-newest")]),t._v(" "),e("li",[t._v("https://www.jianshu.com/p/e438d2f1e4c2")])])]),t._v(" "),e("li",[t._v("Tomcat整体架构\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/2b6359daf5c8")]),t._v(" "),e("li",[t._v("https://www.jianshu.com/p/8b7f81bd5e26")]),t._v(" "),e("li",[t._v("https://www.cnblogs.com/wangjiming/p/12519306.html")]),t._v(" "),e("li",[t._v("https://www.cnblogs.com/tanshaoshenghao/p/10932306.html")])])]),t._v(" "),e("li",[t._v("Tomcat源码下载和源码入口\n"),e("ul",[e("li",[t._v("https://tomcat.apache.org/download-90.cgi")]),t._v(" "),e("li",[t._v("https://www.cnblogs.com/tanshaoshenghao/p/10932306.html")])])]),t._v(" "),e("li",[t._v("Tomcat - Tomcat启动过程：Bootstrap和Catina详解\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/2ec610e923ff")])])]),t._v(" "),e("li",[t._v("Tomcat - Tomcat启动过程：Tomcat中类加载\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/51b2c50c58eb")]),t._v(" "),e("li",[t._v("https://www.jianshu.com/p/abf6fd4531e7")])])]),t._v(" "),e("li",[t._v("Tomcat - Tomcat启动过程：生命周期Lifecycle\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/2a9ffbd00724")])])]),t._v(" "),e("li",[t._v("Tomcat - Tomcat启动过程：组件管理JMX\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/d417f308f4f5")])])]),t._v(" "),e("li",[t._v("Tomcat - 连接器Connector详解\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/f67f613ebc79")])])]),t._v(" "),e("li",[t._v("Tomcat - 请求过程详解\n"),e("ul",[e("li",[t._v("https://www.jianshu.com/p/857baa251902")])])]),t._v(" "),e("li",[t._v("Tomcat - 设计模式\n"),e("ul",[e("li",[t._v("https://developer.ibm.com/zh/articles/j-lo-tomcat2/")]),t._v(" "),e("li",[t._v("https://blog.csdn.net/Allen202/article/details/91346855")])])])]),t._v(" "),e("p",[t._v("系列")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("https://www.jianshu.com/p/c74d2df8bc8a")])]),t._v(" "),e("li",[e("p",[t._v("https://www.jianshu.com/nb/18936835")])]),t._v(" "),e("li",[e("p",[t._v("https://segmentfault.com/u/keguan/articles)")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);
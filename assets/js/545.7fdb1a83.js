(window.webpackJsonp=window.webpackJsonp||[]).push([[545],{3697:function(s,n,e){"use strict";e.r(n);var a=e(7),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"springboot集成redis-redis分布式锁的实现之jedis-setnxpx-lua"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成redis-redis分布式锁的实现之jedis-setnxpx-lua"}},[s._v("#")]),s._v(" SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua)")]),s._v(" "),n("blockquote",[n("p",[s._v("Redis实际使用场景最为常用的还有通过Redis实现分布式锁。本文主要介绍Redis实现分布式锁。@pdai")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90redis---redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%9A%84%E5%AE%9E%E7%8E%B0%E4%B9%8Bjedissetnxpxlua"}},[s._v("SpringBoot集成Redis - Redis分布式锁的实现之Jedis(setNXPX+Lua)")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87"}},[s._v("知识准备")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F"}},[s._v("什么是分布式锁，分布式锁有哪些实现方式？")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#redis%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E6%9C%89%E5%93%AA%E4%BA%9B%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F"}},[s._v("Redis的分布式锁有哪些实现方式？")])])])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E6%A1%88%E4%BE%8B"}},[s._v("实现案例")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E5%AE%9A%E4%B9%89redis%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E7%B1%BB"}},[s._v("定义Redis的分布式锁类")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%AE%9A%E4%B9%89aop%E6%8B%A6%E6%88%AA%E7%82%B9"}},[s._v("定义AOP拦截点")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%AE%9A%E4%B9%89aop%E5%88%87%E9%9D%A2"}},[s._v("定义AOP切面")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%88%87%E9%9D%A2%E4%BD%BF%E7%94%A8"}},[s._v("切面使用")])])])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[s._v("示例源码")])])])])]),s._v(" "),n("h1",{attrs:{id:"知识准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[s._v("#")]),s._v(" 知识准备")]),s._v(" "),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("需要了解为何要用分布式锁，以及分布式锁常见的实现方式；以及如何通过Redis实现分布式锁的几种方式。")])]),s._v(" "),n("h3",{attrs:{id:"什么是分布式锁-分布式锁有哪些实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式锁-分布式锁有哪些实现方式"}},[s._v("#")]),s._v(" 什么是分布式锁，分布式锁有哪些实现方式？")]),s._v(" "),n("p",[s._v("分布式锁相关的内容请参考 "),n("a",{attrs:{href:"https://pdai.tech/md/arch/arch-z-lock.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("分布式系统 - 分布式锁及实现方案"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"redis的分布式锁有哪些实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redis的分布式锁有哪些实现方式"}},[s._v("#")]),s._v(" Redis的分布式锁有哪些实现方式？")]),s._v(" "),n("blockquote",[n("p",[s._v("主要有两种思路")])]),s._v(" "),n("ul",[n("li",[s._v("单个Redis实例：setnx(key,当前时间+过期时间) + Lua")]),s._v(" "),n("li",[s._v("Redis集群模式：Redlock")])]),s._v(" "),n("p",[s._v("在实现使用时，由于很多redis客户端包含了上述实现方式，我们可以通过redis客户端进行，更多可以看"),n("a",{attrs:{href:"https://pdai.tech/md/arch/arch-z-lock.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("分布式系统 - 分布式锁及实现方案"),n("OutboundLink")],1)]),s._v(" "),n("h1",{attrs:{id:"实现案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现案例"}},[s._v("#")]),s._v(" 实现案例")]),s._v(" "),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("本案例主要介绍 基于Jedis客户端下通过： "),n("strong",[s._v("setnx(key,当前时间+过期时间) + Lua")]),s._v(" 实现分布式锁")])]),s._v(" "),n("h3",{attrs:{id:"定义redis的分布式锁类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义redis的分布式锁类"}},[s._v("#")]),s._v(" 定义Redis的分布式锁类")]),s._v(" "),n("blockquote",[n("p",[s._v("（具体看"),n("a",{attrs:{href:"https://pdai.tech/md/arch/arch-z-lock.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("分布式系统 - 分布式锁及实现方案"),n("OutboundLink")],1),s._v(" 中Redis实现分布式锁的部分）")])]),s._v(" "),n("p",[n("strong",[s._v("加锁")]),s._v("： set NX PX + 重试 + 重试间隔")]),s._v(" "),n("p",[s._v("向Redis发起如下命令: "),n("code",[s._v("SET productId:lock 0xx9p03001 NX PX 30000")]),s._v(' 其中，"productId"由自己定义，可以是与本次业务有关的id，"0xx9p03001"是一串随机值，必须保证全局唯一(原因在后文中会提到)，“NX"指的是当且仅当key(也就是案例中的"productId:lock”)在Redis中不存在时，返回执行成功，否则执行失败。"PX 30000"指的是在30秒后，key将被自动删除。执行命令后返回成功，表明服务成功的获得了锁。')]),s._v(" "),n("p",[n("strong",[s._v("解锁")]),s._v("：采用lua脚本")]),s._v(" "),n("p",[s._v("在删除key之前，一定要判断服务A持有的value与Redis内存储的value是否一致。如果贸然使用服务A持有的key来删除锁，则会误将服务B的锁释放掉。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('if redis.call("get", KEYS[1])==ARGV[1] then\n\treturn redis.call("del", KEYS[1])\nelse\n\treturn 0\nend\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("具体的封装类RedisDistributedLock如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package tech.pdai.springboot.redis.jedis.lock.lock;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.data.redis.core.RedisCallback;\nimport org.springframework.data.redis.core.StringRedisTemplate;\nimport redis.clients.jedis.Jedis;\nimport redis.clients.jedis.JedisCluster;\nimport redis.clients.jedis.commands.JedisCommands;\nimport redis.clients.jedis.params.SetParams;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.UUID;\n\n/**\n * @author pdai\n */\n@Slf4j\npublic class RedisDistributedLock {\n\n    /**\n     * lua script for unlock.\n     */\n    private static final String UNLOCK_LUA;\n\n    static {\n        StringBuilder sb = new StringBuilder();\n        sb.append("if redis.call(\\"get\\",KEYS[1]) == ARGV[1] ");\n        sb.append("then ");\n        sb.append("    return redis.call(\\"del\\",KEYS[1]) ");\n        sb.append("else ");\n        sb.append("    return 0 ");\n        sb.append("end ");\n        UNLOCK_LUA = sb.toString();\n    }\n\n    /**\n     * unique lock flag based on thread local.\n     */\n    private final ThreadLocal<String> lockFlag = new ThreadLocal<>();\n\n    private final StringRedisTemplate redisTemplate;\n\n    public RedisDistributedLock(StringRedisTemplate redisTemplate) {\n        this.redisTemplate = redisTemplate;\n    }\n\n    public boolean lock(String key, long expire, int retryTimes, long retryDuration) {\n        // use JedisCommands instead of setIfAbsense\n        boolean result = setRedis(key, expire);\n\n        // retry if needed\n        while ((!result) && retryTimes-- > 0) {\n            try {\n                log.debug("lock failed, retrying..." + retryTimes);\n                Thread.sleep(retryDuration);\n            } catch (Exception e) {\n                return false;\n            }\n\n            // use JedisCommands instead of setIfAbsense\n            result = setRedis(key, expire);\n        }\n        return result;\n    }\n\n    private boolean setRedis(String key, long expire) {\n        try {\n            RedisCallback<String> redisCallback = connection -> {\n                JedisCommands commands = (JedisCommands) connection.getNativeConnection();\n                String uuid = UUID.randomUUID().toString(); // change to distribute UUID generation.\n                lockFlag.set(uuid);\n                return commands.set(key, uuid, SetParams.setParams().nx().px(expire));\n            };\n            String result = redisTemplate.execute(redisCallback);\n            return !StringUtils.isEmpty(result);\n        } catch (Exception e) {\n            log.error("set redis occurred an exception", e);\n        }\n        return false;\n    }\n\n    public boolean unlock(String key) {\n        boolean success = false;\n        try {\n            List<String> keys = new ArrayList<>();\n            keys.add(key);\n            List<String> args = new ArrayList<>();\n            args.add(lockFlag.get());\n\n            // use lua script\n            RedisCallback<Long> redisCallback = connection -> {\n                Object nativeConnection = connection.getNativeConnection();\n\n                if (nativeConnection instanceof JedisCluster) { // cluster mode\n                    return (Long) ((JedisCluster) nativeConnection).eval(UNLOCK_LUA, keys, args);\n                } else if (nativeConnection instanceof Jedis) { // single mode\n                    return (Long) ((Jedis) nativeConnection).eval(UNLOCK_LUA, keys, args);\n                }\n                return 0L;\n            };\n            Long result = redisTemplate.execute(redisCallback);\n            success = result != null && result > 0;\n        } catch (Exception e) {\n            log.error("release lock occurred an exception", e);\n        } finally {\n            if (success) {\n                lockFlag.remove();\n            }\n        }\n        return success;\n    }\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br")])]),n("h3",{attrs:{id:"定义aop拦截点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义aop拦截点"}},[s._v("#")]),s._v(" 定义AOP拦截点")]),s._v(" "),n("p",[s._v("定义RedisLock注解")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package tech.pdai.springboot.redis.jedis.lock.annotation;\n\nimport java.lang.annotation.*;\n\n/**\n * @author pdai\n */\n@Target({ElementType.METHOD})\n@Retention(RetentionPolicy.RUNTIME)\n@Inherited\npublic @interface RedisLock {\n\n    /**\n     * redis lock key as value.\n     *\n     * @return lock key\n     */\n    String value() default "";\n\n    /**\n     * how long we hold the lock.\n     *\n     * @return mills\n     */\n    long expireMills() default 30000;\n\n    /**\n     * if lock failed, do we need to retry, default retry 0 means NO retry.\n     *\n     * @return retry times\n     */\n    int retryTimes() default 0;\n\n    /**\n     * when we retry to get lock, what\'s the duration for next retry.\n     *\n     * @return mills\n     */\n    long retryDurationMills() default 200;\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br")])]),n("h3",{attrs:{id:"定义aop切面"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义aop切面"}},[s._v("#")]),s._v(" 定义AOP切面")]),s._v(" "),n("p",[s._v("定义AOP切面类RedisLockAspect，用来拦截@RedisLock注解方法，并调用RedisDistributedLock对方法加锁处理。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package tech.pdai.springboot.redis.jedis.lock.lock;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.commons.lang3.StringUtils;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.aspectj.lang.reflect.MethodSignature;\nimport org.springframework.context.annotation.Configuration;\nimport tech.pdai.springboot.redis.jedis.lock.annotation.RedisLock;\n\nimport javax.annotation.Resource;\nimport java.lang.reflect.Method;\nimport java.util.Arrays;\n\n/**\n * @author pdai\n */\n@Slf4j\n@Aspect\n@Configuration\npublic class RedisLockAspect {\n\n    /**\n     * lock impl.\n     */\n    @Resource\n    private RedisDistributedLock distributedLock;\n\n    /**\n     * AOP, around PJP.\n     *\n     * @param pjp ProceedingJoinPoint\n     * @return Object\n     * @throws Throwable Throwable\n     */\n    @Around("@annotation(tech.pdai.springboot.redis.jedis.lock.annotation.RedisLock)")\n    public Object around(ProceedingJoinPoint pjp) throws Throwable {\n        // get attribute through annotation\n        Method method = ((MethodSignature) pjp.getSignature()).getMethod();\n        RedisLock redisLock = method.getAnnotation(RedisLock.class);\n        String key = redisLock.value();\n        if (StringUtils.isEmpty(key)) {\n            Object[] args = pjp.getArgs();\n            key = Arrays.toString(args);\n        }\n\n        // do lock\n        boolean lock = distributedLock.lock(key, redisLock.expireMills(), redisLock.retryTimes(),\n                redisLock.retryDurationMills());\n        if (!lock) {\n            log.debug("get lock failed, key: {}", key);\n            return null;\n        }\n\n        // execute method, and unlock\n        log.debug("get lock success, key: {}", key);\n        try {\n            // execute\n            return pjp.proceed();\n        } catch (Exception e) {\n            log.error("execute locked method occurred an exception", e);\n        } finally {\n            // unlock\n            boolean releaseResult = distributedLock.unlock(key);\n            log.debug("release lock: {}, success: {}", key, releaseResult);\n        }\n\n        return null;\n    }\n\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br")])]),n("h3",{attrs:{id:"切面使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#切面使用"}},[s._v("#")]),s._v(" 切面使用")]),s._v(" "),n("p",[s._v("只需要添加@RedisLock注解即可：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("@RedisLock\npublic void xxxMethod() {\n\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h1",{attrs:{id:"示例源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[s._v("#")]),s._v(" 示例源码")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);n.default=t.exports}}]);
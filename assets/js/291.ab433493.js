(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{1137:function(e,s,n){e.exports=n.p+"assets/img/springboot-timer-timewheel-1.2fb114cc.png"},1138:function(e,s,n){e.exports=n.p+"assets/img/springboot-timer-timewheel-3.ad1ebf14.png"},1139:function(e,s,n){e.exports=n.p+"assets/img/springboot-timer-timewheel-2.36678bde.png"},3703:function(e,s,n){"use strict";n.r(s);var a=n(7),t=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"springboot定时任务-netty-hashedwheeltimer方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot定时任务-netty-hashedwheeltimer方式"}},[e._v("#")]),e._v(" SpringBoot定时任务 - Netty HashedWheelTimer方式")]),e._v(" "),s("blockquote",[s("p",[e._v("Timer和ScheduledExecutorService是JDK内置的定时任务方案，而业内还有一个经典的定时任务的设计叫时间轮(Timing Wheel), Netty内部基于时间轮实现了一个HashedWheelTimer来优化百万量级I/O超时的检测，它是一个高性能，低消耗的数据结构，它适合用非准实时，延迟的短平快任务，例如心跳检测。本文主要介绍时间轮(Timing Wheel)及其使用。@pdai")])]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#springboot%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1---netty-hashedwheeltimer%E6%96%B9%E5%BC%8F"}},[e._v("SpringBoot定时任务 - Netty HashedWheelTimer方式")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87"}},[e._v("知识准备")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%97%B6%E9%97%B4%E8%BD%AEtiming-wheel"}},[e._v("什么是时间轮(Timing Wheel)")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#netty%E7%9A%84hashedwheeltimer%E8%A6%81%E8%A7%A3%E5%86%B3%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98"}},[e._v("Netty的HashedWheelTimer要解决什么问题")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#hashedwheeltimer%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E5%BC%8F"}},[e._v("HashedWheelTimer的使用方式")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E6%A1%88%E4%BE%8B"}},[e._v("实现案例")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#pom%E4%BE%9D%E8%B5%96"}},[e._v("Pom依赖")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#2%E4%B8%AA%E7%AE%80%E5%8D%95%E4%BE%8B%E5%AD%90"}},[e._v("2个简单例子")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[e._v("进一步理解")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#hashedwheeltimer%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84"}},[e._v("HashedWheelTimer是如何实现的?")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%A4%9A%E7%BA%A7timing-wheel"}},[e._v("什么是多级Timing Wheel?")])])])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[e._v("示例源码")])])])])]),e._v(" "),s("h1",{attrs:{id:"知识准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[e._v("#")]),e._v(" 知识准备")]),e._v(" "),s("hr"),e._v(" "),s("blockquote",[s("p",[e._v("需要对时间轮(Timing Wheel)，以及Netty的HashedWheelTimer要解决什么问题有初步的认识。")])]),e._v(" "),s("h3",{attrs:{id:"什么是时间轮-timing-wheel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是时间轮-timing-wheel"}},[e._v("#")]),e._v(" 什么是时间轮(Timing Wheel)")]),e._v(" "),s("blockquote",[s("p",[e._v("时间轮(Timing Wheel)是George Varghese和Tony Lauck在1996年的论文'"),s("a",{attrs:{href:"https://www.cse.wustl.edu/~cdgill/courses/cs6874/TimingWheels.ppt",target:"_blank",rel:"noopener noreferrer"}},[e._v("Hashed and Hierarchical Timing Wheels: data structures to efficiently implement a timer facility 在新窗口打开"),s("OutboundLink")],1),e._v("'实现的，它在Linux内核中使用广泛，是Linux内核定时器的实现方法和基础之一。")])]),e._v(" "),s("p",[e._v("时间轮(Timing Wheel)是一种环形的数据结构，就像一个时钟可以分成很多格子（Tick)，每个格子代表时间的间隔，它指向存储的具体任务（timerTask）的一个链表。")]),e._v(" "),s("p",[s("img",{attrs:{src:n(1137),alt:""}})]),e._v(" "),s("p",[e._v("以上述在论文中的图片例子，这里一个轮子包含8个格子（Tick), 每个tick是一秒钟；")]),e._v(" "),s("p",[s("strong",[e._v("任务的添加")]),e._v("：如果一个任务要在17秒后执行，那么它需要转2轮，最终加到Tick=1位置的链表中。")]),e._v(" "),s("p",[s("strong",[e._v("任务的执行")]),e._v("：在时钟转2Round到Tick=1的位置，开始执行这个位置指向的链表中的这个任务。（# 这里表示剩余需要转几轮再执行这个任务）")]),e._v(" "),s("h3",{attrs:{id:"netty的hashedwheeltimer要解决什么问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#netty的hashedwheeltimer要解决什么问题"}},[e._v("#")]),e._v(" Netty的HashedWheelTimer要解决什么问题")]),e._v(" "),s("blockquote",[s("p",[e._v("HashedWheelTimer是Netty根据时间轮(Timing Wheel)开发的工具类，它要解决什么问题呢？这里面有两个要点："),s("strong",[e._v("延迟任务 + 低时效性")]),e._v("。@pdai")])]),e._v(" "),s("p",[e._v("在Netty中的一个典型应用场景是判断某个连接是否idle，如果idle（如客户端由于网络原因导致到服务器的心跳无法送达），则服务器会主动断开连接，释放资源。判断连接是否idle是通过定时任务完成的，但是Netty可能维持数百万级别的长连接，对每个连接去定义一个定时任务是不可行的，所以如何提升I/O超时调度的效率呢？")]),e._v(" "),s("p",[e._v("Netty根据时间轮(Timing Wheel)开发了HashedWheelTimer工具类，用来优化I/O超时调度(本质上是延迟任务）；之所以采用时间轮(Timing Wheel)的结构还有一个很重要的原因是I/O超时这种类型的任务对时效性不需要非常精准。")]),e._v(" "),s("h3",{attrs:{id:"hashedwheeltimer的使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashedwheeltimer的使用方式"}},[e._v("#")]),e._v(" HashedWheelTimer的使用方式")]),e._v(" "),s("blockquote",[s("p",[e._v("在了解时间轮（Timing Wheel)和Netty的HashedWheelTimer要解决的问题后，我们看下HashedWheelTimer的使用方式")])]),e._v(" "),s("p",[e._v("通过构造函数看主要参数")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("public HashedWheelTimer(\n        ThreadFactory threadFactory,\n        long tickDuration, TimeUnit unit, int ticksPerWheel, boolean leakDetection,\n        long maxPendingTimeouts, Executor taskExecutor) {\n\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("具体参数说明如下：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("threadFactory")]),e._v("：线程工厂，用于创建工作线程， 默认是Executors.defaultThreadFactory()")]),e._v(" "),s("li",[s("code",[e._v("tickDuration")]),e._v("：tick的周期，即多久tick一次")]),e._v(" "),s("li",[s("code",[e._v("unit")]),e._v(": tick周期的单位")]),e._v(" "),s("li",[s("code",[e._v("ticksPerWheel")]),e._v("：时间轮的长度，一圈下来有多少格")]),e._v(" "),s("li",[s("code",[e._v("leakDetection")]),e._v("：是否开启内存泄漏检测，默认是true")]),e._v(" "),s("li",[s("code",[e._v("maxPendingTimeouts")]),e._v("：最多执行的任务数，默认是-1，即不限制。在高并发量情况下才会设置这个参数。")])]),e._v(" "),s("h1",{attrs:{id:"实现案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现案例"}},[e._v("#")]),e._v(" 实现案例")]),e._v(" "),s("hr"),e._v(" "),s("blockquote",[s("p",[e._v("这里展示下HashedWheelTimer的基本使用案例。@pdai")])]),e._v(" "),s("h3",{attrs:{id:"pom依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pom依赖"}},[e._v("#")]),e._v(" Pom依赖")]),e._v(" "),s("p",[e._v("引入pom的依赖")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("<dependency>\n    <groupId>io.netty</groupId>\n    <artifactId>netty-all</artifactId>\n    <version>4.1.77.Final</version>\n</dependency>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h3",{attrs:{id:"_2个简单例子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2个简单例子"}},[e._v("#")]),e._v(" 2个简单例子")]),e._v(" "),s("p",[e._v("例子1：5秒后执行TimerTask")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@SneakyThrows\npublic static void simpleHashedWheelTimer() {\n    log.info("init task 1...");\n    \n    HashedWheelTimer timer = new HashedWheelTimer(1, TimeUnit.SECONDS, 8);\n\n    // add a new timeout\n    timer.newTimeout(timeout -> {\n        log.info("running task 1...");\n    }, 5, TimeUnit.SECONDS);\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br")])]),s("p",[e._v("执行结果如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("23:32:21.364 [main] INFO tech.pdai.springboot.schedule.timer.netty.HashedWheelTimerTester - init task 1...\n...\n23:32:27.454 [pool-1-thread-1] INFO tech.pdai.springboot.schedule.timer.netty.HashedWheelTimerTester - running task 1...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[e._v("例子2：任务失效后cancel并让它重新在3秒后执行。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@SneakyThrows\npublic static void reScheduleHashedWheelTimer() {\n    log.info("init task 2...");\n\n    HashedWheelTimer timer = new HashedWheelTimer(1, TimeUnit.SECONDS, 8);\n\n    Thread.sleep(5000);\n\n    // add a new timeout\n    Timeout tm = timer.newTimeout(timeout -> {\n        log.info("running task 2...");\n    }, 5, TimeUnit.SECONDS);\n\n    // cancel\n    if (!tm.isExpired()) {\n        log.info("cancel task 2...");\n        tm.cancel();\n    }\n\n    // reschedule\n    timer.newTimeout(tm.task(), 3, TimeUnit.SECONDS);\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("23:28:36.408 [main] INFO tech.pdai.springboot.schedule.timer.netty.HashedWheelTimerTester - init task 2...\n23:28:41.412 [main] INFO tech.pdai.springboot.schedule.timer.netty.HashedWheelTimerTester - cancel task 2...\n23:28:45.414 [pool-2-thread-1] INFO tech.pdai.springboot.schedule.timer.netty.HashedWheelTimerTester - running task 2...\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("h1",{attrs:{id:"进一步理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[e._v("#")]),e._v(" 进一步理解")]),e._v(" "),s("hr"),e._v(" "),s("blockquote",[s("p",[e._v("我们通过如下问题进一步理解HashedWheelTimer。@pdai")])]),e._v(" "),s("h3",{attrs:{id:"hashedwheeltimer是如何实现的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashedwheeltimer是如何实现的"}},[e._v("#")]),e._v(" HashedWheelTimer是如何实现的?")]),e._v(" "),s("blockquote",[s("p",[e._v("简单看下HashedWheelTimer是如何实现的")])]),e._v(" "),s("p",[s("img",{attrs:{src:n(1138),alt:""}})]),e._v(" "),s("ul",[s("li",[s("code",[e._v("Worker")]),e._v("：worker工作线程主要负责任务调度触发，单线程运行。")]),e._v(" "),s("li",[s("code",[e._v("HashedWheelBucket")]),e._v("： 时间轮上面的格子，内部持有HashedWheelTimeout组成的链表结构的头尾节点，多个格子组成的时间轮形成一圈又一圈的任务环")]),e._v(" "),s("li",[s("code",[e._v("HashedWheelTimeout")]),e._v("： 往时间轮里面提交的任务会被封装成HashedWheelTimeout")])]),e._v(" "),s("p",[e._v("构造函数")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('public HashedWheelTimer(\n        ThreadFactory threadFactory,\n        long tickDuration, TimeUnit unit, int ticksPerWheel, boolean leakDetection,\n        long maxPendingTimeouts, Executor taskExecutor) {\n\n    checkNotNull(threadFactory, "threadFactory");\n    checkNotNull(unit, "unit");\n    checkPositive(tickDuration, "tickDuration");\n    checkPositive(ticksPerWheel, "ticksPerWheel");\n    this.taskExecutor = checkNotNull(taskExecutor, "taskExecutor");\n\n    // Normalize ticksPerWheel to power of two and initialize the wheel.\n    wheel = createWheel(ticksPerWheel);\n    mask = wheel.length - 1;\n\n    // Convert tickDuration to nanos.\n    long duration = unit.toNanos(tickDuration);\n\n    // Prevent overflow.\n    if (duration >= Long.MAX_VALUE / wheel.length) {\n        throw new IllegalArgumentException(String.format(\n                "tickDuration: %d (expected: 0 < tickDuration in nanos < %d",\n                tickDuration, Long.MAX_VALUE / wheel.length));\n    }\n\n    if (duration < MILLISECOND_NANOS) {\n        logger.warn("Configured tickDuration {} smaller than {}, using 1ms.",\n                    tickDuration, MILLISECOND_NANOS);\n        this.tickDuration = MILLISECOND_NANOS;\n    } else {\n        this.tickDuration = duration;\n    }\n\n    workerThread = threadFactory.newThread(worker);\n\n    leak = leakDetection || !workerThread.isDaemon() ? leakDetector.track(this) : null;\n\n    this.maxPendingTimeouts = maxPendingTimeouts;\n\n    if (INSTANCE_COUNTER.incrementAndGet() > INSTANCE_COUNT_LIMIT &&\n        WARNED_TOO_MANY_INSTANCES.compareAndSet(false, true)) {\n        reportTooManyInstances();\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br")])]),s("p",[e._v("创建wheel")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('private static HashedWheelBucket[] createWheel(int ticksPerWheel) {\n    //ticksPerWheel may not be greater than 2^30\n    checkInRange(ticksPerWheel, 1, 1073741824, "ticksPerWheel");\n\n    ticksPerWheel = normalizeTicksPerWheel(ticksPerWheel);\n    HashedWheelBucket[] wheel = new HashedWheelBucket[ticksPerWheel];\n    for (int i = 0; i < wheel.length; i ++) {\n        wheel[i] = new HashedWheelBucket();\n    }\n    return wheel;\n}\n\nprivate static int normalizeTicksPerWheel(int ticksPerWheel) {\n    int normalizedTicksPerWheel = 1;\n    while (normalizedTicksPerWheel < ticksPerWheel) {\n        normalizedTicksPerWheel <<= 1;\n    }\n    return normalizedTicksPerWheel;\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br")])]),s("p",[e._v("任务的添加")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Override\npublic Timeout newTimeout(TimerTask task, long delay, TimeUnit unit) {\n    checkNotNull(task, "task");\n    checkNotNull(unit, "unit");\n\n    long pendingTimeoutsCount = pendingTimeouts.incrementAndGet();\n\n    if (maxPendingTimeouts > 0 && pendingTimeoutsCount > maxPendingTimeouts) {\n        pendingTimeouts.decrementAndGet();\n        throw new RejectedExecutionException("Number of pending timeouts ("\n            + pendingTimeoutsCount + ") is greater than or equal to maximum allowed pending "\n            + "timeouts (" + maxPendingTimeouts + ")");\n    }\n\n    start();\n\n    // Add the timeout to the timeout queue which will be processed on the next tick.\n    // During processing all the queued HashedWheelTimeouts will be added to the correct HashedWheelBucket.\n    long deadline = System.nanoTime() + unit.toNanos(delay) - startTime;\n\n    // Guard against overflow.\n    if (delay > 0 && deadline < 0) {\n        deadline = Long.MAX_VALUE;\n    }\n    HashedWheelTimeout timeout = new HashedWheelTimeout(this, task, deadline);\n    timeouts.add(timeout);\n    return timeout;\n}\n\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br")])]),s("p",[e._v("执行方法")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('/**\n    * Starts the background thread explicitly.  The background thread will\n    * start automatically on demand even if you did not call this method.\n    *\n    * @throws IllegalStateException if this timer has been\n    *                               {@linkplain #stop() stopped} already\n    */\npublic void start() {\n    switch (WORKER_STATE_UPDATER.get(this)) {\n        case WORKER_STATE_INIT:\n            if (WORKER_STATE_UPDATER.compareAndSet(this, WORKER_STATE_INIT, WORKER_STATE_STARTED)) {\n                workerThread.start();\n            }\n            break;\n        case WORKER_STATE_STARTED:\n            break;\n        case WORKER_STATE_SHUTDOWN:\n            throw new IllegalStateException("cannot be started once stopped");\n        default:\n            throw new Error("Invalid WorkerState");\n    }\n\n    // Wait until the startTime is initialized by the worker.\n    while (startTime == 0) {\n        try {\n            startTimeInitialized.await();\n        } catch (InterruptedException ignore) {\n            // Ignore - it will be ready very soon.\n        }\n    }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br")])]),s("p",[e._v("停止方法")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('@Override\npublic Set<Timeout> stop() {\n    if (Thread.currentThread() == workerThread) {\n        throw new IllegalStateException(\n                HashedWheelTimer.class.getSimpleName() +\n                        ".stop() cannot be called from " +\n                        TimerTask.class.getSimpleName());\n    }\n\n    if (!WORKER_STATE_UPDATER.compareAndSet(this, WORKER_STATE_STARTED, WORKER_STATE_SHUTDOWN)) {\n        // workerState can be 0 or 2 at this moment - let it always be 2.\n        if (WORKER_STATE_UPDATER.getAndSet(this, WORKER_STATE_SHUTDOWN) != WORKER_STATE_SHUTDOWN) {\n            INSTANCE_COUNTER.decrementAndGet();\n            if (leak != null) {\n                boolean closed = leak.close(this);\n                assert closed;\n            }\n        }\n\n        return Collections.emptySet();\n    }\n\n    try {\n        boolean interrupted = false;\n        while (workerThread.isAlive()) {\n            workerThread.interrupt();\n            try {\n                workerThread.join(100);\n            } catch (InterruptedException ignored) {\n                interrupted = true;\n            }\n        }\n\n        if (interrupted) {\n            Thread.currentThread().interrupt();\n        }\n    } finally {\n        INSTANCE_COUNTER.decrementAndGet();\n        if (leak != null) {\n            boolean closed = leak.close(this);\n            assert closed;\n        }\n    }\n    return worker.unprocessedTimeouts();\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br")])]),s("h3",{attrs:{id:"什么是多级timing-wheel"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是多级timing-wheel"}},[e._v("#")]),e._v(" 什么是多级Timing Wheel?")]),e._v(" "),s("p",[e._v("多级的时间轮是比较好理解的，时钟是有小时，分钟，秒的，秒转一圈(Round)分钟就转一个格（Tick）, 分钟转一圈(Round)小时就转一格（Tick）。")]),e._v(" "),s("p",[s("img",{attrs:{src:n(1139),alt:""}})]),e._v(" "),s("p",[e._v("PS：显然HashedWheelTimer是一层时间轮。")]),e._v(" "),s("h1",{attrs:{id:"示例源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[e._v("#")]),e._v(" 示例源码")]),e._v(" "),s("hr"),e._v(" "),s("p",[e._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);s.default=t.exports}}]);
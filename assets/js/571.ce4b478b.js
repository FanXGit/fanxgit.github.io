(window.webpackJsonp=window.webpackJsonp||[]).push([[571],{3792:function(s,n,a){"use strict";a.r(n);var t=a(7),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"安全算法-摘要算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安全算法-摘要算法"}},[s._v("#")]),s._v(" 安全算法 - 摘要算法")]),s._v(" "),n("p",[s._v("===========================")]),s._v(" "),n("blockquote",[n("p",[s._v("本文主要介绍安全算法 - 摘要算法相关的内容。消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密，目前可以解密逆向的只有CRC32算法，只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。消息摘要算法不存在密钥的管理与分发问题，适合于分布式网络上使用。@pdai")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95%E7%AE%80%E4%BB%8B",target:"_blank",rel:"noopener noreferrer"}},[s._v("摘要算法简介"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95%E7%89%B9%E7%82%B9",target:"_blank",rel:"noopener noreferrer"}},[s._v("摘要算法特点"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95%E5%BA%94%E7%94%A8",target:"_blank",rel:"noopener noreferrer"}},[s._v("摘要算法应用"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#%E4%BD%95%E8%B0%93%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D",target:"_blank",rel:"noopener noreferrer"}},[s._v("何谓数字签名"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#%E5%B8%B8%E8%A7%81%E6%B6%88%E6%81%AF-%E6%95%B0%E5%AD%97%E6%91%98%E8%A6%81%E7%AE%97%E6%B3%95",target:"_blank",rel:"noopener noreferrer"}},[s._v("常见消息/数字摘要算法"),n("OutboundLink")],1),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#md5",target:"_blank",rel:"noopener noreferrer"}},[s._v("MD5"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-domain-security-degist.html#sha1",target:"_blank",rel:"noopener noreferrer"}},[s._v("SHA1"),n("OutboundLink")],1)])])])]),s._v(" "),n("h1",{attrs:{id:"摘要算法简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法简介"}},[s._v("#")]),s._v(" 摘要算法简介")]),s._v(" "),n("hr"),s._v(" "),n("ul",[n("li",[s._v("消息摘要算法的主要特征是加密过程不需要密钥，并且经过加密的数据无法被解密")]),s._v(" "),n("li",[s._v("只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文")]),s._v(" "),n("li",[s._v("消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法")]),s._v(" "),n("li",[s._v("著名的摘要算法有RSA公司的MD5算法和SHA-1算法及其大量的变体")])]),s._v(" "),n("h1",{attrs:{id:"摘要算法特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法特点"}},[s._v("#")]),s._v(" 摘要算法特点")]),s._v(" "),n("hr"),s._v(" "),n("ul",[n("li",[s._v("无论输入的消息有多长，计算出来的消息摘要的长度总是固定的")]),s._v(" "),n("li",[s._v("消息摘要看起来是“伪随机的”。也就是说对相同的信息求摘要结果相同")]),s._v(" "),n("li",[s._v("消息轻微改变生成的摘要变化会很大")]),s._v(" "),n("li",[s._v("只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息，甚至根本就找不到任何与原信息相关的信息")])]),s._v(" "),n("h1",{attrs:{id:"摘要算法应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#摘要算法应用"}},[s._v("#")]),s._v(" 摘要算法应用")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("消息摘要算法最常用的场景就是数字签名以及数据(密码)加密了。(一般平时做项目用的比较多的就是使用MD5对用户密码进行加密)")]),s._v(" "),n("h1",{attrs:{id:"何谓数字签名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#何谓数字签名"}},[s._v("#")]),s._v(" 何谓数字签名")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("数字签名主要用到了非对称密钥加密技术与数字摘要技术。数字签名技术是将摘要信息用发送者的私钥加密，与原文一起传送给接收者。接收者只有用发送者的公钥才能解密被加密的摘要信息，然后用HASH函数对收到的原文产生一个摘要信息，与解密的摘要信息对比。 如果相同，则说明收到的信息是完整的，在传输过程中没有被修改，否则说明信息被修改过.")]),s._v(" "),n("p",[s._v("因此数字签名能够验证信息的完整性。 数字签名是个加密的过程，数字签名验证是个解密的过程。")]),s._v(" "),n("h1",{attrs:{id:"常见消息-数字摘要算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常见消息-数字摘要算法"}},[s._v("#")]),s._v(" 常见消息/数字摘要算法")]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"md5-在新窗口打开"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#md5-在新窗口打开"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[s._v("MD5 在新窗口打开"),n("OutboundLink")],1)]),s._v(" "),n("h4",{attrs:{id:"简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[s._v("#")]),s._v(" 简介:")]),s._v(" "),n("p",[s._v('MD5的作用是让大容量信息在用数字签名软件签署私人密钥前被"压缩"成一种保密的格式 (也就是把一个任意长度的字节串变换成一定长的十六进制数字串)。')]),s._v(" "),n("h4",{attrs:{id:"特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[s._v("#")]),s._v(" 特点:")]),s._v(" "),n("ol",[n("li",[n("strong",[s._v("压缩性")]),s._v(" : 任意长度的数据，算出的MD5值长度都是固定的。")]),s._v(" "),n("li",[n("strong",[s._v("容易计算")]),s._v(" : 从原数据计算出MD5值很容易。")]),s._v(" "),n("li",[n("strong",[s._v("抗修改性")]),s._v(" : 对原数据进行任何改动，哪怕只修改1个字节，所得到的MD5值都有很大区别。")]),s._v(" "),n("li",[n("strong",[s._v("强抗碰撞")]),s._v(" : 已知原数据和其MD5值，想找到一个具有相同MD5值的数据(即伪造数据)是非常困难的。")])]),s._v(" "),n("h4",{attrs:{id:"代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现:")]),s._v(" "),n("p",[s._v("利用JDK提供java.security.MessageDigest类实现MD5算法:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\nimport java.security.MessageDigest;\n\npublic class MD5Demo {\n\n    // test\n    public static void main(String[] args) {\n        System.out.println(getMD5Code("你若安好，便是晴天"));\n    }\n\n    private MD5Demo() {\n    }\n\n    // md5加密\n    public static String getMD5Code(String message) {\n        String md5Str = "";\n        try {\n        \t//创建MD5算法消息摘要\n            MessageDigest md = MessageDigest.getInstance("MD5");\n            //生成的哈希值的字节数组\n            byte[] md5Bytes = md.digest(message.getBytes());\n            md5Str = bytes2Hex(md5Bytes);\n        }catch(Exception e) {\n            e.printStackTrace();\n        }\n        return md5Str;\n    }\n\n    // 2进制转16进制\n    public static String bytes2Hex(byte[] bytes) {\n        StringBuffer result = new StringBuffer();\n        int temp;\n        try {\n            for (int i = 0; i < bytes.length; i++) {\n                temp = bytes[i];\n                if(temp < 0) {\n                    temp += 256;\n                }\n                if (temp < 16) {\n                    result.append("0");\n                }\n                result.append(Integer.toHexString(temp));\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return result.toString();\n    }\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br")])]),n("p",[s._v("结果")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("6bab82679914f7cb480a120b532ffa80\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("strong",[s._v("注意MessageDigest类的几个方法")]),s._v(" :")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("static MessageDigest getInstance(String algorithm)//返回实现指定摘要算法的MessageDigest对象\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("byte[] digest(byte[] input)//使用指定的字节数组对摘要执行最终更新，然后完成摘要计算。 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h4",{attrs:{id:"不利用java提供的java-security-messagedigest类实现md5算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不利用java提供的java-security-messagedigest类实现md5算法"}},[s._v("#")]),s._v(" 不利用Java提供的java.security.MessageDigest类实现MD5算法:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package com.snailclimb.ks.securityAlgorithm;\n\npublic class MD5{\n    /*\n    *四个链接变量\n    */\n    private final int A=0x67452301;\n    private final int B=0xefcdab89;\n    private final int C=0x98badcfe;\n    private final int D=0x10325476;\n    /*\n    *ABCD的临时变量\n    */\n    private int Atemp,Btemp,Ctemp,Dtemp;\n     \n    /*\n    *常量ti\n    *公式:floor(abs(sin(i+1))×(2pow32)\n    */\n    private final int K[]={\n        0xd76aa478,0xe8c7b756,0x242070db,0xc1bdceee,\n        0xf57c0faf,0x4787c62a,0xa8304613,0xfd469501,0x698098d8,\n        0x8b44f7af,0xffff5bb1,0x895cd7be,0x6b901122,0xfd987193,\n        0xa679438e,0x49b40821,0xf61e2562,0xc040b340,0x265e5a51,\n        0xe9b6c7aa,0xd62f105d,0x02441453,0xd8a1e681,0xe7d3fbc8,\n        0x21e1cde6,0xc33707d6,0xf4d50d87,0x455a14ed,0xa9e3e905,\n        0xfcefa3f8,0x676f02d9,0x8d2a4c8a,0xfffa3942,0x8771f681,\n        0x6d9d6122,0xfde5380c,0xa4beea44,0x4bdecfa9,0xf6bb4b60,\n        0xbebfbc70,0x289b7ec6,0xeaa127fa,0xd4ef3085,0x04881d05,\n        0xd9d4d039,0xe6db99e5,0x1fa27cf8,0xc4ac5665,0xf4292244,\n        0x432aff97,0xab9423a7,0xfc93a039,0x655b59c3,0x8f0ccc92,\n        0xffeff47d,0x85845dd1,0x6fa87e4f,0xfe2ce6e0,0xa3014314,\n        0x4e0811a1,0xf7537e82,0xbd3af235,0x2ad7d2bb,0xeb86d391};\n    /*\n    *向左位移数,计算方法未知\n    */\n    private final int s[]={7,12,17,22,7,12,17,22,7,12,17,22,7,\n        12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,\n        4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,\n        15,21,6,10,15,21,6,10,15,21,6,10,15,21};\n     \n     \n    /*\n    *初始化函数\n    */\n    private void init(){\n        Atemp=A;\n        Btemp=B;\n        Ctemp=C;\n        Dtemp=D;\n    }\n    /*\n    *移动一定位数\n    */\n    private    int    shift(int a,int s){\n        return(a<<s)|(a>>>(32-s));//右移的时候，高位一定要补零，而不是补充符号位\n    }\n    /*\n    *主循环\n    */\n    private void MainLoop(int M[]){\n        int F,g;\n        int a=Atemp;\n        int b=Btemp;\n        int c=Ctemp;\n        int d=Dtemp;\n        for(int i = 0; i < 64; i ++){\n            if(i<16){\n                F=(b&c)|((~b)&d);\n                g=i;\n            }else if(i<32){\n                F=(d&b)|((~d)&c);\n                g=(5*i+1)%16;\n            }else if(i<48){\n                F=b^c^d;\n                g=(3*i+5)%16;\n            }else{\n                F=c^(b|(~d));\n                g=(7*i)%16;\n            }\n            int tmp=d;\n            d=c;\n            c=b;\n            b=b+shift(a+F+K[i]+M[g],s[i]);\n            a=tmp;\n        }\n        Atemp=a+Atemp;\n        Btemp=b+Btemp;\n        Ctemp=c+Ctemp;\n        Dtemp=d+Dtemp;\n     \n    }\n    /*\n    *填充函数\n    *处理后应满足bits≡448(mod512),字节就是bytes≡56(mode64)\n    *填充方式为先加一个0,其它位补零\n    *最后加上64位的原来长度\n    */\n    private int[] add(String str){\n        int num=((str.length()+8)/64)+1;//以512位，64个字节为一组\n        int strByte[]=new int[num*16];//64/4=16，所以有16个整数\n        for(int i=0;i<num*16;i++){//全部初始化0\n            strByte[i]=0;\n        }\n        int    i;\n        for(i=0;i<str.length();i++){\n            strByte[i>>2]|=str.charAt(i)<<((i%4)*8);//一个整数存储四个字节，小端序\n        }\n        strByte[i>>2]|=0x80<<((i%4)*8);//尾部添加1\n        /*\n        *添加原长度，长度指位的长度，所以要乘8，然后是小端序，所以放在倒数第二个,这里长度只用了32位\n        */\n        strByte[num*16-2]=str.length()*8;\n            return strByte;\n    }\n    /*\n    *调用函数\n    */\n    public String getMD5(String source){\n        init();\n        int strByte[]=add(source);\n        for(int i=0;i<strByte.length/16;i++){\n        int num[]=new int[16];\n        for(int j=0;j<16;j++){\n            num[j]=strByte[i*16+j];\n        }\n        MainLoop(num);\n        }\n        return changeHex(Atemp)+changeHex(Btemp)+changeHex(Ctemp)+changeHex(Dtemp);\n     \n    }\n    /*\n    *整数变成16进制字符串\n    */\n    private String changeHex(int a){\n        String str="";\n        for(int i=0;i<4;i++){\n            str+=String.format("%2s", Integer.toHexString(((a>>i*8)%(1<<8))&0xff)).replace(\' \', \'0\');\n \n        }\n        return str;\n    }\n    /*\n    *单例\n    */\n    private static MD5 instance;\n    public static MD5 getInstance(){\n        if(instance==null){\n            instance=new MD5();\n        }\n        return instance;\n    }\n     \n    private MD5(){};\n     \n    public static void main(String[] args){\n        String str=MD5.getInstance().getMD5("你若安好，便是晴天");\n        System.out.println(str);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br")])]),n("h3",{attrs:{id:"sha1-在新窗口打开"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sha1-在新窗口打开"}},[s._v("#")]),s._v(" "),n("a",{attrs:{href:"https://baike.baidu.com/item/MD5/212708?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[s._v("SHA1 在新窗口打开"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("对于长度小于2^64位的消息，SHA1会产生一个160位(40个字符)的消息摘要。当接收到消息的时候，这个消息摘要可以用来验证数据的完整性。在传输的过程中，数据很可能会发生变化，那么这时候就会产生不同的消息摘要。")]),s._v(" "),n("p",[s._v("SHA1有如下特性:")]),s._v(" "),n("ul",[n("li",[s._v("不可以从消息摘要中复原信息；")]),s._v(" "),n("li",[s._v("两个不同的消息不会产生同样的消息摘要,(但会有1x10 ^ 48分之一的机率出现相同的消息摘要,一般使用时忽略)。")])]),s._v(" "),n("h4",{attrs:{id:"代码实现-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码实现-2"}},[s._v("#")]),s._v(" 代码实现:")]),s._v(" "),n("p",[s._v("利用JDK提供java.security.MessageDigest类实现SHA1算法:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("package com.snailclimb.ks.securityAlgorithm;\n\nimport java.io.UnsupportedEncodingException;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\n\npublic class SHA1Demo {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tSystem.out.println(getSha1(\"你若安好，便是晴天\"));\n\t\n\t}\n\n\tpublic static String getSha1(String str) {\n\t\tif (null == str || 0 == str.length()) {\n\t\t\treturn null;\n\t\t}\n\t\tchar[] hexDigits = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' };\n\t\ttry {\n\t\t\t//创建SHA1算法消息摘要对象\n\t\t\tMessageDigest mdTemp = MessageDigest.getInstance(\"SHA1\");\n\t\t\t//使用指定的字节数组更新摘要。\n\t\t\tmdTemp.update(str.getBytes(\"UTF-8\"));\n\t\t\t//生成的哈希值的字节数组\n\t\t\tbyte[] md = mdTemp.digest();\n\t\t\t//SHA1算法生成信息摘要关键过程\n\t\t\tint j = md.length;\n\t\t    char[] buf = new char[j * 2];\n\t\t\tint k = 0;\n\t\t\tfor (int i = 0; i < j; i++) {\n\t\t\t\tbyte byte0 = md[i];\n\t\t\t\tbuf[k++] = hexDigits[byte0 >>> 4 & 0xf];\n\t\t\t\tbuf[k++] = hexDigits[byte0 & 0xf];\n\t\t\t}\n\t\t\treturn new String(buf);\n\t\t} catch (NoSuchAlgorithmException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn \"0\";\n\t\t\n\t}\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br")])]),n("p",[n("strong",[s._v("结果")]),s._v(" :")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("8ce764110a42da9b08504b20e26b19c9e3382414\n```)")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);
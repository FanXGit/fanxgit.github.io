(window.webpackJsonp=window.webpackJsonp||[]).push([[215],{1048:function(s,a,e){s.exports=e.p+"assets/img/springboot-api-smart-doc-1.5234b18a.png"},1049:function(s,a,e){s.exports=e.p+"assets/img/springboot-api-smart-doc-2.f18d2f04.png"},1050:function(s,a,e){s.exports=e.p+"assets/img/springboot-api-smart-doc-3.02de0de5.png"},1051:function(s,a,e){s.exports=e.p+"assets/img/springboot-api-smart-doc-4.e7605202.png"},1052:function(s,a,e){s.exports=e.p+"assets/img/springboot-api-smart-doc-6.305adbf7.png"},3670:function(s,a,e){"use strict";e.r(a);var n=e(7),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"springboot接口-如何生成接口文档之集成smart-doc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口-如何生成接口文档之集成smart-doc"}},[s._v("#")]),s._v(" SpringBoot接口 - 如何生成接口文档之集成Smart-Doc")]),s._v(" "),a("p",[s._v("===========================================================================")]),s._v(" "),a("blockquote",[a("p",[s._v("上文我们看到可以通过Swagger系列可以快速生成API文档， 但是这种API文档生成是需要在接口上添加注解等，这表明这是一种侵入式方式； 那么有没有非侵入式方式呢, 比如通过注释生成文档？ 本文主要介绍非侵入式的方式及集成Smart-doc案例。我们构建知识体系时使用Smart-doc这类工具并不是目标，而是"),a("strong",[s._v("要了解非侵入方式能做到什么程度和技术思路")]),s._v(", 最后"),a("strong",[s._v("平衡")]),s._v("下来多数情况下多数人还是会选择Swagger+openapi技术栈的。 @pdai")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#springboot%E6%8E%A5%E5%8F%A3---%E5%A6%82%E4%BD%95%E7%94%9F%E6%88%90%E6%8E%A5%E5%8F%A3%E6%96%87%E6%A1%A3%E4%B9%8B%E9%9B%86%E6%88%90smart-doc"}},[s._v("SpringBoot接口 - 如何生成接口文档之集成Smart-Doc")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86%E7%82%B9"}},[s._v("准备知识点")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E4%BA%A7%E7%94%9Fsmart-doc%E8%BF%99%E7%B1%BB%E5%B7%A5%E5%85%B7"}},[s._v("为什么会产生Smart-Doc这类工具？")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFsmart-doc%E6%9C%89%E5%93%AA%E4%BA%9B%E7%89%B9%E6%80%A7"}},[s._v("什么是Smart-Doc？有哪些特性？")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E6%A1%88%E4%BE%8B"}},[s._v("实现案例")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE"}},[s._v("配置")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E8%BF%90%E8%A1%8C%E6%B5%8B%E8%AF%95"}},[s._v("运行测试")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E7%94%9F%E6%88%90%E6%9B%B4%E5%A4%9A%E7%B1%BB%E5%9E%8B%E7%9A%84%E6%96%87%E6%A1%A3"}},[s._v("生成更多类型的文档")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[s._v("进一步理解")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E6%B3%A8%E9%87%8A%E4%BF%A1%E6%81%AF%E6%98%AF%E6%9C%89%E9%99%90%E7%9A%84smart-doc%E5%A6%82%E4%BD%95%E4%BB%8E%E6%B3%A8%E9%87%8A%E6%8B%93%E5%B1%95%E6%96%87%E6%A1%A3%E5%86%85%E5%AE%B9%E5%91%A2"}},[s._v("注释信息是有限的，smart-doc如何从注释拓展文档内容呢？")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#maven%E5%A4%9A%E6%A8%A1%E5%9D%97%E4%B8%AD%E4%BD%BF%E7%94%A8%E6%8F%92%E4%BB%B6%E6%9C%89%E6%B2%A1%E6%9C%89%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84%E5%AE%9E%E8%B7%B5"}},[s._v("Maven多模块中使用插件有没有比较好的实践？")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%A6%82%E6%9E%9C%E7%94%9F%E6%88%90%E6%96%87%E6%A1%A3%E6%97%B6%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E8%AF%A5%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95"}},[s._v("如果生成文档时遇到问题，该如何调试？")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[s._v("示例源码")])])])])]),s._v(" "),a("h1",{attrs:{id:"准备知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备知识点"}},[s._v("#")]),s._v(" 准备知识点")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("需要了解Swagger侵入性和依赖性， 以及Smart-Doc这类工具如何解决这些问题, 部分内容来自"),a("a",{attrs:{href:"https://gitee.com/smart-doc-team/smart-doc",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方网站 在新窗口打开"),a("OutboundLink")],1),s._v("。@pdai")])]),s._v(" "),a("h3",{attrs:{id:"为什么会产生smart-doc这类工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会产生smart-doc这类工具"}},[s._v("#")]),s._v(" 为什么会产生Smart-Doc这类工具？")]),s._v(" "),a("blockquote",[a("p",[s._v("既然有了Swagger， 为何还会产生Smart-Doc这类工具呢？ 本质上是Swagger侵入性和依赖性。")])]),s._v(" "),a("p",[s._v("我们来看下目前主流的技术文档工具存在什么问题：")]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("侵入性强")]),s._v("，需要编写大量注解，代表工具如：swagger，还有一些公司自研的文档工具")]),s._v(" "),a("li",[a("strong",[s._v("强依赖性")]),s._v("，如果项目不想使用该工具，业务代码无法编译通过。")]),s._v(" "),a("li",[s._v("代码解析能力弱，使用文档不齐全，主要代表为国内众多开源的相关工具。")]),s._v(" "),a("li",[s._v("众多基于注释分析的工具无法解析jar包里面的注释(sources jar包)，需要人工配置源码路径，无法满足DevOps构建场景。")]),s._v(" "),a("li",[s._v("部分工具无法支持多模块复杂项目代码分析。")])]),s._v(" "),a("h3",{attrs:{id:"什么是smart-doc-有哪些特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是smart-doc-有哪些特性"}},[s._v("#")]),s._v(" 什么是Smart-Doc？有哪些特性？")]),s._v(" "),a("blockquote",[a("p",[s._v("smart-doc是一款同时支持JAVA REST API和Apache Dubbo RPC接口文档生成的工具，smart-doc在业内率先提出"),a("strong",[s._v("基于JAVA泛型定义推导")]),s._v("的理念， 完全基于接口源码来分析生成接口文档，不采用任何注解侵入到业务代码中。你只需要"),a("strong",[s._v("按照java-doc标准")]),s._v("编写注释， smart-doc就能帮你生成一个简易明了的Markdown、HTML5、Postman Collection2.0+、OpenAPI 3.0+的文档。")])]),s._v(" "),a("ul",[a("li",[s._v("零注解、零学习成本、只需要写标准JAVA注释。")]),s._v(" "),a("li",[s._v("基于源代码接口定义自动推导，强大的返回结构推导。")]),s._v(" "),a("li",[s._v("支持Spring MVC、Spring Boot、Spring Boot Web Flux(controller书写方式)、Feign。")]),s._v(" "),a("li",[s._v("支持Callable、Future、CompletableFuture等异步接口返回的推导。")]),s._v(" "),a("li",[s._v("支持JavaBean上的JSR303参数校验规范，包括分组验证。")]),s._v(" "),a("li",[s._v("对JSON请求参数的接口能够自动生成模拟JSON参数。")]),s._v(" "),a("li",[s._v("对一些常用字段定义能够生成有效的模拟值。")]),s._v(" "),a("li",[s._v("支持生成JSON返回值示例。")]),s._v(" "),a("li",[s._v("支持从项目外部加载源代码来生成字段注释(包括标准规范发布的jar包)。")]),s._v(" "),a("li",[s._v("支持生成多种格式文档：Markdown、HTML5、Asciidoctor、Postman Collection、OpenAPI 3.0。 Up- 开放文档数据，可自由实现接入文档管理系统。")]),s._v(" "),a("li",[s._v("支持导出错误码和定义在代码中的各种字典码到接口文档。")]),s._v(" "),a("li",[s._v("支持Maven、Gradle插件式轻松集成。")]),s._v(" "),a("li",[s._v("支持Apache Dubbo RPC接口文档生成。")]),s._v(" "),a("li",[s._v("debug接口调试html5页面完全支持文件上传，下载(@download tag标记下载方法)测试。")])]),s._v(" "),a("h1",{attrs:{id:"实现案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现案例"}},[s._v("#")]),s._v(" 实现案例")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("从smart-doc 1.7.9开始官方提供了Maven插件，可以通过在项目中集成smart-doc的Maven插件，然后运行插件直接生成文档。 我们的案例基于smart-doc-maven-plugin，生成文档。示例参考官方"),a("a",{attrs:{href:"https://smart-doc-group.github.io/#/zh-cn/plugins/maven_plugin",target:"_blank",rel:"noopener noreferrer"}},[s._v("配置文档 在新窗口打开"),a("OutboundLink")],1),s._v("而写。")])]),s._v(" "),a("h3",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("添加maven的插件")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<build>\n    <plugins>\n        <plugin>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-maven-plugin</artifactId>\n        </plugin>\n        <plugin>\n            <groupId>com.github.shalousun</groupId>\n            <artifactId>smart-doc-maven-plugin</artifactId>\n            <version>2.4.8</version>\n            <configuration>\n                \x3c!--指定生成文档的使用的配置文件,配置文件放在自己的项目中--\x3e\n                <configFile>./src/main/resources/smart-doc.json</configFile>\n                \x3c!--指定项目名称，推荐使用动态参数，例如${project.description}--\x3e\n                \x3c!--如果smart-doc.json中和此处都未设置projectName，2.3.4开始，插件自动采用pom中的projectName作为设置--\x3e\n                \x3c!--<projectName>${project.description}</projectName>--\x3e\n                \x3c!--smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉--\x3e\n                <excludes>\n                    \x3c!--格式为：groupId:artifactId;参考如下--\x3e\n                    \x3c!--也可以支持正则式如：com.alibaba:.* --\x3e\n                    <exclude>com.alibaba:fastjson</exclude>\n                </excludes>\n                \x3c!--includes配置用于配置加载外部依赖源码,配置后插件会按照配置项加载外部源代码而不是自动加载所有，因此使用时需要注意--\x3e\n                \x3c!--smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件--\x3e\n                <includes>\n                    \x3c!--格式为：groupId:artifactId;参考如下--\x3e\n                    \x3c!--也可以支持正则式如：com.alibaba:.* --\x3e\n                    <include>com.alibaba:fastjson</include>\n                </includes>\n            </configuration>\n            <executions>\n                <execution>\n                    \x3c!--如果不需要在执行编译时启动smart-doc，则将phase注释掉--\x3e\n                    <phase>compile</phase>\n                    <goals>\n                        \x3c!--smart-doc提供了html、openapi、markdown等goal，可按需配置--\x3e\n                        <goal>html</goal>\n                    </goals>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n</build>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("p",[s._v("其中./src/main/resources/smart-doc.json是配置文件。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "serverUrl": "http://127.0.0.1", //服务器地址,非必须。导出postman建议设置成http://{{server}}方便直接在postman直接设置环境变量\n  "pathPrefix": "", //设置path前缀,非必须。如配置Servlet ContextPath 。@since 2.2.3\n  "isStrict": false, //是否开启严格模式\n  "allInOne": true,  //是否将文档合并到一个文件中，一般推荐为true\n  "outPath": "D://md2", //指定文档的输出路径\n  "coverOld": true,  //是否覆盖旧的文件，主要用于markdown文件覆盖\n  "createDebugPage": true,//@since 2.0.0 smart-doc支持创建可以测试的html页面，仅在AllInOne模式中起作用。\n  "packageFilters": "",//controller包过滤，多个包用英文逗号隔开，2.2.2开始需要采用正则：com.test.controller.*\n  "md5EncryptedHtmlName": false,//只有每个controller生成一个html文件时才使用\n  "style":"xt256", //基于highlight.js的代码高设置,可选值很多可查看码云wiki，喜欢配色统一简洁的同学可以不设置\n  "projectName": "pdai-springboot-demo-smart-doc",//配置自己的项目名称，不设置则插件自动获取pom中的projectName\n  "skipTransientField": true,//目前未实现\n  "sortByTitle":false,//接口标题排序，默认为false,@since 1.8.7版本开始\n  "showAuthor":true,//是否显示接口作者名称，默认是true,不想显示可关闭\n  "requestFieldToUnderline":true,//自动将驼峰入参字段在文档中转为下划线格式,//@since 1.8.7版本开始\n  "responseFieldToUnderline":true,//自动将驼峰入参字段在文档中转为下划线格式,//@since 1.8.7版本开始\n  "inlineEnum":true,//设置为true会将枚举详情展示到参数表中，默认关闭，//@since 1.8.8版本开始\n  "recursionLimit":7,//设置允许递归执行的次数用于避免一些对象解析卡主，默认是7，正常为3次以内，//@since 1.8.8版本开始\n  "allInOneDocFileName":"index.html",//自定义设置输出文档名称, @since 1.9.0\n  "requestExample":"true",//是否将请求示例展示在文档中，默认true，@since 1.9.0\n  "responseExample":"true",//是否将响应示例展示在文档中，默认为true，@since 1.9.0\n\n  "ignoreRequestParams":[ //忽略请求参数对象，把不想生成文档的参数对象屏蔽掉，@since 1.9.2\n    "org.springframework.ui.ModelMap"\n  ],\n  "dataDictionaries": [{ //配置数据字典，没有需求可以不设置\n    "title": "http状态码字典", //数据字典的名称\n    "enumClassName": "tech.pdai.springboot.smartdoc.constant.ResponseStatus", //数据字典枚举类名称\n    "codeField": "responseCode",//数据字典字典码对应的字段名称\n    "descField": "description"//数据字典对象的描述信息字典\n  }],\n  "errorCodeDictionaries": [{ //错误码列表，没有需求可以不设置\n    "title": "title",\n    "enumClassName": "tech.pdai.springboot.smartdoc.constant.ResponseStatus", //错误码枚举类\n    "codeField": "responseCode",//错误码的code码字段名称\n    "descField": "description"//错误码的描述信息对应的字段名\n  }],\n  "revisionLogs": [{ //文档变更记录，非必须\n    "version": "1.1", //文档版本号\n    "revisionTime": "2022-07-01 22:12:01", //文档修订时间\n    "status": "update", //变更操作状态，一般为：创建、更新等\n    "author": "pdai", //文档变更作者\n    "remarks": "init user api" //变更描述\n  },{ //文档变更记录，非必须\n    "version": "1.2", //文档版本号\n    "revisionTime": "2022-07-01 22:12:02", //文档修订时间\n    "status": "update", //变更操作状态，一般为：创建、更新等\n    "author": "pdai", //文档变更作者\n    "remarks": "add address api" //变更描述\n  }\n  ],\n  "customResponseFields": [{ //自定义添加字段和注释，一般用户处理第三方jar包库，非必须\n    "name": "code",//覆盖响应码字段\n    "desc": "响应代码",//覆盖响应码的字段注释\n    "ownerClassName": "org.springframework.data.domain.Pageable", //指定你要添加注释的类名\n    "ignore":true, //设置true会被自动忽略掉不会出现在文档中\n    "value": "00000"//设置响应码的值\n  }],\n  "requestHeaders": [{ //设置请求头，没有需求可以不设置\n    "name": "token",//请求头名称\n    "type": "string",//请求头类型\n    "desc": "desc",//请求头描述信息\n    "value":"token请求头的值",//不设置默认null\n    "required": false,//是否必须\n    "since": "-",//什么版本添加的改请求头\n    "pathPatterns": "/app/test/**",//请看https://gitee.com/smart-doc-team/smart-doc/wikis/请求头高级配置?sort_id=4178978\n    "excludePathPatterns":"/app/page/**"//请看https://gitee.com/smart-doc-team/smart-doc/wikis/请求头高级配置?sort_id=4178978\n  },{\n    "name": "appkey",//请求头\n    "type": "string",//请求头类型\n    "desc": "desc",//请求头描述信息\n    "value":"appkey请求头的值",//不设置默认null\n    "required": false,//是否必须\n    "pathPatterns": "/test/add,/testConstants/1.0",//正则表达式过滤请求头,url匹配上才会添加该请求头，多个正则用分号隔开\n    "since": "-"//什么版本添加的改请求头\n  }],\n  "requestParams": [ //设置公共参数，没有需求可以不设置\n    {\n      "name": "configPathParam",//请求名称\n      "type": "string",//请求类型\n      "desc": "desc",//请求描述信息\n      "paramIn": "path", // 参数所在位置 header-请求头, path-路径参数, query-参数\n      "value":"testPath",//不设置默认null\n      "required": false,//是否必须\n      "since": "2.2.3",//什么版本添加的该请求\n      "pathPatterns": "/app/test/**",//请看https://gitee.com/smart-doc-team/smart-doc/wikis/请求高级配置?sort_id=4178978\n      "excludePathPatterns":"/app/page/**"//请看https://gitee.com/smart-doc-team/smart-doc/wikis/请求高级配置?sort_id=4178978\n    }],\n  "responseBodyAdvice":{ //自smart-doc 1.9.8起，非必须项，ResponseBodyAdvice统一返回设置(不要随便配置根据项目的技术来配置)，可用ignoreResponseBodyAdvice tag来忽略\n    "className":"tech.pdai.springboot.smartdoc.entity.ResponseResult" //通用响应体\n  }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br")])]),a("h3",{attrs:{id:"运行测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行测试"}},[s._v("#")]),s._v(" 运行测试")]),s._v(" "),a("p",[s._v("可以通过Maven命令生成文档")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//生成html\nmvn -Dfile.encoding=UTF-8 smart-doc:html\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("在IDEA中，也可以通过maven插件构建")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1048),alt:""}})]),s._v(" "),a("p",[s._v("maven构建日志如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[INFO] Scanning for projects...\n[INFO] \n[INFO] --------------< tech.pdai:115-springboot-demo-smart-doc >---------------\n[INFO] Building 115-springboot-demo-smart-doc 1.0-SNAPSHOT\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] >>> smart-doc-maven-plugin:2.4.8:html (default-cli) > compile @ 115-springboot-demo-smart-doc >>>\n[INFO] \n[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ 115-springboot-demo-smart-doc ---\n[INFO] Using \'UTF-8\' encoding to copy filtered resources.\n[INFO] Using \'UTF-8\' encoding to copy filtered properties files.\n[INFO] Copying 0 resource\n[INFO] Copying 1 resource\n[INFO] \n[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ 115-springboot-demo-smart-doc ---\n[INFO] Nothing to compile - all classes are up to date\n[INFO] \n[INFO] <<< smart-doc-maven-plugin:2.4.8:html (default-cli) < compile @ 115-springboot-demo-smart-doc <<<\n[INFO] \n[INFO] \n[INFO] --- smart-doc-maven-plugin:2.4.8:html (default-cli) @ 115-springboot-demo-smart-doc ---\n[INFO] ------------------------------------------------------------------------\n[INFO] Smart-doc Start preparing sources at: 2022-07-01 22:43:54\n[INFO] Artifacts that the current project depends on: ["org.springframework.boot:spring-boot-starter-web","org.springframework.boot:spring-boot-configuration-processor","org.projectlombok:lombok"]\n[INFO] Smart-doc has loaded the source code path: [{"path":"D:/git/tech-pdai-spring-demos/115-springboot-demo-smart-doc/src/main/java"}]\n[INFO] Smart-doc Starting Create API Documentation at: 2022-07-01 22:43:54\n[INFO] API documentation is output to => D://md2\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.196 s\n[INFO] Finished at: 2022-07-01T22:43:55+08:00\n[INFO] ------------------------------------------------------------------------\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("p",[s._v("构建后的html如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1049),alt:""}})]),s._v(" "),a("p",[s._v("也可以看到还自动提供了mock的数据，以及测试接口的按钮。还包含自定义的返回枚举类型等。")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1050),alt:""}})]),s._v(" "),a("p",[s._v("展示效果，可以参看"),a("a",{attrs:{href:"https://api.doubans.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://api.doubans.com/ 在新窗口打开"),a("OutboundLink")],1)]),s._v(" "),a("h3",{attrs:{id:"生成更多类型的文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生成更多类型的文档"}},[s._v("#")]),s._v(" 生成更多类型的文档")]),s._v(" "),a("p",[s._v("smart-doc 还支持生成如下类型的文档：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("//生成markdown\nmvn -Dfile.encoding=UTF-8 smart-doc:markdown\n//生成adoc\nmvn -Dfile.encoding=UTF-8 smart-doc:adoc\n//生成postman json数据\nmvn -Dfile.encoding=UTF-8 smart-doc:postman\n// 生成 Open Api 3.0+, Since smart-doc-maven-plugin 1.1.5\nmvn -Dfile.encoding=UTF-8 smart-doc:openapi\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h1",{attrs:{id:"进一步理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[s._v("#")]),s._v(" 进一步理解")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("结合smart-doc官方文档，我们通过几个问题进一步理解smart-doc。主要内容来源于"),a("a",{attrs:{href:"https://smart-doc-group.github.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档 在新窗口打开"),a("OutboundLink")],1),s._v("。")])]),s._v(" "),a("h3",{attrs:{id:"注释信息是有限的-smart-doc如何从注释拓展文档内容呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释信息是有限的-smart-doc如何从注释拓展文档内容呢"}},[s._v("#")]),s._v(" 注释信息是有限的，smart-doc如何从注释拓展文档内容呢？")]),s._v(" "),a("blockquote",[a("p",[s._v("我们知道注释的信息是有限的，swagger技术栈的方式通过定义注解来约束并拓展文档中的内容，那么smart-doc如何从注释拓展文档内容呢？")])]),s._v(" "),a("p",[s._v("一方面"),a("code",[s._v("smart-doc")]),s._v("的实现初衷是通过使用"),a("code",[s._v("javadoc")]),s._v("文档注释来去除注解式的侵入，因此"),a("code",[s._v("smart-doc")]),s._v("每增加一个功能首先都是去考虑"),a("code",[s._v("javadoc")]),s._v("原生的"),a("code",[s._v("tag")]),s._v(",")]),s._v(" "),a("p",[s._v("下面对"),a("code",[s._v("smart-doc")]),s._v("使用的一些"),a("code",[s._v("javadoc")]),s._v("的注释"),a("code",[s._v("tag")]),s._v("做介绍。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("tag名称")]),s._v(" "),a("th",[s._v("使用描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("@param")])]),s._v(" "),a("td",[s._v("对于在"),a("code",[s._v("Spring Boot")]),s._v("接口层，对于简单类型的参数必须在使用"),a("code",[s._v("@param")]),s._v("时写上注释描述，对于"),a("code",[s._v("Entity")]),s._v("类型"),a("code",[s._v("smart-doc")]),s._v("则不会检查")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@deprecated")])]),s._v(" "),a("td",[s._v("可以在注释中用于标记接口已经废弃，作用同"),a("code",[s._v("@Deprecated")]),s._v("注解")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@apiNote")])]),s._v(" "),a("td",[a("code",[s._v("@apiNote")]),s._v("是"),a("code",[s._v("JAVA")]),s._v("新增的文档"),a("code",[s._v("tag")]),s._v(","),a("code",[s._v("smart-doc")]),s._v("使用"),a("code",[s._v("@apiNote")]),s._v("的注释作为方法的详细描述，因此可以使用"),a("code",[s._v("@apiNote")]),s._v("来写一段长注释。如果一个方法不写 "),a("code",[s._v("@apiNote")]),s._v("注释说明，"),a("code",[s._v("smart-doc")]),s._v("直接使用方法默认注释填充")])])])]),s._v(" "),a("p",[s._v("另一方面，原生的tag是不够的，所以"),a("code",[s._v("smart-doc")]),s._v("又通过自定义tag来支持更多功能的拓展")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("tag名称")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[a("code",[s._v("@ignore")])]),s._v(" "),a("td",[a("code",[s._v("@ignore")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于过滤请求参数对象上的某个字段，设置后"),a("code",[s._v("smart-doc")]),s._v("不输出改字段到请求参数列表中。关于响应字段忽略的请看"),a("a",{attrs:{href:"https://smart-doc-group.github.io/#/zh-cn/diy/advancedFeatures?id=%E5%93%8D%E5%BA%94%E5%AD%97%E6%AE%B5%E5%BF%BD%E7%95%A5",target:"_blank",rel:"noopener noreferrer"}},[s._v("【忽略响应字段】 在新窗口打开"),a("OutboundLink")],1),s._v(" 如果"),a("code",[s._v("@ignore")]),s._v("加到方法上，则接口方法不会输出到文档。从"),a("code",[s._v("1.8.4")]),s._v("开始"),a("code",[s._v("@ignore")]),s._v("支持添加到"),a("code",[s._v("Controller")]),s._v("上进行忽略不想生成文档的接口类。"),a("code",[s._v("@ignore")]),s._v("也可以用于方法上忽略某个请求参数。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@required")])]),s._v(" "),a("td",[s._v("如果你没有使用"),a("code",[s._v("JSR303")]),s._v("参数验证规范实现的方式来标注字段，就可以使用"),a("code",[s._v("@required")]),s._v("去标注请求参数对象的字段，标注"),a("code",[s._v("smart-doc")]),s._v("在输出参数列表时会设置为"),a("code",[s._v("true")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@mock")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 1.8.0")]),s._v("开始，"),a("code",[s._v("@mock")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于在对象基本类型字段设置自定义文档展示值。设置值后"),a("code",[s._v("smart-doc")]),s._v("不再帮你生成随机值。方便可以通过"),a("code",[s._v("smart-doc")]),s._v("直接输出交付文档。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@dubbo")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 1.8.7")]),s._v("开始，"),a("code",[s._v("@dubbo")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于在"),a("code",[s._v("Dubbo")]),s._v("的"),a("code",[s._v("API")]),s._v("接口类上添加让"),a("code",[s._v("smart-doc")]),s._v("可以扫描到"),a("code",[s._v("Dubbo RPC")]),s._v("的接口生成文档。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@restApi")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 1.8.8")]),s._v("开始，"),a("code",[s._v("@restApi")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于支持"),a("code",[s._v("smart-doc")]),s._v("去扫描"),a("code",[s._v("Spring Cloud Feign")]),s._v("的定义接口生成文档。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@order")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 1.9.4")]),s._v("开始，"),a("code",[s._v("@order")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于设置"),a("code",[s._v("Controller")]),s._v("接口或者"),a("code",[s._v("API")]),s._v("入口的自定义排序序号，"),a("code",[s._v("@order 1")]),s._v("就表示设置序号为"),a("code",[s._v("1")]),s._v("。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@ignoreResponseBodyAdvice")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 1.9.8")]),s._v("开始，"),a("code",[s._v("@ignoreResponseBodyAdvice")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于忽略"),a("code",[s._v("ResponseBodyAdvice")]),s._v("设置的包装类。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@download")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 2.0.1")]),s._v("开始，"),a("code",[s._v("@download")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于标注在"),a("code",[s._v("Controller")]),s._v("的文件下载方法上，生成"),a("code",[s._v("debug")]),s._v("页面时可实现文件下载测试。并且支持下载文件带请求头参数测试。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@page")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 2.0.2")]),s._v("开始，"),a("code",[s._v("@page")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于标注在"),a("code",[s._v("Controller")]),s._v("的方法上表示该方法用来渲染返回一个静态页面，生成"),a("code",[s._v("debug")]),s._v("页面时如果发起测试，测试页面会自动在浏览器开启新标签显示页面。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@ignoreParams")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 2.1.0")]),s._v("开始，"),a("code",[s._v("@ignoreParams")]),s._v(" "),a("code",[s._v("tag")]),s._v("用于标注在"),a("code",[s._v("Controller")]),s._v("方法上忽略掉不想显示在文档中的参数，例如："),a("code",[s._v("@ignoreParams id name")]),s._v("，多个参数名用空格隔开")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@response")])]),s._v(" "),a("td",[s._v("从"),a("code",[s._v("smart-doc 2.2.0")]),s._v("开始，"),a("code",[s._v("@response")]),s._v(" "),a("code",[s._v("tag")]),s._v("标注在"),a("code",[s._v("Controller")]),s._v("方法上可以允许用这自己定义返回的"),a("code",[s._v("json example")]),s._v("。建议只在返回基础类型时使用，如："),a("code",[s._v("Result<String>")]),s._v("类型这种泛型是简单原生类型的响应。")])]),s._v(" "),a("tr",[a("td",[a("code",[s._v("@tag")])]),s._v(" "),a("td",[a("code",[s._v("@since 2.2.5")]),s._v(", "),a("code",[s._v("@tag")]),s._v("用于将"),a("code",[s._v("Controller")]),s._v("方法分类, 可以将不同"),a("code",[s._v("Contoller")]),s._v("下的方法指定到多个分类下, 同时也可以直接指定"),a("code",[s._v("Controller")]),s._v("为一个分类或多个分类")])])])]),s._v(" "),a("h3",{attrs:{id:"maven多模块中使用插件有没有比较好的实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven多模块中使用插件有没有比较好的实践"}},[s._v("#")]),s._v(" Maven多模块中使用插件有没有比较好的实践？")]),s._v(" "),a("blockquote",[a("p",[s._v("在独立的Maven项目中使用smart-doc，当前可以说是如丝般爽滑。但是在Maven的多模块项目中使用smart-doc-maven-plugin时，很多同学就有疑问了， smart-doc插件我到底是放在什么地方合适？是放在Maven的根pom.xml中？还是说各个需要生成API接口文档的模块中呢？ 下面就来说说根据不同的项目结构应该怎么放插件。")])]),s._v(" "),a("p",[s._v("完全的父子级关系的maven项目：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├─parent\n├──common\n│   pom.xml\n├──web1\n│   pom.xml\n├──web2\n│   pom.xml\n└─pom.xml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("上面的maven结构假设是严格按照父子级来配置的，然后web1和web2都依赖于common， 这种情况下如果跑到web1下或者web2目录下直接执行mvn命令来编译 都是无法完成的。需要在根目录上去执行命令编译命令才能通过，而smart-doc插件会通过类加载器去加载用户配置的一些类，因此是需要调用编译的和执行命令 是一样的。这种情况下建议你建smart-doc-maven-plugin放到根pom.xml中，在web1和web2中放置各自的smart-doc.json配置。 然后通过-pl去指定让smart-doc生成指定 模块的文档。操作命令如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 生成web1模块的api文档\nmvn smart-doc:markdown -Dfile.encoding=UTF-8  -pl :web1 -am\n# 生成web2模块的api文档\nmvn smart-doc:markdown -Dfile.encoding=UTF-8  -pl :web2 -am\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("如果不是按照严格父子级构建的项目，还是以上面的结构例子来说。common模块放在类parent中，但是common的pom.xml并没有定义parent。 common模块也很少变更，很多公司内部可能就直接把common单独depoly上传到了公司的Nexus仓库中，这种情况下web1和web2虽然依赖于common， 但是web1和web2都可以在web1和web2目录下用命令编译，这种情况下直接将smart-doc-maven-plugin单独放到web1和web2中是可以做构建生成文档的。")]),s._v(" "),a("p",[s._v("【"),a("a",{attrs:{href:"https://gitee.com/smart-doc-team/spring-boot-maven-multiple-module",target:"_blank",rel:"noopener noreferrer"}},[s._v("多模块测试用例参考 在新窗口打开"),a("OutboundLink")],1),s._v("】")]),s._v(" "),a("p",[s._v("注意： 怎么去使用插件并没有固定的模式，最重要的是熟练Maven的一些列操作，然后根据自己的项目情况来调整。技巧娴熟就能应对自如。 对于插件的使用，从smart-doc-maven-plugin 1.2.0开始，插件是能够自动分析生成模块的依赖来加载必要的源码，并不会将所有模块的接口文档合并到一个文档中。")]),s._v(" "),a("h3",{attrs:{id:"如果生成文档时遇到问题-该如何调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如果生成文档时遇到问题-该如何调试"}},[s._v("#")]),s._v(" 如果生成文档时遇到问题，该如何调试？")]),s._v(" "),a("blockquote",[a("p",[s._v("在使用"),a("code",[s._v("smart-doc-maven-plugin")]),s._v("插件来构建生成"),a("code",[s._v("API")]),s._v("文档的过程中可能会出现一些错误问题。官方文档中提供了调试的方案：")])]),s._v(" "),a("ol",[a("li",[a("strong",[s._v("添加smart-doc依赖")])])]),s._v(" "),a("p",[s._v("因为"),a("code",[s._v("smart-doc-maven-plugin")]),s._v("最终是使用"),a("code",[s._v("smart-doc")]),s._v("来完成项目的源码分析和文档生成的， 通常情况下真正的调试的代码是"),a("code",[s._v("smart-doc")]),s._v("。但这个过程主要通过"),a("code",[s._v("smart-doc-maven-plugin")]),s._v("来排查。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n     <groupId>com.github.shalousun</groupId>\n     <artifactId>smart-doc</artifactId>\n     <version>[最新版本]</version>\n     <scope>test</scope>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("strong",[s._v("注意：")]),s._v(" 使用"),a("code",[s._v("smart-doc")]),s._v("的版本最好和插件依赖的"),a("code",[s._v("smart-doc")]),s._v("版本一致。")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[a("strong",[s._v("添加断点")])])]),s._v(" "),a("p",[s._v("添加断点如图所示")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1051),alt:""}})]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("strong",[s._v("Debug模式运行构建目标")])])]),s._v(" "),a("p",[a("code",[s._v("maven")]),s._v("插件在"),a("code",[s._v("idea")]),s._v("中运行"),a("code",[s._v("debug")]),s._v("非常简单，操作如下图。")]),s._v(" "),a("p",[a("img",{attrs:{src:e(1052),alt:""}})]),s._v(" "),a("p",[s._v("这样就可以直接进入断点了。")]),s._v(" "),a("p",[a("strong",[s._v("提示：")]),s._v(" 上面是通过插件去作为入口调试"),a("code",[s._v("smart-doc")]),s._v("的源码，如果你想调试插件本身的源码执行过程，则将插件的依赖添加到项目依赖中,如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n    <groupId>com.github.shalousun</groupId>\n    <artifactId>smart-doc-maven-plugin</artifactId>\n    <version>【maven仓库最新版本】</version>\n</dependency>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("然后通过上面的类似步骤调试"),a("code",[s._v("smart-doc-maven-plugin")]),s._v("的源码")]),s._v(" "),a("h1",{attrs:{id:"示例源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[s._v("#")]),s._v(" 示例源码")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("https://github.com/realpdai/tech-pdai-spring-demos")]),s._v(" "),a("p",[s._v("https://smart-doc-group.github.io/")])])}),[],!1,null,null,null);a.default=t.exports}}]);
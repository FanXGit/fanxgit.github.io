(window.webpackJsonp=window.webpackJsonp||[]).push([[436],{1459:function(s,n,t){s.exports=t.p+"assets/img/alg-sort-insert-1.9e3b4841.jpg"},3774:function(s,n,t){"use strict";t.r(n);var a=t(7),r=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"排序-插入排序-insertion-sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#排序-插入排序-insertion-sort"}},[s._v("#")]),s._v(" 排序 - 插入排序(Insertion Sort)")]),s._v(" "),n("p",[s._v("======================================================")]),s._v(" "),n("blockquote",[n("p",[s._v("本文主要介绍插入排序。@pdai")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[s._v("插入排序介绍"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[s._v("插入排序实现"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("插入排序的时间复杂度和稳定性"),n("OutboundLink")],1),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6",target:"_blank",rel:"noopener noreferrer"}},[s._v("插入排序时间复杂度"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("插入排序稳定性"),n("OutboundLink")],1)])])]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[s._v("代码实现"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-insert.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文章"),n("OutboundLink")],1)])]),s._v(" "),n("h1",{attrs:{id:"插入排序介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序介绍"}},[s._v("#")]),s._v(" 插入排序介绍")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("直接插入排序(Straight Insertion Sort)的基本思想是: 把n个待排序的元素看成为一个有序表和一个无序表。开始时有序表中只包含1个元素，无序表中包含有n-1个元素，排序过程中每次从无序表中取出第一个元素，将它插入到有序表中的适当位置，使之成为新的有序表，重复n-1次可完成排序过程。")]),s._v(" "),n("h1",{attrs:{id:"插入排序实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序实现"}},[s._v("#")]),s._v(" 插入排序实现")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("下面选取直接插入排序的一个中间过程对其进行说明。假设{20,30,40,10,60,50}中的前3个数已经排列过，是有序的了；接下来对10进行排列。示意图如下:")]),s._v(" "),n("p",[n("img",{attrs:{src:t(1459),alt:""}})]),s._v(" "),n("p",[s._v("图中将数列分为有序区和无序区。我们需要做的工作只有两个: (1)取出无序区中的第1个数，并找出它在有序区对应的位置。(2)将无序区的数据插入到有序区；若有必要的话，则对有序区中的相关数据进行移位。")]),s._v(" "),n("h1",{attrs:{id:"插入排序的时间复杂度和稳定性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序的时间复杂度和稳定性"}},[s._v("#")]),s._v(" 插入排序的时间复杂度和稳定性")]),s._v(" "),n("hr"),s._v(" "),n("h3",{attrs:{id:"插入排序时间复杂度"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序时间复杂度"}},[s._v("#")]),s._v(" 插入排序时间复杂度")]),s._v(" "),n("p",[s._v("直接插入排序的时间复杂度是O(N2)。")]),s._v(" "),n("p",[s._v("假设被排序的数列中有N个数。遍历一趟的时间复杂度是O(N)，需要遍历多少次呢? N-1！因此，直接插入排序的时间复杂度是O(N2)。")]),s._v(" "),n("h3",{attrs:{id:"插入排序稳定性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插入排序稳定性"}},[s._v("#")]),s._v(" 插入排序稳定性")]),s._v(" "),n("p",[s._v("直接插入排序是稳定的算法，它满足稳定算法的定义。")]),s._v(" "),n("p",[n("code",[s._v("算法稳定性")]),s._v(" -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！")]),s._v(" "),n("h1",{attrs:{id:"代码实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),n("hr"),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('/**\n * 直接插入排序: Java\n *\n * @author skywang\n * @date 2014/03/11\n */\n\npublic class InsertSort {\n\n    /*\n     * 直接插入排序\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组的长度\n     */\n    public static void insertSort(int[] a, int n) {\n        int i, j, k;\n\n        for (i = 1; i < n; i++) {\n\n            //为a[i]在前面的a[0...i-1]有序区间中找一个合适的位置\n            for (j = i - 1; j >= 0; j--)\n                if (a[j] < a[i])\n                    break;\n\n            //如找到了一个合适的位置\n            if (j != i - 1) {\n                //将比a[i]大的数据向后移\n                int temp = a[i];\n                for (k = i - 1; k > j; k--)\n                    a[k + 1] = a[k];\n                //将a[i]放到正确位置上\n                a[k + 1] = temp;\n            }\n        }\n    }\n\n    public static void main(String[] args) {\n        int i;\n        int[] a = {20,40,30,10,60,50};\n\n        System.out.printf("before sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n\n        insertSort(a, a.length);\n\n        System.out.printf("after  sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br")])]),n("h1",{attrs:{id:"参考文章"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("提示")]),s._v(" "),n("p",[s._v("本文主要参考至 https://www.cnblogs.com/skywang12345/p/3596881.html, 在此基础上做了内容的增改。)")])])}),[],!1,null,null,null);n.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[603],{3890:function(s,a,n){"use strict";n.r(a);var e=n(7),t=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"redis入门-数据类型-3种特殊类型详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis入门-数据类型-3种特殊类型详解"}},[s._v("#")]),s._v(" Redis入门 - 数据类型：3种特殊类型详解")]),s._v(" "),a("p",[s._v("===================================================")]),s._v(" "),a("blockquote",[a("p",[s._v("Redis除了上文中5种基础数据类型，还有三种特殊的数据类型，分别是 "),a("strong",[s._v("HyperLogLogs")]),s._v("（基数统计）， "),a("strong",[s._v("Bitmaps")]),s._v(" (位图) 和 "),a("strong",[s._v("geospatial")]),s._v(" （地理位置）。@pdai")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#redis%E5%85%A5%E9%97%A8---%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B3%E7%A7%8D%E7%89%B9%E6%AE%8A%E7%B1%BB%E5%9E%8B%E8%AF%A6%E8%A7%A3"}},[s._v("Redis入门 - 数据类型：3种特殊类型详解")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#hyperloglogs%E5%9F%BA%E6%95%B0%E7%BB%9F%E8%AE%A1"}},[s._v("HyperLogLogs（基数统计）")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#bitmap-%E4%BD%8D%E5%AD%98%E5%82%A8"}},[s._v("Bitmap （位存储）")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#geospatial-%E5%9C%B0%E7%90%86%E4%BD%8D%E7%BD%AE"}},[s._v("geospatial (地理位置)")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#geoadd"}},[s._v("geoadd")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#geopos"}},[s._v("geopos")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#geodist"}},[s._v("geodist")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#georadius"}},[s._v("georadius")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#georadiusbymember"}},[s._v("georadiusbymember")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#geohash%E8%BE%83%E5%B0%91%E4%BD%BF%E7%94%A8"}},[s._v("geohash(较少使用)")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%BA%95%E5%B1%82"}},[s._v("底层")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0"}},[s._v("参考文章")])])])])]),s._v(" "),a("h1",{attrs:{id:"hyperloglogs-基数统计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hyperloglogs-基数统计"}},[s._v("#")]),s._v(" HyperLogLogs（基数统计）")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("Redis 2.8.9 版本更新了 Hyperloglog 数据结构！")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("什么是基数？")])])]),s._v(" "),a("p",[s._v("举个例子，A = {1, 2, 3, 4, 5}， B = {3, 5, 6, 7, 9}；那么基数（不重复的元素）= 1, 2, 4, 6, 7, 9； （允许容错，即可以接受一定误差）")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("HyperLogLogs 基数统计用来解决什么问题")]),s._v("？")])]),s._v(" "),a("p",[s._v("这个结构可以非常省内存的去统计各种计数，比如注册 IP 数、每日访问 IP 数、页面实时UV、在线用户数，共同好友数等。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("它的优势体现在哪")]),s._v("？")])]),s._v(" "),a("p",[s._v("一个大型的网站，每天 IP 比如有 100 万，粗算一个 IP 消耗 15 字节，那么 100 万个 IP 就是 15M。而 HyperLogLog 在 Redis 中每个键占用的内容都是 12K，理论存储近似接近 2^64 个值，不管存储的内容是什么，它一个基于基数估算的算法，只能比较准确的估算出基数，可以使用少量固定的内存去存储并识别集合中的唯一元素。而且这个估算的基数并不一定准确，是一个带有 0.81% 标准错误的近似值（对于可以接受一定容错的业务场景，比如IP数统计，UV等，是可以忽略不计的）。")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("相关命令使用")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> pfadd key1 a b c d e f g h i\t# 创建第一组元素\n(integer) 1\n127.0.0.1:6379> pfcount key1\t\t\t\t\t# 统计元素的基数数量\n(integer) 9\n127.0.0.1:6379> pfadd key2 c j k l m e g a\t\t# 创建第二组元素\n(integer) 1\n127.0.0.1:6379> pfcount key2\n(integer) 8\n127.0.0.1:6379> pfmerge key3 key1 key2\t\t\t# 合并两组：key1 key2 -> key3 并集\nOK\n127.0.0.1:6379> pfcount key3\n(integer) 13\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h1",{attrs:{id:"bitmap-位存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bitmap-位存储"}},[s._v("#")]),s._v(" Bitmap （位存储）")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("Bitmap 即位图数据结构，都是操作二进制位来进行记录，只有0 和 1 两个状态。")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("用来解决什么问题")]),s._v("？")])]),s._v(" "),a("p",[s._v("比如：统计用户信息，活跃，不活跃！ 登录，未登录！ 打卡，不打卡！ "),a("strong",[s._v("两个状态的，都可以使用 Bitmaps")]),s._v("！")]),s._v(" "),a("p",[s._v("如果存储一年的打卡状态需要多少内存呢？ 365 天 = 365 bit 1字节 = 8bit 46 个字节左右！")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("相关命令使用")])])]),s._v(" "),a("p",[s._v("使用bitmap 来记录 周一到周日的打卡！ 周一：1 周二：0 周三：0 周四：1 ......")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> setbit sign 0 1\n(integer) 0\n127.0.0.1:6379> setbit sign 1 1\n(integer) 0\n127.0.0.1:6379> setbit sign 2 0\n(integer) 0\n127.0.0.1:6379> setbit sign 3 1\n(integer) 0\n127.0.0.1:6379> setbit sign 4 0\n(integer) 0\n127.0.0.1:6379> setbit sign 5 0\n(integer) 0\n127.0.0.1:6379> setbit sign 6 1\n(integer) 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("查看某一天是否有打卡！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> getbit sign 3\n(integer) 1\n127.0.0.1:6379> getbit sign 5\n(integer) 0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("统计操作，统计 打卡的天数！")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> bitcount sign # 统计这周的打卡记录，就可以看到是否有全勤！\n(integer) 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h1",{attrs:{id:"geospatial-地理位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geospatial-地理位置"}},[s._v("#")]),s._v(" geospatial (地理位置)")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("Redis 的 Geo 在 Redis 3.2 版本就推出了! 这个功能可以推算地理位置的信息: 两地之间的距离, 方圆几里的人")])]),s._v(" "),a("h3",{attrs:{id:"geoadd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geoadd"}},[s._v("#")]),s._v(" geoadd")]),s._v(" "),a("blockquote",[a("p",[s._v("添加地理位置")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> geoadd china:city 118.76 32.04 manjing 112.55 37.86 taiyuan 123.43 41.80 shenyang\n(integer) 3\n127.0.0.1:6379> geoadd china:city 144.05 22.52 shengzhen 120.16 30.24 hangzhou 108.96 34.26 xian\n(integer) 3\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("strong",[s._v("规则")])]),s._v(" "),a("p",[s._v("两级无法直接添加，我们一般会下载城市数据(这个网址可以查询 GEO： http://www.jsons.cn/lngcode)！")]),s._v(" "),a("ul",[a("li",[s._v("有效的经度从-180度到180度。")]),s._v(" "),a("li",[s._v("有效的纬度从-85.05112878度到85.05112878度。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 当坐标位置超出上述指定范围时，该命令将会返回一个错误。\n127.0.0.1:6379> geoadd china:city 39.90 116.40 beijin\n(error) ERR invalid longitude,latitude pair 39.900000,116.400000\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"geopos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geopos"}},[s._v("#")]),s._v(" geopos")]),s._v(" "),a("blockquote",[a("p",[s._v("获取指定的成员的经度和纬度")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> geopos china:city taiyuan manjing\n1) 1) "112.54999905824661255"\n   1) "37.86000073876942196"\n2) 1) "118.75999957323074341"\n   1) "32.03999960287850968"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("获得当前定位, 一定是一个坐标值!")]),s._v(" "),a("h3",{attrs:{id:"geodist"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geodist"}},[s._v("#")]),s._v(" geodist")]),s._v(" "),a("blockquote",[a("p",[s._v("如果不存在, 返回空")])]),s._v(" "),a("p",[s._v("单位如下")]),s._v(" "),a("ul",[a("li",[s._v("m")]),s._v(" "),a("li",[s._v("km")]),s._v(" "),a("li",[s._v("mi 英里")]),s._v(" "),a("li",[s._v("ft 英尺")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> geodist china:city taiyuan shenyang m\n"1026439.1070"\n127.0.0.1:6379> geodist china:city taiyuan shenyang km\n"1026.4391"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h3",{attrs:{id:"georadius"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#georadius"}},[s._v("#")]),s._v(" georadius")]),s._v(" "),a("blockquote",[a("p",[s._v("附近的人 ==> 获得所有附近的人的地址, 定位, 通过半径来查询")])]),s._v(" "),a("p",[s._v("获得指定数量的人")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> georadius china:city 110 30 1000 km\t\t\t以 100,30 这个坐标为中心, 寻找半径为1000km的城市\n1) "xian"\n2) "hangzhou"\n3) "manjing"\n4) "taiyuan"\n127.0.0.1:6379> georadius china:city 110 30 500 km\n1) "xian"\n127.0.0.1:6379> georadius china:city 110 30 500 km withdist\n1) 1) "xian"\n   2) "483.8340"\n127.0.0.1:6379> georadius china:city 110 30 1000 km withcoord withdist count 2\n1) 1) "xian"\n   2) "483.8340"\n   3) 1) "108.96000176668167114"\n      2) "34.25999964418929977"\n2) 1) "manjing"\n   2) "864.9816"\n   3) 1) "118.75999957323074341"\n      2) "32.03999960287850968"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("参数 key 经度 纬度 半径 单位 [显示结果的经度和纬度] [显示结果的距离] [显示的结果的数量]")]),s._v(" "),a("h3",{attrs:{id:"georadiusbymember"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#georadiusbymember"}},[s._v("#")]),s._v(" georadiusbymember")]),s._v(" "),a("blockquote",[a("p",[s._v("显示与指定成员一定半径范围内的其他成员")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> georadiusbymember china:city taiyuan 1000 km\n1) "manjing"\n2) "taiyuan"\n3) "xian"\n127.0.0.1:6379> georadiusbymember china:city taiyuan 1000 km withcoord withdist count 2\n1) 1) "taiyuan"\n   2) "0.0000"\n   3) 1) "112.54999905824661255"\n      2) "37.86000073876942196"\n2) 1) "xian"\n   2) "514.2264"\n   3) 1) "108.96000176668167114"\n      2) "34.25999964418929977"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("参数与 georadius 一样")]),s._v(" "),a("h3",{attrs:{id:"geohash-较少使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geohash-较少使用"}},[s._v("#")]),s._v(" geohash(较少使用)")]),s._v(" "),a("blockquote",[a("p",[s._v("该命令返回11个字符的hash字符串")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> geohash china:city taiyuan shenyang\n1) "ww8p3hhqmp0"\n2) "wxrvb9qyxk0"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("将二维的经纬度转换为一维的字符串, 如果两个字符串越接近, 则距离越近")]),s._v(" "),a("h3",{attrs:{id:"底层"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#底层"}},[s._v("#")]),s._v(" 底层")]),s._v(" "),a("blockquote",[a("p",[s._v("geo底层的实现原理实际上就是Zset, 我们可以通过Zset命令来操作geo")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("127.0.0.1:6379> type china:city\nzset\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("查看全部元素 删除指定的元素")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('127.0.0.1:6379> zrange china:city 0 -1 withscores\n 1) "xian"\n 2) "4040115445396757"\n 3) "hangzhou"\n 4) "4054133997236782"\n 5) "manjing"\n 6) "4066006694128997"\n 7) "taiyuan"\n 8) "4068216047500484"\n 9) "shenyang"\n1)  "4072519231994779"\n2)  "shengzhen"\n3)  "4154606886655324"\n127.0.0.1:6379> zrem china:city manjing\n(integer) 1\n127.0.0.1:6379> zrange china:city 0 -1\n1) "xian"\n2) "hangzhou"\n3) "taiyuan"\n4) "shenyang"\n5) "shengzhen"\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("h1",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[s._v("#")]),s._v(" 参考文章")]),s._v(" "),a("hr"),s._v(" "),a("ul",[a("li",[s._v("http://www.jsons.cn/lngcode")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/junlinsky/p/13528452.html")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/touyel/p/12728096.html")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/junlinsky/p/13528452.html")]),s._v(" "),a("li",[s._v("https://www.cnblogs.com/wang-sky/p/13857787.html)")])])])}),[],!1,null,null,null);a.default=t.exports}}]);
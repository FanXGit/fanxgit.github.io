(window.webpackJsonp=window.webpackJsonp||[]).push([[348],{1204:function(t,e,r){t.exports=r.p+"assets/img/springboot-x-undertow-1.7f0a1604.png"},1205:function(t,e,r){t.exports=r.p+"assets/img/springboot-x-undertow-2.c791ee0e.png"},3722:function(t,e,r){"use strict";r.r(e);var n=r(7),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"springboot应用部署-替换tomcat为undertow容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#springboot应用部署-替换tomcat为undertow容器"}},[t._v("#")]),t._v(" SpringBoot应用部署 - 替换tomcat为Undertow容器")]),t._v(" "),e("p",[t._v("=============================================================================")]),t._v(" "),e("blockquote",[e("p",[t._v("前文我们了解到Jetty更满足公有云的分布式环境的需求，而Tomcat更符合企业级环境；那么从性能的角度来看，更为优秀的servlet容器是Undertow。本文将介绍Undertow，以及SpringBoot集成Undertow的示例。@pdai")])]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#springboot%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2---%E6%9B%BF%E6%8D%A2tomcat%E4%B8%BAundertow%E5%AE%B9%E5%99%A8"}},[t._v("SpringBoot应用部署 - 替换tomcat为Undertow容器")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E6%A6%82%E8%BF%B0"}},[t._v("概述")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFundertow"}},[t._v("什么是Undertow?")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#undertow%E6%80%A7%E8%83%BD%E6%AF%94jetty%E5%92%8Ctomcat%E5%BC%BA%E5%A4%9A%E5%B0%91"}},[t._v("Undertow性能比jetty和tomcat强多少？")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E6%9B%BF%E6%8D%A2tomcat%E4%B8%BAundertow%E5%AE%B9%E5%99%A8"}},[t._v("替换tomcat为Undertow容器")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E7%A7%BB%E9%99%A4%E5%86%85%E5%B5%8C%E7%9A%84tomcat%E5%B9%B6%E4%BD%BF%E7%94%A8undertow"}},[t._v("移除内嵌的Tomcat并使用Undertow")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E9%85%8D%E7%BD%AEundertow"}},[t._v("配置Undertow")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E7%AE%80%E5%8D%95%E6%B5%8B%E8%AF%95"}},[t._v("简单测试")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[t._v("进一步理解")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E5%9C%A8%E5%BC%82%E6%AD%A5nio%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E6%80%A7%E8%83%BD"}},[t._v("在异步NIO环境下的性能？")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[t._v("示例源码")])])])])]),t._v(" "),e("h1",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("需要了解什么是Undertow，以及Undertow的性能优势。")])]),t._v(" "),e("h3",{attrs:{id:"什么是undertow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是undertow"}},[t._v("#")]),t._v(" 什么是Undertow?")]),t._v(" "),e("blockquote",[e("p",[t._v("内容来源于"),e("a",{attrs:{href:"https://undertow.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Undertow官网 在新窗口打开"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("Undertow 是一个采用 Java 开发的灵活的高性能 Web 服务器，提供包括阻塞和基于 NIO 的非堵塞机制。Undertow 是RedHat公司的开源产品(原先是JBoss的产品，然后Redhat收购了JBoss)，是 Wildfly 默认的 Web 服务器。")]),t._v(" "),e("p",[t._v("Undertow 提供一个基础的架构用来构建 Web 服务器，这是一个完全为嵌入式设计的项目，提供易用的构建器 API，完全兼容 Java EE Servlet 4 和低级非堵塞的处理器。")]),t._v(" "),e("p",[t._v("Undertow设计为完全可嵌入的，并具有易于使用的流畅的Builder API。 Undertow的生命周期完全由嵌入应用程序控制。")]),t._v(" "),e("p",[e("strong",[t._v("Undertow的特性有哪些")]),t._v("？")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("HTTP/2 Support")]),t._v(" Undertow 支持 HTTP/2 开箱即用，不需要重写引导类路径。")]),t._v(" "),e("li",[e("strong",[t._v("支持 HTTP 升级")]),t._v(" 支持 HTTP 升级，允许多个协议通过 HTTP 端口上进行复用。")]),t._v(" "),e("li",[e("strong",[t._v("支持 Web Socket")]),t._v(" Undertow 提供对 Web 套接字的全面支持，包括对 JSR-356 的支持。")]),t._v(" "),e("li",[e("strong",[t._v("支持 Servlet 4.0")]),t._v(" Undertow 提供了对 Servlet 4.0 的支持，包括对嵌入式 Servlet 的支持，还可以混合部署 Servlet 和原生 Undertow 非阻塞处理程序。")]),t._v(" "),e("li",[e("strong",[t._v("可嵌入式")]),t._v(" Undertow 可以嵌入到应用程序中，也可以通过几行代码独立运行。")]),t._v(" "),e("li",[e("strong",[t._v("高灵活性")]),t._v(" 一个 Undertow 服务器是通过链式处理器来配置的，可以根据需要添加功能，因此可以避免添加没有必要的功能。")])]),t._v(" "),e("h3",{attrs:{id:"undertow性能比jetty和tomcat强多少"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#undertow性能比jetty和tomcat强多少"}},[t._v("#")]),t._v(" Undertow性能比jetty和tomcat强多少？")]),t._v(" "),e("blockquote",[e("p",[t._v("关于Undertow的性能和jetty,tomcat对于，可以看如下两篇文章：")])]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"https://examples.javacodegeeks.com/enterprise-java/spring/tomcat-vs-jetty-vs-undertow-comparison-of-spring-boot-embedded-servlet-containers/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat vs. Jetty vs. Undertow: Comparison of Spring Boot Embedded Servlet Containers 在新窗口打开"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1699803",target:"_blank",rel:"noopener noreferrer"}},[t._v("Tomcat vs Jetty vs Undertow性能对比 在新窗口打开"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("大概的结论是：综合吞吐量，响应时间以及资源消耗，Undertow胜出")]),t._v(" "),e("ol",[e("li",[t._v("吞吐量及响应时间\n"),e("ol",[e("li",[t._v("吞吐量：Undertow > Jetty > Tomcat")]),t._v(" "),e("li",[t._v("响应时间：Jetty < Tomcat < Undertow")])])]),t._v(" "),e("li",[t._v("CPU使用率：Undertow < Jetty < Tomcat")]),t._v(" "),e("li",[t._v("内存使用率：Undertow < Jetty < Tomcat")]),t._v(" "),e("li",[t._v("线程数：Undertow < Jetty < Tomcat")])]),t._v(" "),e("h1",{attrs:{id:"替换tomcat为undertow容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#替换tomcat为undertow容器"}},[t._v("#")]),t._v(" 替换tomcat为Undertow容器")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("这里以一个Helloworld项目（"),e("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-hello-world.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot入门 - 创建第一个Hello world工程"),e("OutboundLink")],1),t._v("）为例，在此基础上移除内嵌的Tomcat并使用Undertow。")])]),t._v(" "),e("h3",{attrs:{id:"移除内嵌的tomcat并使用undertow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#移除内嵌的tomcat并使用undertow"}},[t._v("#")]),t._v(" 移除内嵌的Tomcat并使用Undertow")]),t._v(" "),e("p",[t._v("移除内嵌的Tomcat相关的依赖spring-boot-starter-tomcat，并增加undertow的依赖spring-boot-starter-undertow")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-web</artifactId>\n    <exclusions>\n        <exclusion>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n            <groupId>org.springframework.boot</groupId>\n        </exclusion>\n    </exclusions>\n</dependency>\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-undertow</artifactId>\n</dependency>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h3",{attrs:{id:"配置undertow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置undertow"}},[t._v("#")]),t._v(" 配置Undertow")]),t._v(" "),e("p",[t._v("Undertow相关的配置可以看：")]),t._v(" "),e("p",[e("img",{attrs:{src:r(1204),alt:""}})]),t._v(" "),e("h3",{attrs:{id:"简单测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单测试"}},[t._v("#")]),t._v(" 简单测试")]),t._v(" "),e("p",[t._v("运行SpringBootApplication")]),t._v(" "),e("p",[t._v("结果如下")]),t._v(" "),e("p",[e("img",{attrs:{src:r(1205),alt:""}})]),t._v(" "),e("p",[t._v("运行的日志如下")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("\n  .   ____          _            __ _ _\n /\\\\ / ___'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | '_ | '_| | '_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  '  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n :: Spring Boot ::                (v2.5.3)\n\n2022-04-18  22:47:28.900  INFO 60368 --- [           main] .p.s.h.u.SpringBootHelloWorldApplication : Starting SpringBootHelloWorldApplication using Java 1.8.0_181 on MacBook-Pro.local with PID 60368 (/Users/pdai/pdai/www/tech-pdai-spring-demos/105-springboot-demo-helloworld-undertow/target/classes started by pdai in /Users/pdai/pdai/www/tech-pdai-spring-demos)\n2022-04-18  22:47:28.902  INFO 60368 --- [           main] .p.s.h.u.SpringBootHelloWorldApplication : No active profile set, falling back to default profiles: default\n2022-04-18  22:47:29.691  WARN 60368 --- [           main] io.undertow.websockets.jsr               : UT026010: Buffer pool was not set on WebSocketDeploymentInfo, the default pool will be used\n2022-04-18  22:47:29.710  INFO 60368 --- [           main] io.undertow.servlet                      : Initializing Spring embedded WebApplicationContext\n2022-04-18  22:47:29.710  INFO 60368 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 769 ms\n2022-04-18  22:47:30.020  INFO 60368 --- [           main] io.undertow                              : starting server: Undertow - 2.2.9.Final\n2022-04-18  22:47:30.025  INFO 60368 --- [           main] org.xnio                                 : XNIO version 3.8.4.Final\n2022-04-18  22:47:30.029  INFO 60368 --- [           main] org.xnio.nio                             : XNIO NIO Implementation Version 3.8.4.Final\n2022-04-18  22:47:30.060  INFO 60368 --- [           main] org.jboss.threads                        : JBoss Threads version 3.1.0.Final\n2022-04-18  22:47:30.121  INFO 60368 --- [           main] o.s.b.w.e.undertow.UndertowWebServer     : Undertow started on port(s) 8080 (http)\n2022-04-18  22:47:30.132  INFO 60368 --- [           main] .p.s.h.u.SpringBootHelloWorldApplication : Started SpringBootHelloWorldApplication in 1.586 seconds (JVM running for 2.215)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("h1",{attrs:{id:"进一步理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[t._v("#")]),t._v(" 进一步理解")]),t._v(" "),e("hr"),t._v(" "),e("blockquote",[e("p",[t._v("通过几个问题进一步理解。")])]),t._v(" "),e("h3",{attrs:{id:"在异步nio环境下的性能"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在异步nio环境下的性能"}},[t._v("#")]),t._v(" 在异步NIO环境下的性能？")]),t._v(" "),e("blockquote",[e("p",[t._v("结论来源于：https://blog.51cto.com/u_3664660/3212743")])]),t._v(" "),e("p",[t._v("HTTP异步的目的在帮助dispatcherservlet分担压力，提升吞吐量。但如果运行在NIO模式的服务容器上，就会产生负面影响，因为NIO本身就做了类似的事情，此时再加HTTP异步，则相当于又加了N多不必要的线程，导致性能主要消耗在线程的开销上，所以"),e("strong",[t._v("建议使用tomcat作为内嵌容器并且没有开启tomcat的NIO模式时，可以配合HTTP异步来提升程序性能")]),t._v("。尤其是当业务繁重时，提升效果尤其明显。")]),t._v(" "),e("h1",{attrs:{id:"示例源码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[t._v("#")]),t._v(" 示例源码")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);e.default=a.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[214],{249:function(e,s,n){e.exports=n.p+"assets/img/spring-springframework-mvc-5.50ff772b.png"},276:function(e,s,n){e.exports=n.p+"assets/img/spring-springframework-mvc-30.b139e253.png"},3653:function(e,s,n){"use strict";n.r(s);var a=n(7),t=Object(a.a)({},(function(){var e=this,s=e._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"spring进阶-springmvc实现原理之dispatcherservlet处理请求的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring进阶-springmvc实现原理之dispatcherservlet处理请求的过程"}},[e._v("#")]),e._v(" Spring进阶 - SpringMVC实现原理之DispatcherServlet处理请求的过程")]),e._v(" "),s("blockquote",[s("p",[e._v("前文我们有了IOC的源码基础以及SpringMVC的基础，我们便可以进一步深入理解SpringMVC主要实现原理，包含DispatcherServlet的初始化过程和DispatcherServlet处理请求的过程的源码解析。本文是第二篇：DispatcherServlet处理请求的过程的源码解析。@pdai")])]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#spring%E8%BF%9B%E9%98%B6---springmvc%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E4%B9%8Bdispatcherservlet%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B"}},[e._v("Spring进阶 - SpringMVC实现原理之DispatcherServlet处理请求的过程")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#dispatcherservlet%E5%A4%84%E7%90%86%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B"}},[e._v("DispatcherServlet处理请求的过程？")]),e._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E5%9B%9E%E9%A1%BE%E6%95%B4%E7%90%86%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B"}},[e._v("回顾整理处理流程")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#doget%E5%85%A5%E5%8F%A3"}},[e._v("doGet入口")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E8%AF%B7%E6%B1%82%E5%88%86%E5%8F%91"}},[e._v("请求分发")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E6%98%A0%E5%B0%84%E5%92%8C%E9%80%82%E9%85%8D%E5%99%A8%E5%A4%84%E7%90%86"}},[e._v("映射和适配器处理")])]),e._v(" "),s("li",[s("a",{attrs:{href:"#%E8%A7%86%E5%9B%BE%E6%B8%B2%E6%9F%93"}},[e._v("视图渲染")])])])])])])]),e._v(" "),s("h1",{attrs:{id:"dispatcherservlet处理请求的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatcherservlet处理请求的过程"}},[e._v("#")]),e._v(" DispatcherServlet处理请求的过程？")]),e._v(" "),s("hr"),e._v(" "),s("blockquote",[s("p",[e._v("一个请求发出，经过DispatcherServlet进行了什么样的处理，最后将内容返回的呢？")])]),e._v(" "),s("h3",{attrs:{id:"回顾整理处理流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回顾整理处理流程"}},[e._v("#")]),e._v(" 回顾整理处理流程")]),e._v(" "),s("p",[e._v("首先让我们整体看一下Spring Web MVC 处理请求的流程：")]),e._v(" "),s("p",[s("img",{attrs:{src:n(249),alt:""}})]),e._v(" "),s("p",[s("strong",[e._v("核心架构的具体流程步骤")]),e._v("如下：")]),e._v(" "),s("ol",[s("li",[s("strong",[e._v("首先用户发送请求——>DispatcherServlet")]),e._v("，前端控制器收到请求后自己不进行处理，而是委托给其他的解析器进行 处理，作为统一访问点，进行全局的流程控制；")]),e._v(" "),s("li",[s("strong",[e._v("DispatcherServlet——>HandlerMapping")]),e._v("， HandlerMapping 将会把请求映射为 HandlerExecutionChain 对象（包含一 个Handler 处理器（页面控制器）对象、多个HandlerInterceptor 拦截器）对象，通过这种策略模式，很容易添加新 的映射策略；")]),e._v(" "),s("li",[s("strong",[e._v("DispatcherServlet——>HandlerAdapter")]),e._v("，HandlerAdapter 将会把处理器包装为适配器，从而支持多种类型的处理器， 即适配器设计模式的应用，从而很容易支持很多类型的处理器；")]),e._v(" "),s("li",[s("strong",[e._v("HandlerAdapter——>处理器功能处理方法的调用")]),e._v("，HandlerAdapter 将会根据适配的结果调用真正的处理器的功能处 理方法，完成功能处理；并返回一个ModelAndView 对象（包含模型数据、逻辑视图名）；")]),e._v(" "),s("li",[s("strong",[e._v("ModelAndView 的逻辑视图名——> ViewResolver")]),e._v("，ViewResolver 将把逻辑视图名解析为具体的View，通过这种策 略模式，很容易更换其他视图技术；")]),e._v(" "),s("li",[s("strong",[e._v("View——>渲染")]),e._v("，View 会根据传进来的Model 模型数据进行渲染，此处的Model 实际是一个Map 数据结构，因此 很容易支持其他视图技术；")]),e._v(" "),s("li",[s("strong",[e._v("返回控制权给DispatcherServlet")]),e._v("，由DispatcherServlet 返回响应给用户，到此一个流程结束。")])]),e._v(" "),s("h3",{attrs:{id:"doget入口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#doget入口"}},[e._v("#")]),e._v(" doGet入口")]),e._v(" "),s("blockquote",[s("p",[e._v("我们以上个demo中这个GET请求为例，请求URL是http://localhost:8080/011_spring_framework_demo_springmvc_war_exploded/user")])]),e._v(" "),s("p",[e._v("我们知道servlet处理get请求是doGet方法，所以我们去找DispatcherServlet类结构中的doGet方法。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Override\nprotected final void doGet(HttpServletRequest request, HttpServletResponse response)\n    throws ServletException, IOException {\n\n  processRequest(request, response);\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br")])]),s("p",[e._v("processRequest处理请求的方法如下：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('/**\n  * Process this request, publishing an event regardless of the outcome.\n  * <p>The actual event handling is performed by the abstract\n  * {@link #doService} template method.\n  */\nprotected final void processRequest(HttpServletRequest request, HttpServletResponse response)\n    throws ServletException, IOException {\n\n  // 计算处理请求的时间\n  long startTime = System.currentTimeMillis();\n  Throwable failureCause = null;\n\n  LocaleContext previousLocaleContext = LocaleContextHolder.getLocaleContext();\n  LocaleContext localeContext = buildLocaleContext(request);\n\n  RequestAttributes previousAttributes = RequestContextHolder.getRequestAttributes();\n  ServletRequestAttributes requestAttributes = buildRequestAttributes(request, response, previousAttributes);\n\n  WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n  asyncManager.registerCallableInterceptor(FrameworkServlet.class.getName(), new RequestBindingInterceptor());\n\n  // 初始化context\n  initContextHolders(request, localeContext, requestAttributes);\n\n  try {\n    // 看这里\n    doService(request, response);\n  }\n  catch (ServletException | IOException ex) {\n    failureCause = ex;\n    throw ex;\n  }\n  catch (Throwable ex) {\n    failureCause = ex;\n    throw new NestedServletException("Request processing failed", ex);\n  }\n\n  finally {\n    // 重置context\n    resetContextHolders(request, previousLocaleContext, previousAttributes);\n    if (requestAttributes != null) {\n      requestAttributes.requestCompleted();\n    }\n    logResult(request, response, failureCause, asyncManager);\n    publishRequestHandledEvent(request, response, startTime, failureCause);\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br")])]),s("p",[e._v("本质上就是调用doService方法，由DispatchServlet类实现")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("/**\n  * Exposes the DispatcherServlet-specific request attributes and delegates to {@link #doDispatch}\n  * for the actual dispatching.\n  */\n@Override\nprotected void doService(HttpServletRequest request, HttpServletResponse response) throws Exception {\n  logRequest(request);\n\n  // 保存下请求之前的参数.\n  Map<String, Object> attributesSnapshot = null;\n  if (WebUtils.isIncludeRequest(request)) {\n    attributesSnapshot = new HashMap<>();\n    Enumeration<?> attrNames = request.getAttributeNames();\n    while (attrNames.hasMoreElements()) {\n      String attrName = (String) attrNames.nextElement();\n      if (this.cleanupAfterInclude || attrName.startsWith(DEFAULT_STRATEGIES_PREFIX)) {\n        attributesSnapshot.put(attrName, request.getAttribute(attrName));\n      }\n    }\n  }\n\n  // 方便后续 handlers 和 view 要使用它们.\n  request.setAttribute(WEB_APPLICATION_CONTEXT_ATTRIBUTE, getWebApplicationContext());\n  request.setAttribute(LOCALE_RESOLVER_ATTRIBUTE, this.localeResolver);\n  request.setAttribute(THEME_RESOLVER_ATTRIBUTE, this.themeResolver);\n  request.setAttribute(THEME_SOURCE_ATTRIBUTE, getThemeSource());\n\n  if (this.flashMapManager != null) {\n    FlashMap inputFlashMap = this.flashMapManager.retrieveAndUpdate(request, response);\n    if (inputFlashMap != null) {\n      request.setAttribute(INPUT_FLASH_MAP_ATTRIBUTE, Collections.unmodifiableMap(inputFlashMap));\n    }\n    request.setAttribute(OUTPUT_FLASH_MAP_ATTRIBUTE, new FlashMap());\n    request.setAttribute(FLASH_MAP_MANAGER_ATTRIBUTE, this.flashMapManager);\n  }\n\n  RequestPath previousRequestPath = null;\n  if (this.parseRequestPath) {\n    previousRequestPath = (RequestPath) request.getAttribute(ServletRequestPathUtils.PATH_ATTRIBUTE);\n    ServletRequestPathUtils.parseAndCache(request);\n  }\n\n  try {\n    // 看这里，终于将这个请求分发出去了\n    doDispatch(request, response);\n  }\n  finally {\n    if (!WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) {\n      // Restore the original attribute snapshot, in case of an include.\n      if (attributesSnapshot != null) {\n        restoreAttributesAfterInclude(request, attributesSnapshot);\n      }\n    }\n    if (this.parseRequestPath) {\n      ServletRequestPathUtils.setParsedRequestPath(previousRequestPath, request);\n    }\n  }\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br")])]),s("h3",{attrs:{id:"请求分发"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求分发"}},[e._v("#")]),e._v(" 请求分发")]),e._v(" "),s("p",[e._v("doDispatch方法是真正处理请求的核心方法")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('protected void doDispatch(HttpServletRequest request, HttpServletResponse response) throws Exception {\n  HttpServletRequest processedRequest = request;\n  HandlerExecutionChain mappedHandler = null;\n  boolean multipartRequestParsed = false;\n\n  WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n\n  try {\n    ModelAndView mv = null;\n    Exception dispatchException = null;\n\n    try {\n      // 判断是不是文件上传类型的request\n      processedRequest = checkMultipart(request);\n      multipartRequestParsed = (processedRequest != request);\n\n      // 根据request获取匹配的handler.\n      mappedHandler = getHandler(processedRequest);\n      if (mappedHandler == null) {\n        noHandlerFound(processedRequest, response);\n        return;\n      }\n\n      // 根据handler获取匹配的handlerAdapter\n      HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler());\n\n      // 如果handler支持last-modified头处理\n      String method = request.getMethod();\n      boolean isGet = HttpMethod.GET.matches(method);\n      if (isGet || HttpMethod.HEAD.matches(method)) {\n        long lastModified = ha.getLastModified(request, mappedHandler.getHandler());\n        if (new ServletWebRequest(request, response).checkNotModified(lastModified) && isGet) {\n          return;\n        }\n      }\n\n      if (!mappedHandler.applyPreHandle(processedRequest, response)) {\n        return;\n      }\n\n      // 真正handle处理，并返回modelAndView\n      mv = ha.handle(processedRequest, response, mappedHandler.getHandler());\n\n      if (asyncManager.isConcurrentHandlingStarted()) {\n        return;\n      }\n\n      // 通过视图的prefix和postfix获取完整的视图名\n      applyDefaultViewName(processedRequest, mv);\n\n      // 应用后置的拦截器\n      mappedHandler.applyPostHandle(processedRequest, response, mv);\n    }\n    catch (Exception ex) {\n      dispatchException = ex;\n    }\n    catch (Throwable err) {\n      // As of 4.3, we\'re processing Errors thrown from handler methods as well,\n      // making them available for @ExceptionHandler methods and other scenarios.\n      dispatchException = new NestedServletException("Handler dispatch failed", err);\n    }\n\n    // 处理handler处理的结果，显然就是对ModelAndView 或者 出现的Excpetion处理\n    processDispatchResult(processedRequest, response, mappedHandler, mv, dispatchException);\n  }\n  catch (Exception ex) {\n    triggerAfterCompletion(processedRequest, response, mappedHandler, ex);\n  }\n  catch (Throwable err) {\n    triggerAfterCompletion(processedRequest, response, mappedHandler,\n        new NestedServletException("Handler processing failed", err));\n  }\n  finally {\n    if (asyncManager.isConcurrentHandlingStarted()) {\n      // Instead of postHandle and afterCompletion\n      if (mappedHandler != null) {\n        mappedHandler.applyAfterConcurrentHandlingStarted(processedRequest, response);\n      }\n    }\n    else {\n      // Clean up any resources used by a multipart request.\n      if (multipartRequestParsed) {\n        cleanupMultipart(processedRequest);\n      }\n    }\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br"),s("span",{staticClass:"line-number"},[e._v("87")]),s("br")])]),s("h3",{attrs:{id:"映射和适配器处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#映射和适配器处理"}},[e._v("#")]),e._v(" 映射和适配器处理")]),e._v(" "),s("p",[e._v("对于真正的handle方法，我们看下其处理流程")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("/**\n  * This implementation expects the handler to be an {@link HandlerMethod}.\n  */\n@Override\n@Nullable\npublic final ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)\n    throws Exception {\n\n  return handleInternal(request, response, (HandlerMethod) handler);\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[e._v("交给handleInternal方法处理，以RequestMappingHandlerAdapter这个HandlerAdapter中的处理方法为例")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("@Override\nprotected ModelAndView handleInternal(HttpServletRequest request,\n    HttpServletResponse response, HandlerMethod handlerMethod) throws Exception {\n\n  ModelAndView mav;\n  checkRequest(request);\n\n  // Execute invokeHandlerMethod in synchronized block if required.\n  if (this.synchronizeOnSession) {\n    HttpSession session = request.getSession(false);\n    if (session != null) {\n      Object mutex = WebUtils.getSessionMutex(session);\n      synchronized (mutex) {\n        mav = invokeHandlerMethod(request, response, handlerMethod);\n      }\n    }\n    else {\n      // No HttpSession available -> no mutex necessary\n      mav = invokeHandlerMethod(request, response, handlerMethod);\n    }\n  }\n  else {\n    // No synchronization on session demanded at all...\n    mav = invokeHandlerMethod(request, response, handlerMethod);\n  }\n\n  if (!response.containsHeader(HEADER_CACHE_CONTROL)) {\n    if (getSessionAttributesHandler(handlerMethod).hasSessionAttributes()) {\n      applyCacheSeconds(response, this.cacheSecondsForSessionAttributeHandlers);\n    }\n    else {\n      prepareResponse(response);\n    }\n  }\n\n  return mav;\n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br")])]),s("p",[s("img",{attrs:{src:n(983),alt:""}})]),e._v(" "),s("p",[e._v("然后执行invokeHandlerMethod这个方法，用来对RequestMapping（usercontroller中的list方法）进行处理")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('/**\n  * Invoke the {@link RequestMapping} handler method preparing a {@link ModelAndView}\n  * if view resolution is required.\n  * @since 4.2\n  * @see #createInvocableHandlerMethod(HandlerMethod)\n  */\n@Nullable\nprotected ModelAndView invokeHandlerMethod(HttpServletRequest request,\n    HttpServletResponse response, HandlerMethod handlerMethod) throws Exception {\n\n  ServletWebRequest webRequest = new ServletWebRequest(request, response);\n  try {\n    \n    WebDataBinderFactory binderFactory = getDataBinderFactory(handlerMethod);\n    ModelFactory modelFactory = getModelFactory(handlerMethod, binderFactory);\n\n    // 重要：设置handler(controller#list)方法上的参数，返回值处理，绑定databinder等\n    ServletInvocableHandlerMethod invocableMethod = createInvocableHandlerMethod(handlerMethod);\n    if (this.argumentResolvers != null) {\n      invocableMethod.setHandlerMethodArgumentResolvers(this.argumentResolvers);\n    }\n    if (this.returnValueHandlers != null) {\n      invocableMethod.setHandlerMethodReturnValueHandlers(this.returnValueHandlers);\n    }\n    invocableMethod.setDataBinderFactory(binderFactory);\n    invocableMethod.setParameterNameDiscoverer(this.parameterNameDiscoverer);\n\n    ModelAndViewContainer mavContainer = new ModelAndViewContainer();\n    mavContainer.addAllAttributes(RequestContextUtils.getInputFlashMap(request));\n    modelFactory.initModel(webRequest, mavContainer, invocableMethod);\n    mavContainer.setIgnoreDefaultModelOnRedirect(this.ignoreDefaultModelOnRedirect);\n\n    \n    AsyncWebRequest asyncWebRequest = WebAsyncUtils.createAsyncWebRequest(request, response);\n    asyncWebRequest.setTimeout(this.asyncRequestTimeout);\n\n    WebAsyncManager asyncManager = WebAsyncUtils.getAsyncManager(request);\n    asyncManager.setTaskExecutor(this.taskExecutor);\n    asyncManager.setAsyncWebRequest(asyncWebRequest);\n    asyncManager.registerCallableInterceptors(this.callableInterceptors);\n    asyncManager.registerDeferredResultInterceptors(this.deferredResultInterceptors);\n\n    if (asyncManager.hasConcurrentResult()) {\n      Object result = asyncManager.getConcurrentResult();\n      mavContainer = (ModelAndViewContainer) asyncManager.getConcurrentResultContext()[0];\n      asyncManager.clearConcurrentResult();\n      LogFormatUtils.traceDebug(logger, traceOn -> {\n        String formatted = LogFormatUtils.formatValue(result, !traceOn);\n        return "Resume with async result [" + formatted + "]";\n      });\n      invocableMethod = invocableMethod.wrapConcurrentResult(result);\n    }\n\n    // 执行controller中方法\n    invocableMethod.invokeAndHandle(webRequest, mavContainer);\n    if (asyncManager.isConcurrentHandlingStarted()) {\n      return null;\n    }\n\n    return getModelAndView(mavContainer, modelFactory, webRequest);\n  }\n  finally {\n    webRequest.requestCompleted();\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br")])]),s("p",[e._v("invokeAndHandle交给UserController中具体执行list方法执行")]),e._v(" "),s("p",[s("img",{attrs:{src:n(984),alt:""}})]),e._v(" "),s("p",[e._v("后续invoke执行的方法，直接看整个请求流程的调用链即可")]),e._v(" "),s("p",[s("img",{attrs:{src:n(276),alt:""}})]),e._v(" "),s("p",[e._v("执行后获得视图和Model")]),e._v(" "),s("p",[s("img",{attrs:{src:n(985),alt:""}})]),e._v(" "),s("h3",{attrs:{id:"视图渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图渲染"}},[e._v("#")]),e._v(" 视图渲染")]),e._v(" "),s("p",[e._v("接下来继续执行processDispatchResult方法，对视图和model（如果有异常则对异常处理）进行处理（显然就是渲染页面了）")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('/**\n  * Handle the result of handler selection and handler invocation, which is\n  * either a ModelAndView or an Exception to be resolved to a ModelAndView.\n  */\nprivate void processDispatchResult(HttpServletRequest request, HttpServletResponse response,\n    @Nullable HandlerExecutionChain mappedHandler, @Nullable ModelAndView mv,\n    @Nullable Exception exception) throws Exception {\n\n  boolean errorView = false;\n\n  // 如果处理过程有异常，则异常处理\n  if (exception != null) {\n    if (exception instanceof ModelAndViewDefiningException) {\n      logger.debug("ModelAndViewDefiningException encountered", exception);\n      mv = ((ModelAndViewDefiningException) exception).getModelAndView();\n    }\n    else {\n      Object handler = (mappedHandler != null ? mappedHandler.getHandler() : null);\n      mv = processHandlerException(request, response, handler, exception);\n      errorView = (mv != null);\n    }\n  }\n\n  // 是否需要渲染视图\n  if (mv != null && !mv.wasCleared()) {\n    render(mv, request, response); // 渲染视图\n    if (errorView) {\n      WebUtils.clearErrorRequestAttributes(request);\n    }\n  }\n  else {\n    if (logger.isTraceEnabled()) {\n      logger.trace("No view rendering, null ModelAndView returned.");\n    }\n  }\n\n  if (WebAsyncUtils.getAsyncManager(request).isConcurrentHandlingStarted()) {\n    // Concurrent handling started during a forward\n    return;\n  }\n\n  if (mappedHandler != null) {\n    // Exception (if any) is already handled..\n    mappedHandler.triggerAfterCompletion(request, response, null);\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br")])]),s("p",[e._v("接下来显然就是渲染视图了, spring在initStrategies方法中初始化的组件（LocaleResovler等）就派上用场了。")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('/**\n  * Render the given ModelAndView.\n  * <p>This is the last stage in handling a request. It may involve resolving the view by name.\n  * @param mv the ModelAndView to render\n  * @param request current HTTP servlet request\n  * @param response current HTTP servlet response\n  * @throws ServletException if view is missing or cannot be resolved\n  * @throws Exception if there\'s a problem rendering the view\n  */\nprotected void render(ModelAndView mv, HttpServletRequest request, HttpServletResponse response) throws Exception {\n  // Determine locale for request and apply it to the response.\n  Locale locale =\n      (this.localeResolver != null ? this.localeResolver.resolveLocale(request) : request.getLocale());\n  response.setLocale(locale);\n\n  View view;\n  String viewName = mv.getViewName();\n  if (viewName != null) {\n    // We need to resolve the view name.\n    view = resolveViewName(viewName, mv.getModelInternal(), locale, request);\n    if (view == null) {\n      throw new ServletException("Could not resolve view with name \'" + mv.getViewName() +\n          "\' in servlet with name \'" + getServletName() + "\'");\n    }\n  }\n  else {\n    // No need to lookup: the ModelAndView object contains the actual View object.\n    view = mv.getView();\n    if (view == null) {\n      throw new ServletException("ModelAndView [" + mv + "] neither contains a view name nor a " +\n          "View object in servlet with name \'" + getServletName() + "\'");\n    }\n  }\n\n  // Delegate to the View object for rendering.\n  if (logger.isTraceEnabled()) {\n    logger.trace("Rendering view [" + view + "] ");\n  }\n  try {\n    if (mv.getStatus() != null) {\n      response.setStatus(mv.getStatus().value());\n    }\n    view.render(mv.getModelInternal(), request, response);\n  }\n  catch (Exception ex) {\n    if (logger.isDebugEnabled()) {\n      logger.debug("Error rendering view [" + view + "]", ex);\n    }\n    throw ex;\n  }\n}\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br")])]),s("p",[e._v("后续就是通过viewResolver进行解析了，这里就不再继续看代码了，上述流程基本上够帮助你构建相关的认知了。")]),e._v(" "),s("p",[e._v("最后无非是返回控制权给DispatcherServlet，由DispatcherServlet 返回响应给用户。")]),e._v(" "),s("p",[e._v("最后的最后我们看下请求的日志：")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("21:45:53.390 [http-nio-8080-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET \"/011_spring_framework_demo_springmvc_war_exploded/user\", parameters={}\n21:45:53.400 [http-nio-8080-exec-6] DEBUG org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping - Mapped to tech.pdai.springframework.springmvc.controller.UserController#list(HttpServletRequest, HttpServletResponse)\n22:51:14.504 [http-nio-8080-exec-6] DEBUG org.springframework.web.servlet.view.JstlView - View name 'userList', model {dateTime=Fri Apr 22 21:45:53 CST 2022, userList=[tech.pdai.springframework.springmvc.entity.User@7b8c8dc]}\n22:51:14.550 [http-nio-8080-exec-6] DEBUG org.springframework.web.servlet.view.JstlView - Forwarding to [/WEB-INF/views/userList.jsp]\n22:51:44.395 [http-nio-8080-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])])])}),[],!1,null,null,null);s.default=t.exports},983:function(e,s,n){e.exports=n.p+"assets/img/spring-springframework-mvc-27.4defc6b7.png"},984:function(e,s,n){e.exports=n.p+"assets/img/spring-springframework-mvc-29.9bbb92ae.png"},985:function(e,s,n){e.exports=n.p+"assets/img/spring-springframework-mvc-31.ee4f8b46.png"}}]);
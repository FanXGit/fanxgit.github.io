(window.webpackJsonp=window.webpackJsonp||[]).push([[434],{1447:function(a,s,n){a.exports=n.p+"assets/img/alg-sort-bubble-1.08827155.jpg"},3769:function(a,s,n){"use strict";n.r(s);var t=n(7),r=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"排序-冒泡排序-bubble-sort"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序-冒泡排序-bubble-sort"}},[a._v("#")]),a._v(" 排序 - 冒泡排序(Bubble Sort)")]),a._v(" "),s("p",[a._v("================================================")]),a._v(" "),s("blockquote",[s("p",[a._v("最简单和最基本的排序。@pdai")])]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[a._v("冒泡排序介绍"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[a._v("冒泡排序实现"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[a._v("复杂度和稳定性"),s("OutboundLink")],1),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6",target:"_blank",rel:"noopener noreferrer"}},[a._v("冒泡排序时间复杂度"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%E7%A8%B3%E5%AE%9A%E6%80%A7",target:"_blank",rel:"noopener noreferrer"}},[a._v("冒泡排序稳定性"),s("OutboundLink")],1)])])]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"}},[a._v("代码实现"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://pdai.tech/md/algorithm/alg-sort-x-bubble.html#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0",target:"_blank",rel:"noopener noreferrer"}},[a._v("参考文章"),s("OutboundLink")],1)])]),a._v(" "),s("h1",{attrs:{id:"冒泡排序介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序介绍"}},[a._v("#")]),a._v(" 冒泡排序介绍")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("它是一种较简单的排序算法。它会遍历若干次要排序的数列，每次遍历时，它都会从前往后依次的比较相邻两个数的大小；如果前者比后者大，则交换它们的位置。这样，一次遍历之后，最大的元素就在数列的末尾！ 采用相同的方法再次遍历时，第二大的元素就被排列在最大元素之前。重复此操作，直到整个数列都有序为止！")]),a._v(" "),s("h1",{attrs:{id:"冒泡排序实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序实现"}},[a._v("#")]),a._v(" 冒泡排序实现")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("下面以数列{20,40,30,10,60,50}为例，演示它的冒泡排序过程(如下图)。")]),a._v(" "),s("p",[s("img",{attrs:{src:n(1447),alt:""}})]),a._v(" "),s("p",[a._v("我们先分析第1趟排序")]),a._v(" "),s("ul",[s("li",[a._v("当i=5,j=0时，a[0]<a[1]。此时，不做任何处理！")]),a._v(" "),s("li",[a._v("当i=5,j=1时，a[1]>a[2]。此时，交换a[1]和a[2]的值；交换之后，a[1]=30，a[2]=40。")]),a._v(" "),s("li",[a._v("当i=5,j=2时，a[2]>a[3]。此时，交换a[2]和a[3]的值；交换之后，a[2]=10，a[3]=40。")]),a._v(" "),s("li",[a._v("当i=5,j=3时，a[3]<a[4]。此时，不做任何处理！")]),a._v(" "),s("li",[a._v("当i=5,j=4时，a[4]>a[5]。此时，交换a[4]和a[5]的值；交换之后，a[4]=50，a[3]=60。")])]),a._v(" "),s("p",[a._v("于是，第1趟排序完之后，数列{20,40,30,10,60,50}变成了{20,30,10,40,50,60}。此时，数列末尾的值最大。")]),a._v(" "),s("p",[a._v("根据这种方法:")]),a._v(" "),s("ul",[s("li",[a._v("第2趟排序完之后，数列中a[5...6]是有序的。")]),a._v(" "),s("li",[a._v("第3趟排序完之后，数列中a[4...6]是有序的。")]),a._v(" "),s("li",[a._v("第4趟排序完之后，数列中a[3...6]是有序的。")]),a._v(" "),s("li",[a._v("第5趟排序完之后，数列中a[1...6]是有序的。整个数列也就是有序的了。")])]),a._v(" "),s("h1",{attrs:{id:"复杂度和稳定性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂度和稳定性"}},[a._v("#")]),a._v(" 复杂度和稳定性")]),a._v(" "),s("hr"),a._v(" "),s("h3",{attrs:{id:"冒泡排序时间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序时间复杂度"}},[a._v("#")]),a._v(" 冒泡排序时间复杂度")]),a._v(" "),s("p",[a._v("冒泡排序的时间复杂度是O(N2)。 假设被排序的数列中有N个数。遍历一趟的时间复杂度是O(N)，需要遍历多少次呢? N-1次！因此，冒泡排序的时间复杂度是O(N2)。")]),a._v(" "),s("h3",{attrs:{id:"冒泡排序稳定性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序稳定性"}},[a._v("#")]),a._v(" 冒泡排序稳定性")]),a._v(" "),s("p",[a._v("冒泡排序是稳定的算法，它满足稳定算法的定义。 算法稳定性 -- 假设在数列中存在a[i]=a[j]，若在排序之前，a[i]在a[j]前面；并且排序之后，a[i]仍然在a[j]前面。则这个排序算法是稳定的！")]),a._v(" "),s("h1",{attrs:{id:"代码实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[a._v("#")]),a._v(" 代码实现")]),a._v(" "),s("hr"),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('/**\n * 冒泡排序: Java\n *\n * @author skywang\n * @date 2014/03/11\n */\n\npublic class BubbleSort {\n\n    /*\n     * 冒泡排序\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组的长度\n     */\n    public static void bubbleSort1(int[] a, int n) {\n        int i,j;\n\n        for (i=n-1; i>0; i--) {\n            // 将a[0...i]中最大的数据放在末尾\n            for (j=0; j<i; j++) {\n\n                if (a[j] > a[j+1]) {\n                    // 交换a[j]和a[j+1]\n                    int tmp = a[j];\n                    a[j] = a[j+1];\n                    a[j+1] = tmp;\n                }\n            }\n        }\n    }\n\n    /*\n     * 冒泡排序(改进版)\n     *\n     * 参数说明: \n     *     a -- 待排序的数组\n     *     n -- 数组的长度\n     */\n    public static void bubbleSort2(int[] a, int n) {\n        int i,j;\n        int flag;                 // 标记\n\n        for (i=n-1; i>0; i--) {\n\n            flag = 0;            // 初始化标记为0\n            // 将a[0...i]中最大的数据放在末尾\n            for (j=0; j<i; j++) {\n                if (a[j] > a[j+1]) {\n                    // 交换a[j]和a[j+1]\n                    int tmp = a[j];\n                    a[j] = a[j+1];\n                    a[j+1] = tmp;\n\n                    flag = 1;    // 若发生交换，则设标记为1\n                }\n            }\n\n            if (flag==0)\n                break;            // 若没发生交换，则说明数列已有序。\n        }\n    }\n\n    public static void main(String[] args) {\n        int i;\n        int[] a = {20,40,30,10,60,50};\n\n        System.out.printf("before sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n\n        bubbleSort1(a, a.length);\n        //bubbleSort2(a, a.length);\n\n        System.out.printf("after  sort:");\n        for (i=0; i<a.length; i++)\n            System.out.printf("%d ", a[i]);\n        System.out.printf("\\n");\n    }\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br"),s("span",{staticClass:"line-number"},[a._v("35")]),s("br"),s("span",{staticClass:"line-number"},[a._v("36")]),s("br"),s("span",{staticClass:"line-number"},[a._v("37")]),s("br"),s("span",{staticClass:"line-number"},[a._v("38")]),s("br"),s("span",{staticClass:"line-number"},[a._v("39")]),s("br"),s("span",{staticClass:"line-number"},[a._v("40")]),s("br"),s("span",{staticClass:"line-number"},[a._v("41")]),s("br"),s("span",{staticClass:"line-number"},[a._v("42")]),s("br"),s("span",{staticClass:"line-number"},[a._v("43")]),s("br"),s("span",{staticClass:"line-number"},[a._v("44")]),s("br"),s("span",{staticClass:"line-number"},[a._v("45")]),s("br"),s("span",{staticClass:"line-number"},[a._v("46")]),s("br"),s("span",{staticClass:"line-number"},[a._v("47")]),s("br"),s("span",{staticClass:"line-number"},[a._v("48")]),s("br"),s("span",{staticClass:"line-number"},[a._v("49")]),s("br"),s("span",{staticClass:"line-number"},[a._v("50")]),s("br"),s("span",{staticClass:"line-number"},[a._v("51")]),s("br"),s("span",{staticClass:"line-number"},[a._v("52")]),s("br"),s("span",{staticClass:"line-number"},[a._v("53")]),s("br"),s("span",{staticClass:"line-number"},[a._v("54")]),s("br"),s("span",{staticClass:"line-number"},[a._v("55")]),s("br"),s("span",{staticClass:"line-number"},[a._v("56")]),s("br"),s("span",{staticClass:"line-number"},[a._v("57")]),s("br"),s("span",{staticClass:"line-number"},[a._v("58")]),s("br"),s("span",{staticClass:"line-number"},[a._v("59")]),s("br"),s("span",{staticClass:"line-number"},[a._v("60")]),s("br"),s("span",{staticClass:"line-number"},[a._v("61")]),s("br"),s("span",{staticClass:"line-number"},[a._v("62")]),s("br"),s("span",{staticClass:"line-number"},[a._v("63")]),s("br"),s("span",{staticClass:"line-number"},[a._v("64")]),s("br"),s("span",{staticClass:"line-number"},[a._v("65")]),s("br"),s("span",{staticClass:"line-number"},[a._v("66")]),s("br"),s("span",{staticClass:"line-number"},[a._v("67")]),s("br"),s("span",{staticClass:"line-number"},[a._v("68")]),s("br"),s("span",{staticClass:"line-number"},[a._v("69")]),s("br"),s("span",{staticClass:"line-number"},[a._v("70")]),s("br"),s("span",{staticClass:"line-number"},[a._v("71")]),s("br"),s("span",{staticClass:"line-number"},[a._v("72")]),s("br"),s("span",{staticClass:"line-number"},[a._v("73")]),s("br"),s("span",{staticClass:"line-number"},[a._v("74")]),s("br"),s("span",{staticClass:"line-number"},[a._v("75")]),s("br"),s("span",{staticClass:"line-number"},[a._v("76")]),s("br"),s("span",{staticClass:"line-number"},[a._v("77")]),s("br"),s("span",{staticClass:"line-number"},[a._v("78")]),s("br"),s("span",{staticClass:"line-number"},[a._v("79")]),s("br"),s("span",{staticClass:"line-number"},[a._v("80")]),s("br"),s("span",{staticClass:"line-number"},[a._v("81")]),s("br"),s("span",{staticClass:"line-number"},[a._v("82")]),s("br")])]),s("h1",{attrs:{id:"参考文章"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[a._v("#")]),a._v(" 参考文章")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("提示")]),a._v(" "),s("p",[a._v("本文主要参考至 https://www.cnblogs.com/skywang12345/p/3596232.html, 在此基础上做了内容的增改。)")])])}),[],!1,null,null,null);s.default=r.exports}}]);
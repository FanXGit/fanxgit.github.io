(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{1072:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-11.10a982e2.png"},1073:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-12.43c77e8e.png"},1074:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-13.0db866f6.png"},1075:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-1.92b31b3c.png"},1076:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-2.77602233.png"},1077:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-3.5598610e.png"},1078:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-4.0008576a.png"},1079:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-6.84a765a5.png"},1080:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-5.81596e59.png"},1081:function(t,s,a){t.exports=a.p+"assets/img/springboot-druid-8.c7f88432.png"},3684:function(t,s,a){"use strict";a.r(s);var r=a(7),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"springboot集成连接池-集成数据库druid连接池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成连接池-集成数据库druid连接池"}},[t._v("#")]),t._v(" SpringBoot集成连接池 - 集成数据库Druid连接池")]),t._v(" "),s("p",[t._v("===================================================================")]),t._v(" "),s("blockquote",[s("p",[t._v("上文介绍默认数据库连接池HikariCP，本文主要介绍SpringBoot集成阿里的Druid连接池的实践; 客观的来说，阿里Druid只能说是中文开源中功能全且广泛的连接池为基础的监控组件，但是（仅从连接池的角度）在生态，维护性，开源规范性，综合性能等方面和HikariCP比还是有很大差距。 @pdai")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E8%BF%9E%E6%8E%A5%E6%B1%A0---%E9%9B%86%E6%88%90%E6%95%B0%E6%8D%AE%E5%BA%93druid%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[t._v("SpringBoot集成连接池 - 集成数据库Druid连接池")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87"}},[t._v("知识准备")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E7%9A%84%E5%AE%9A%E4%BD%8D"}},[t._v("Druid连接池的定位？")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B"}},[t._v("简单示例")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#pom%E9%85%8D%E7%BD%AE"}},[t._v("POM配置")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#yml%E9%85%8D%E7%BD%AE"}},[t._v("yml配置")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E6%B5%8B%E8%AF%95"}},[t._v("测试")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E7%90%86%E8%A7%A3"}},[t._v("进一步理解")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E6%9B%B4%E5%A4%9A%E5%8A%9F%E8%83%BD%E7%AD%89"}},[t._v("更多功能等")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"#%E7%9B%91%E6%8E%A7%E4%BF%A1%E6%81%AF%E9%87%87%E9%9B%86%E7%9A%84statfilter"}},[t._v("监控信息采集的StatFilter")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E8%AF%8A%E6%96%AD%E6%94%AF%E6%8C%81"}},[t._v("诊断支持")])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E9%98%B2sql%E6%B3%A8%E5%85%A5"}},[t._v("防SQL注入")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E9%98%BF%E9%87%8C%E7%9A%84druid%E8%BF%9E%E6%8E%A5%E6%B1%A0"}},[t._v("如何评价阿里的Druid连接池")])])])]),t._v(" "),s("li",[s("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[t._v("示例源码")])])])])]),t._v(" "),s("h1",{attrs:{id:"知识准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[t._v("#")]),t._v(" 知识准备")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("了解Druid连接池。")])]),t._v(" "),s("h3",{attrs:{id:"druid连接池的定位"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#druid连接池的定位"}},[t._v("#")]),t._v(" Druid连接池的定位？")]),t._v(" "),s("blockquote",[s("p",[t._v("Druid连接池是阿里巴巴开源的数据库连接池项目。Druid连接池"),s("strong",[t._v("为监控而生")]),t._v("，内置强大的监控功能，监控特性不影响性能。功能强大，能防SQL注入，内置Loging能诊断Hack应用行为。")])]),t._v(" "),s("ul",[s("li",[t._v("Github项目地址 https://github.com/alibaba/druid")]),t._v(" "),s("li",[t._v("文档 https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98")]),t._v(" "),s("li",[t._v("下载 http://repo1.maven.org/maven2/com/alibaba/druid/")]),t._v(" "),s("li",[t._v("监控DEMO http://120.26.192.168/druid/index.html")])]),t._v(" "),s("p",[t._v("（更多功能请看后续文章）")]),t._v(" "),s("h1",{attrs:{id:"简单示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简单示例"}},[t._v("#")]),t._v(" 简单示例")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("本示例主要展示SpringBoot2 和 Druid CP的集成，并在"),s("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-jpa.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("SpringBoot集成MySQL - 基于JPA的封装"),s("OutboundLink")],1),t._v("基础增加Druid而成。")])]),t._v(" "),s("h3",{attrs:{id:"pom配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pom配置"}},[t._v("#")]),t._v(" POM配置")]),t._v(" "),s("p",[t._v("增加依赖")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("\x3c!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter --\x3e\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>druid-spring-boot-starter</artifactId>\n    <version>1.2.9</version>\n</dependency>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"yml配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#yml配置"}},[t._v("#")]),t._v(" yml配置")]),t._v(" "),s("p",[t._v("详细的yml配置如下：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("spring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/test_db?useSSL=false&autoReconnect=true&characterEncoding=utf8\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: bfXa4Pt2lUUScy8jakXf\n    # Druid datasource\n    type: com.alibaba.druid.pool.DruidDataSource\n    druid:\n      # 初始化大小\n      initial-size: 5\n      # 最小连接数\n      min-idle: 10\n      # 最大连接数\n      max-active: 20\n      # 获取连接时的最大等待时间\n      max-wait: 60000\n      # 一个连接在池中最小生存的时间，单位是毫秒\n      min-evictable-idle-time-millis: 300000\n      # 多久才进行一次检测需要关闭的空闲连接，单位是毫秒\n      time-between-eviction-runs-millis: 60000\n      # 配置扩展插件：stat-监控统计，log4j-日志，wall-防火墙（防止SQL注入），去掉后，监控界面的sql无法统计\n      filters: stat,wall\n      # 检测连接是否有效的 SQL语句，为空时以下三个配置均无效\n      validation-query: SELECT 1\n      # 申请连接时执行validationQuery检测连接是否有效，默认true，开启后会降低性能\n      test-on-borrow: true\n      # 归还连接时执行validationQuery检测连接是否有效，默认false，开启后会降低性能\n      test-on-return: true\n      # 申请连接时如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效，默认false，建议开启，不影响性能\n      test-while-idle: true\n      # 是否开启 StatViewServlet\n      stat-view-servlet:\n        enabled: true\n        # 访问监控页面 白名单，默认127.0.0.1\n        allow: 127.0.0.1\n        login-username: admin\n        login-password: admin\n      # FilterStat\n      filter:\n        stat:\n          # 是否开启 FilterStat，默认true\n          enabled: true\n          # 是否开启 慢SQL 记录，默认false\n          log-slow-sql: true\n          # 慢 SQL 的标准，默认 3000，单位：毫秒\n          slow-sql-millis: 5000\n          # 合并多个连接池的监控数据，默认false\n          merge-sql: false\n  jpa:\n    open-in-view: false\n    generate-ddl: false\n    show-sql: false\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQLDialect\n        format_sql: true\n        use-new-id-generator-mappings: false\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br")])]),s("p",[t._v("更多的配置，请参考"),s("a",{attrs:{href:"https://github.com/alibaba/druid/wiki/DruidDataSource%E9%85%8D%E7%BD%AE%E5%B1%9E%E6%80%A7%E5%88%97%E8%A1%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方配置 在新窗口打开"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),s("p",[t._v("访问http://localhost:8080/druid/datasource.html")]),t._v(" "),s("p",[t._v("admin/admin登录")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1072),alt:""}})]),t._v(" "),s("p",[t._v("访问接口，进行SQL查询")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1073),alt:""}})]),t._v(" "),s("p",[t._v("SQL和慢查询监控")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1074),alt:""}})]),t._v(" "),s("h1",{attrs:{id:"进一步理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#进一步理解"}},[t._v("#")]),t._v(" 进一步理解")]),t._v(" "),s("hr"),t._v(" "),s("blockquote",[s("p",[t._v("进一步理解下阿里的Druid。")])]),t._v(" "),s("h3",{attrs:{id:"更多功能等"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更多功能等"}},[t._v("#")]),t._v(" 更多功能等")]),t._v(" "),s("blockquote",[s("p",[t._v("Druid连接池最初就是为监控系统采集jdbc运行信息而生的，它内置了StatFilter 功能，能采集非常完备的连接池执行信息Druid连接池内置了能和Spring/Servlet关联监控的实现，使得监控Web应用特别方便Druid连接池内置了一个监控页面，提供了非常完备的监控信息，可以快速诊断系统的瓶颈。更多请参考：Druid 的GitHub仓库"),s("a",{attrs:{href:"https://github.com/alibaba/druid/wiki/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("wiki 在新窗口打开"),s("OutboundLink")],1)])]),t._v(" "),s("h4",{attrs:{id:"监控信息采集的statfilter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#监控信息采集的statfilter"}},[t._v("#")]),t._v(" 监控信息采集的StatFilter")]),t._v(" "),s("p",[t._v("Druid连接池的监控信息主要是通过StatFilter 采集的，采集的信息非常全面，包括SQL执行、并发、慢查、执行时间区间分布等。具体配置可以看这个 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_StatFilter")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("监控不影响性能")])])]),t._v(" "),s("p",[t._v("Druid增加StatFilter之后，能采集大量统计信息，同时对性能基本没有影响。StatFilter对CPU和内存的消耗都极小，对系统的影响可以忽略不计。监控不影响性能是Druid连接池的重要特性。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("SQL参数化合并监控")])])]),t._v(" "),s("p",[t._v("实际业务中，如果SQL不是走PreparedStatement，SQL没有参数化，这时SQL需要参数化合并监控才能真实反映业务情况。如下SQL：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from t where id = 1\nselect * from t where id = 2\nselect * from t where id = 3\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("参数化后：")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("select * from t where id = ?\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("参数化合并监控是基于SQL Parser语法解析实现的，是Druid连接池独一无二的功能。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("执行次数、返回行数、更新行数和并发监控")])])]),t._v(" "),s("p",[t._v("StatFilter能采集到每个SQL的执行次数、返回行数总和、更新行数总和、执行中次数和和最大并发。并发监控的统计是在SQL执行开始对计数器加一，结束后对计数器减一实现的。可以采集到每个SQL的当前并发和采集期间的最大并发。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("慢查监控")])])]),t._v(" "),s("p",[t._v("缺省执行耗时超过3秒的被认为是慢查，统计项中有包括每个SQL的最后发生的慢查的耗时和发生时的参数。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Exception监控")])])]),t._v(" "),s("p",[t._v("如果SQL执行时抛出了Exception，SQL统计项上会Exception有最后的发生时间、堆栈和Message，根据这些信息可以很容易定位错误原因。")]),t._v(" "),s("h4",{attrs:{id:"诊断支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#诊断支持"}},[t._v("#")]),t._v(" 诊断支持")]),t._v(" "),s("p",[t._v("Druid连接池内置了LogFilter，将Connection/Statement/ResultSet相关操作的日志输出，可以用于诊断系统问题，也可以用于Hack一个不熟悉的系统。")]),t._v(" "),s("p",[t._v("LogFilter可以输出连接申请/释放，事务提交回滚，Statement的Create/Prepare/Execute/Close，ResultSet的Open/Next/Close，通过LogFilter可以详细诊断一个系统的Jdbc行为。")]),t._v(" "),s("p",[t._v("LogFilter有Log4j、Log4j2、Slf4j、CommsLog等实现，具体配置看这里 https://github.com/alibaba/druid/wiki/%E9%85%8D%E7%BD%AE_LogFilter")]),t._v(" "),s("h4",{attrs:{id:"防sql注入"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#防sql注入"}},[t._v("#")]),t._v(" 防SQL注入")]),t._v(" "),s("p",[t._v("SQL注入攻击是黑客对数据库进行攻击的常用手段，Druid连接池内置了WallFilter 提供防SQL注入功能，在不影响性能的同时防御SQL注入攻击。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("基于语意的防SQL注入")])])]),t._v(" "),s("p",[t._v("Druid连接池内置了一个功能完备的SQL Parser，能够完整解析mysql、sql server、oracle、postgresql的语法，通过语意分析能够精确识别SQL注入攻击。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("极低的漏报率和误报率")])])]),t._v(" "),s("p",[t._v("基于SQL语意分析，大量应用和反馈，使得Druid的防SQL注入拥有极低的漏报率和误报率。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("防注入对性能影响极小")])])]),t._v(" "),s("p",[t._v("内置参数化后的Cache、高性能手写的Parser，使得打开防SQL注入对应用的性能基本不受影响。")]),t._v(" "),s("h3",{attrs:{id:"如何评价阿里的druid连接池"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何评价阿里的druid连接池"}},[t._v("#")]),t._v(" 如何评价阿里的Druid连接池")]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("客观的来说")]),t._v("，阿里Druid只能说是中文开源中功能全且广泛的连接池为基础的监控组件，但是（仅从连接池的角度）在生态，维护性，开源规范性，综合性能等方面和HikariCP比还是有很大差距。（"),s("strong",[t._v("以下是pdai本人观点，对国产开源并没偏见")]),t._v("！）。")])]),t._v(" "),s("p",[t._v("首先，仅从"),s("a",{attrs:{href:"https://github.com/alibaba/druid/wiki/Druid%E8%BF%9E%E6%8E%A5%E6%B1%A0%E4%BB%8B%E7%BB%8D",target:"_blank",rel:"noopener noreferrer"}},[t._v("功能 在新窗口打开"),s("OutboundLink")],1),t._v("上看，Druid并不是一个存粹的连接池，它还承载了监控，诊断，安全的功能。从产品的角度看，all in one 也是有代价的，如果我只期望使用连接池的功能，其它的功能对于使用者来说就是鸡肋；而我们没有看到其长期架构设计（比如插拔式架构，分包设计等）， 大概率是当时Druid这种开源的驱动方式并不是一个完善规范的开源软件开发方式（比如KPI driven和个人主义色彩)")]),t._v(" "),s("p",[t._v("（如果你仅仅从功能上比较，你就已经输了，因为这种比较根本不在一个维度上；看到druid主要作者wenshao和hikari作者的"),s("a",{attrs:{href:"https://github.com/brettwooldridge/HikariCP/issues/232",target:"_blank",rel:"noopener noreferrer"}},[t._v("讨论 在新窗口打开"),s("OutboundLink")],1),t._v("，读者自行辨别~）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1075),alt:""}})]),t._v(" "),s("p",[t._v("文档的规范性，发包规范性，bug修复，生态构建等方面国产开源在那时（当下及未来一段时间）还有很长的路要走。")]),t._v(" "),s("p",[t._v("来看看相关Isusse，2k多个issues哈，没有专职维护（图中Spring的高危漏洞无人修正）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1076),alt:""}})]),t._v(" "),s("p",[t._v("源代码中当前版本是1.2.8，实际版本")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1077),alt:""}})]),t._v(" "),s("p",[t._v("实际mvn repo中已经是1.2.9")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1078),alt:""}})]),t._v(" "),s("p",[t._v("再看wiki，有些链接居然是空的...")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1079),alt:""}})]),t._v(" "),s("p",[t._v("最新的Springboot-starter中SpringBoot还是1.5.12-RELEASE版本，先不说没有支持SpringBoot 2.x版本；高危漏洞无人持续维护，对于开发者而言就是坑(不禁让我又想起了FastJson，说多了都是泪)！")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1080),alt:""}})]),t._v(" "),s("p",[t._v("此外，广告都加到UI上了（KPI压力？）")]),t._v(" "),s("p",[s("img",{attrs:{src:a(1081),alt:""}})]),t._v(" "),s("p",[t._v("只能说，国产开源在还有很长的路要走！")]),t._v(" "),s("h1",{attrs:{id:"示例源码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[t._v("#")]),t._v(" 示例源码")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);s.default=e.exports}}]);
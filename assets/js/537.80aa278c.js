(window.webpackJsonp=window.webpackJsonp||[]).push([[537],{3673:function(s,a,t){"use strict";t.r(a);var e=t(7),n=Object(e.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"springboot接口-如何实现接口限流之分布式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot接口-如何实现接口限流之分布式"}},[s._v("#")]),s._v(" SpringBoot接口 - 如何实现接口限流之分布式")]),s._v(" "),a("p",[s._v("===========================================================")]),s._v(" "),a("blockquote",[a("p",[s._v("上文中介绍了单实例下如何在业务接口层做限流，本文主要介绍分布式场景下限流的方案，以及什么样的分布式场景下需要在业务层加限流而不是接入层; 并且结合"),a("a",{attrs:{href:"https://gitee.com/kailing/ratelimiter-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[s._v("开源的ratelimiter-spring-boot-starter 在新窗口打开"),a("OutboundLink")],1),s._v("为例，作者是kailing， 学习"),a("strong",[s._v("思路+代码封装+starter封装")]),s._v("。 @pdai")])]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#springboot%E6%8E%A5%E5%8F%A3---%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3%E9%99%90%E6%B5%81%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F"}},[s._v("SpringBoot接口 - 如何实现接口限流之分布式")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E5%87%86%E5%A4%87%E7%9F%A5%E8%AF%86%E7%82%B9"}},[s._v("准备知识点")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E6%80%9D%E8%B7%AF%E4%B9%8Bredislua%E5%B0%81%E8%A3%85"}},[s._v("实现思路之redis+lua封装")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E4%BA%9B%E5%88%86%E5%B8%83%E5%BC%8F%E5%9C%BA%E6%99%AF%E4%B8%8B%E8%BF%98%E4%BC%9A%E5%9C%A8%E4%BB%A3%E7%A0%81%E5%B1%82%E8%BF%9B%E8%A1%8C%E6%8E%A7%E5%88%B6%E9%99%90%E6%B5%81"}},[s._v("使用场景：为什么有些分布式场景下，还会在代码层进行控制限流？")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E6%BA%90%E4%BB%A3%E7%A0%81%E7%9A%84%E8%A6%81%E7%82%B9"}},[s._v("源代码的要点")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#1%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B"}},[s._v("1、快速开始")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#11%E6%B7%BB%E5%8A%A0%E7%BB%84%E4%BB%B6%E4%BE%9D%E8%B5%96%E5%B7%B2%E4%B8%8A%E4%BC%A0%E5%88%B0maven%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93"}},[s._v("1.1、添加组件依赖，已上传到maven中央仓库")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#12applicationproperties-%E9%85%8D%E7%BD%AE"}},[s._v("1.2、application.properties 配置")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#13%E5%9C%A8%E9%9C%80%E8%A6%81%E5%8A%A0%E9%99%90%E6%B5%81%E9%80%BB%E8%BE%91%E7%9A%84%E6%96%B9%E6%B3%95%E4%B8%8A%E6%B7%BB%E5%8A%A0%E6%B3%A8%E8%A7%A3-ratelimit%E5%A6%82"}},[s._v("1.3、在需要加限流逻辑的方法上，添加注解 @RateLimit，如：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#131-ratelimit-%E6%B3%A8%E8%A7%A3%E8%AF%B4%E6%98%8E"}},[s._v("1.3.1 @RateLimit 注解说明")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#132-%E9%99%90%E6%B5%81%E7%9A%84%E7%B2%92%E5%BA%A6%E9%99%90%E6%B5%81-key"}},[s._v("1.3.2 限流的粒度，限流 key")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#133-%E8%A7%A6%E5%8F%91%E9%99%90%E6%B5%81%E5%90%8E%E7%9A%84%E8%A1%8C%E4%B8%BA"}},[s._v("1.3.3 触发限流后的行为")])])])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#2%E8%BF%9B%E9%98%B6%E7%94%A8%E6%B3%95"}},[s._v("2、进阶用法")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#21%E8%87%AA%E5%AE%9A%E4%B9%89%E9%99%90%E6%B5%81%E7%9A%84-key"}},[s._v("2.1、自定义限流的 key")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#211ratelimitkey-%E7%9A%84%E6%96%B9%E5%BC%8F"}},[s._v("2.1.1、@RateLimitKey 的方式")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#212%E6%8C%87%E5%AE%9A-keys-%E7%9A%84%E6%96%B9%E5%BC%8F"}},[s._v("2.1.2、指定 keys 的方式")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#213%E8%87%AA%E5%AE%9A%E4%B9%89-key-%E8%8E%B7%E5%8F%96%E5%87%BD%E6%95%B0"}},[s._v("2.1.3、自定义 key 获取函数")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#22%E8%87%AA%E5%AE%9A%E4%B9%89%E9%99%90%E6%B5%81%E5%90%8E%E7%9A%84%E8%A1%8C%E4%B8%BA"}},[s._v("2.2、自定义限流后的行为")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#221%E9%85%8D%E7%BD%AE%E5%93%8D%E5%BA%94%E5%86%85%E5%AE%B9"}},[s._v("2.2.1、配置响应内容")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#222%E8%87%AA%E5%AE%9A%E4%B9%89%E9%99%90%E6%B5%81%E8%A7%A6%E5%8F%91%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E5%99%A8"}},[s._v("2.2.2、自定义限流触发异常处理器")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#223%E8%87%AA%E5%AE%9A%E4%B9%89%E8%A7%A6%E5%8F%91%E9%99%90%E6%B5%81%E5%A4%84%E7%90%86%E5%87%BD%E6%95%B0%E9%99%90%E6%B5%81%E9%99%8D%E7%BA%A7"}},[s._v("2.2.3、自定义触发限流处理函数，限流降级")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#23-%E5%8A%A8%E6%80%81%E8%AE%BE%E7%BD%AE%E9%99%90%E6%B5%81%E5%A4%A7%E5%B0%8F"}},[s._v("2.3 动态设置限流大小")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#231rateexpression-%E7%9A%84%E4%BD%BF%E7%94%A8"}},[s._v("2.3.1、rateExpression 的使用")])])])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#3%E9%9B%86%E6%88%90%E7%A4%BA%E4%BE%8B%E6%B5%8B%E9%AA%8C"}},[s._v("3、集成示例、测验")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#31%E9%9B%86%E6%88%90%E6%B5%8B%E9%AA%8C"}},[s._v("3.1、集成测验")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#32%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95"}},[s._v("3.2、压力测试")])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#4%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0"}},[s._v("4、版本更新")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"#41v111%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E5%86%85%E5%AE%B9"}},[s._v("4.1、（v1.1.1）版本更新内容")])]),s._v(" "),a("li",[a("a",{attrs:{href:"#42v12%E7%89%88%E6%9C%AC%E6%9B%B4%E6%96%B0%E5%86%85%E5%AE%B9"}},[s._v("4.2、（v1.2）版本更新内容")])])])])])]),s._v(" "),a("li",[a("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[s._v("示例源码")])])])])]),s._v(" "),a("h1",{attrs:{id:"准备知识点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#准备知识点"}},[s._v("#")]),s._v(" 准备知识点")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("上文我们提到了分布式限流的思路：")])]),s._v(" "),a("p",[s._v("我们需要"),a("strong",[s._v("分布式限流")]),s._v("和"),a("strong",[s._v("接入层限流")]),s._v("来进行全局限流。")]),s._v(" "),a("ol",[a("li",[s._v("redis+lua实现中的lua脚本")]),s._v(" "),a("li",[s._v("使用Nginx+Lua实现的Lua脚本")]),s._v(" "),a("li",[s._v("使用 OpenResty 开源的限流方案")]),s._v(" "),a("li",[s._v("限流框架，比如Sentinel实现降级限流熔断")])]),s._v(" "),a("h1",{attrs:{id:"实现思路之redis-lua封装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现思路之redis-lua封装"}},[s._v("#")]),s._v(" 实现思路之redis+lua封装")]),s._v(" "),a("hr"),s._v(" "),a("blockquote",[a("p",[s._v("redis+lua是代码层实现较为常见的方案，网上有很多的封装， 我这里找一个给你分享下。以"),a("a",{attrs:{href:"https://gitee.com/kailing/ratelimiter-spring-boot-starter",target:"_blank",rel:"noopener noreferrer"}},[s._v("gitee开源的ratelimiter-spring-boot-starter 在新窗口打开"),a("OutboundLink")],1),s._v("为例，作者是kailing， 值得初学者学习"),a("strong",[s._v("思路+代码封装+starter封装")]),s._v("：")])]),s._v(" "),a("h3",{attrs:{id:"使用场景-为什么有些分布式场景下-还会在代码层进行控制限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景-为什么有些分布式场景下-还会在代码层进行控制限流"}},[s._v("#")]),s._v(" 使用场景：为什么有些分布式场景下，还会在代码层进行控制限流？")]),s._v(" "),a("p",[s._v("基于 redis 的偏业务应用的分布式限流组件，使得项目拥有分布式限流能力变得很简单。限流的场景有很多，常说的限流一般指网关限流，控制好洪峰流量，以免打垮后方应用。这里突出"),a("code",[s._v("偏业务应用的分布式限流")]),s._v("的原因，是因为区别于网关限流，业务侧限流可以轻松根据业务性质做到细粒度的流量控制。比如如下场景，")]),s._v(" "),a("ul",[a("li",[s._v("案例一：")])]),s._v(" "),a("p",[s._v("有一个公开的 openApi 接口， openApi 会给接入方派发一个 appId，此时，如果需要根据各个接入方的 appId 限流，网关限流就不好做了，只能在业务侧实现")]),s._v(" "),a("ul",[a("li",[s._v("案例二：")])]),s._v(" "),a("p",[s._v("公司内部的短信接口，内部对接了多个第三方的短信通道，每个短信通道对流量的控制都不尽相同，假设有的第三方根据手机号和短信模板组合限流，网关限流就更不好做了")]),s._v(" "),a("p",[s._v("让我们看下，作者kailing是如何封装实现ratelimiter-spring-boot-starter的。")]),s._v(" "),a("h3",{attrs:{id:"源代码的要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源代码的要点"}},[s._v("#")]),s._v(" 源代码的要点")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Redis 客户端采用redisson，AOP拦截方式")])])]),s._v(" "),a("p",[s._v("所以引入如下包")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ext {\n    redisson_Version = '3.15.1'\n}\n\ndependencies {\n    compile \"org.redisson:redisson:${redisson_Version}\"\n    compile 'org.springframework.boot:spring-boot-starter-aop'\n    compileOnly 'org.springframework.boot:spring-boot-starter-web'\n\n    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'\n    testImplementation 'org.springframework.boot:spring-boot-starter-test'\n    testImplementation 'org.springframework.boot:spring-boot-starter-web'\n    testImplementation 'org.springdoc:springdoc-openapi-ui:1.5.2'\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("RateLimit注解")])])]),s._v(" "),a("p",[s._v("作者考虑了时间表达式，限流后的自定义回退后的拒绝逻辑, 用户自定义Key（PS："),a("strong",[s._v("这里其实可以加一些默认的Key生成策略")]),s._v("，比如"),a("strong",[s._v("按照方法")]),s._v("策略， "),a("strong",[s._v("按照方法&IP")]),s._v(" 策略, "),a("strong",[s._v("按照自定义策略")]),s._v("等，默认为按照方法）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package com.taptap.ratelimiter.annotation;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Retention;\nimport java.lang.annotation.RetentionPolicy;\nimport java.lang.annotation.Target;\n\n/**\n * @author kl (http://kailing.pub)\n * @since 2021/3/16\n */\n@Target(value = {ElementType.METHOD})\n@Retention(value = RetentionPolicy.RUNTIME)\npublic @interface RateLimit {\n\n    /**\n     * 时间窗口流量数量\n     * @return rate\n     */\n    long rate();\n\n    /**\n     * 时间窗口流量数量表达式\n     * @return rateExpression\n     */\n    String rateExpression() default "";\n\n    /**\n     * 时间窗口，最小单位秒，如 2s，2h , 2d\n     * @return rateInterval\n     */\n    String rateInterval();\n\n    /**\n     * 获取key\n     * @return keys\n     */\n    String [] keys() default {};\n\n    /**\n     * 限流后的自定义回退后的拒绝逻辑\n     * @return fallback\n     */\n    String fallbackFunction() default "";\n\n    /**\n     * 自定义业务 key 的 Function\n     * @return key\n     */\n    String customKeyFunction() default "";\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("AOP拦截")])])]),s._v(" "),a("p",[s._v("around环绕方式， 通过定义RateLimiterService获取方法注解的信息，存放在为RateLimiterInfo")]),s._v(" "),a("p",[s._v("如果还定义了回调方法，被限流后还会执行回调方法，回调方法也在RateLimiterService中。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package com.taptap.ratelimiter.core;\n\nimport com.taptap.ratelimiter.annotation.RateLimit;\nimport com.taptap.ratelimiter.exception.RateLimitException;\nimport com.taptap.ratelimiter.model.LuaScript;\nimport com.taptap.ratelimiter.model.RateLimiterInfo;\nimport org.aspectj.lang.ProceedingJoinPoint;\nimport org.aspectj.lang.annotation.Around;\nimport org.aspectj.lang.annotation.Aspect;\nimport org.redisson.api.RScript;\nimport org.redisson.api.RedissonClient;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.StringUtils;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Created by kl on 2017/12/29.\n * Content : 切面拦截处理器\n */\n@Aspect\n@Component\n@Order(0)\npublic class RateLimitAspectHandler {\n\n    private static final Logger logger = LoggerFactory.getLogger(RateLimitAspectHandler.class);\n\n    private final RateLimiterService rateLimiterService;\n    private final RScript rScript;\n\n    public RateLimitAspectHandler(RedissonClient client, RateLimiterService lockInfoProvider) {\n        this.rateLimiterService = lockInfoProvider;\n        this.rScript = client.getScript();\n    }\n\n    @Around(value = "@annotation(rateLimit)")\n    public Object around(ProceedingJoinPoint joinPoint, RateLimit rateLimit) throws Throwable {\n        RateLimiterInfo limiterInfo = rateLimiterService.getRateLimiterInfo(joinPoint, rateLimit);\n\n        List<Object> keys = new ArrayList<>();\n        keys.add(limiterInfo.getKey());\n        keys.add(limiterInfo.getRate());\n        keys.add(limiterInfo.getRateInterval());\n        List<Long> results = rScript.eval(RScript.Mode.READ_WRITE, LuaScript.getRateLimiterScript(), RScript.ReturnType.MULTI, keys);\n        boolean allowed = results.get(0) == 0L;\n        if (!allowed) {\n            logger.info("Trigger current limiting,key:{}", limiterInfo.getKey());\n            if (StringUtils.hasLength(rateLimit.fallbackFunction())) {\n                return rateLimiterService.executeFunction(rateLimit.fallbackFunction(), joinPoint);\n            }\n            long ttl = results.get(1);\n            throw new RateLimitException("Too Many Requests", ttl);\n        }\n        return joinPoint.proceed();\n    }\n\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br")])]),a("p",[s._v("这里LuaScript加载定义的lua脚本")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package com.taptap.ratelimiter.model;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.util.StreamUtils;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.charset.StandardCharsets;\n\n/**\n * @author kl (http://kailing.pub)\n * @since 2021/3/18\n */\npublic final class LuaScript {\n\n    private LuaScript(){}\n    private static final Logger log = LoggerFactory.getLogger(LuaScript.class);\n    private static final String RATE_LIMITER_FILE_PATH = "META-INF/ratelimiter-spring-boot-starter-rateLimit.lua";\n    private static String rateLimiterScript;\n\n    static {\n        InputStream in = Thread.currentThread().getContextClassLoader()\n                .getResourceAsStream(RATE_LIMITER_FILE_PATH);\n        try {\n            rateLimiterScript =  StreamUtils.copyToString(in, StandardCharsets.UTF_8);\n        } catch (IOException e) {\n            log.error("ratelimiter-spring-boot-starter Initialization failure",e);\n        }\n    }\n\n    public static String getRateLimiterScript() {\n        return rateLimiterScript;\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[s._v("lua脚本放在META-INF/ratelimiter-spring-boot-starter-rateLimit.lua， 如下")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("--\n-- Created by IntelliJ IDEA.\n-- User: kl\n-- Date: 2021/3/18\n-- Time: 11:17 上午\n-- To change this template use File | Settings | File Templates.\nlocal rateLimitKey = KEYS[1];\nlocal rate = tonumber(KEYS[2]);\nlocal rateInterval = tonumber(KEYS[3]);\nlocal limitResult = 0;\nlocal ttlResult = 0;\nlocal currValue = redis.call('incr', rateLimitKey);\nif (currValue == 1) then\n    redis.call('expire', rateLimitKey, rateInterval);\n    limitResult = 0;\nelse\n    if (currValue > rate) then\n        limitResult = 1;\n        ttlResult = redis.call('ttl', rateLimitKey);\n    end\nend\nreturn { limitResult, ttlResult }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("starter自动装配")])])]),s._v(" "),a("p",[s._v("RateLimiterAutoConfiguration + RateLimiterProperties + spring.factories")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package com.taptap.ratelimiter.configuration;\n\nimport com.taptap.ratelimiter.core.BizKeyProvider;\nimport com.taptap.ratelimiter.core.RateLimitAspectHandler;\nimport com.taptap.ratelimiter.core.RateLimiterService;\nimport com.taptap.ratelimiter.web.RateLimitExceptionHandler;\nimport io.netty.channel.nio.NioEventLoopGroup;\nimport org.redisson.Redisson;\nimport org.redisson.api.RedissonClient;\nimport org.redisson.codec.JsonJacksonCodec;\nimport org.redisson.config.Config;\nimport org.springframework.boot.autoconfigure.AutoConfigureAfter;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\nimport org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\nimport org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration;\nimport org.springframework.boot.context.properties.EnableConfigurationProperties;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.Import;\n\n/**\n * @author kl (http://kailing.pub)\n * @since 2021/3/16\n */\n@Configuration\n@ConditionalOnProperty(prefix = RateLimiterProperties.PREFIX, name = "enabled", havingValue = "true")\n@AutoConfigureAfter(RedisAutoConfiguration.class)\n@EnableConfigurationProperties(RateLimiterProperties.class)\n@Import({RateLimitAspectHandler.class, RateLimitExceptionHandler.class})\npublic class RateLimiterAutoConfiguration {\n\n    private final RateLimiterProperties limiterProperties;\n\n    public RateLimiterAutoConfiguration(RateLimiterProperties limiterProperties) {\n        this.limiterProperties = limiterProperties;\n    }\n\n    @Bean(destroyMethod = "shutdown")\n    @ConditionalOnMissingBean\n    RedissonClient redisson() {\n        Config config = new Config();\n        if (limiterProperties.getRedisClusterServer() != null) {\n            config.useClusterServers().setPassword(limiterProperties.getRedisPassword())\n                    .addNodeAddress(limiterProperties.getRedisClusterServer().getNodeAddresses());\n        } else {\n            config.useSingleServer().setAddress(limiterProperties.getRedisAddress())\n                    .setDatabase(limiterProperties.getRedisDatabase())\n                    .setPassword(limiterProperties.getRedisPassword());\n        }\n        config.setCodec(new JsonJacksonCodec());\n        config.setEventLoopGroup(new NioEventLoopGroup());\n        return Redisson.create(config);\n    }\n\n    @Bean\n    public RateLimiterService rateLimiterInfoProvider() {\n        return new RateLimiterService();\n    }\n\n    @Bean\n    public BizKeyProvider bizKeyProvider() {\n        return new BizKeyProvider();\n    }\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])]),a("h3",{attrs:{id:"_1、快速开始"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、快速开始"}},[s._v("#")]),s._v(" 1、快速开始")]),s._v(" "),a("blockquote",[a("p",[s._v("来看下作者kailing是如何提供的ratelimiter-spring-boot-starter使用文档。")])]),s._v(" "),a("h4",{attrs:{id:"_1-1、添加组件依赖-已上传到maven中央仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1、添加组件依赖-已上传到maven中央仓库"}},[s._v("#")]),s._v(" 1.1、添加组件依赖，已上传到maven中央仓库")]),s._v(" "),a("p",[s._v("maven")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<dependency>\n    <groupId>com.github.taptap</groupId>\n    <artifactId>ratelimiter-spring-boot-starter</artifactId>\n    <version>1.2</version>\n</dependency>\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("gradle")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("implementation 'com.github.taptap:ratelimiter-spring-boot-starter:1.2'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h4",{attrs:{id:"_1-2、application-properties-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2、application-properties-配置"}},[s._v("#")]),s._v(" 1.2、application.properties 配置")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("spring.ratelimiter.enabled = true\n\nspring.ratelimiter.redis-address = redis://127.0.0.1:6379\nspring.ratelimiter.redis-password = xxx\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("启用 ratelimiter 的配置必须加，默认不会加载。redis 相关的连接是非必须的，如果你的项目里已经使用了 "),a("code",[s._v("Redisson")]),s._v(" ，则不用配置限流框架的 redis 连接")]),s._v(" "),a("h4",{attrs:{id:"_1-3、在需要加限流逻辑的方法上-添加注解-ratelimit-如"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3、在需要加限流逻辑的方法上-添加注解-ratelimit-如"}},[s._v("#")]),s._v(" 1.3、在需要加限流逻辑的方法上，添加注解 @RateLimit，如：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RestController\n@RequestMapping("/test")\npublic class TestController {\n\n    @GetMapping("/get")\n    @RateLimit(rate = 5, rateInterval = "10s")\n    public String get(String name) {\n        return "hello";\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h5",{attrs:{id:"_1-3-1-ratelimit-注解说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-ratelimit-注解说明"}},[s._v("#")]),s._v(" 1.3.1 @RateLimit 注解说明")]),s._v(" "),a("p",[s._v("@RateLimit 注解可以添加到任意被 spring 管理的 bean 上，不局限于 controller ,service 、repository 也可以。在最基础限流功能使用上，以上三个步骤就已经完成了。@RateLimit 有两个最基础的参数，rateInterval 设置了时间窗口，rate 设置了时间窗口内允许通过的请求数量")]),s._v(" "),a("h5",{attrs:{id:"_1-3-2-限流的粒度-限流-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-限流的粒度-限流-key"}},[s._v("#")]),s._v(" 1.3.2 限流的粒度，限流 key")]),s._v(" "),a("p",[s._v("。限流的粒度是通过限流的 key 来做的，在最基础的设置下，限流的 key 默认是通过方法名称拼出来的，规则如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("key = RateLimiter_ + 类名 + 方法名\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("除了默认的 key 策略，ratelimiter-spring-boot-starter 充分考虑了业务限流时的复杂性，提供了多种方式。结合业务特征，达到更细粒度的限流控制。")]),s._v(" "),a("h5",{attrs:{id:"_1-3-3-触发限流后的行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-触发限流后的行为"}},[s._v("#")]),s._v(" 1.3.3 触发限流后的行为")]),s._v(" "),a("p",[s._v("默认触发限流后 程序会返回一个 http 状态码为 429 的响应，响应值如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n  "code":429,\n  "msg":"Too Many Requests"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("同时，响应的 header 里会携带一个 Retry-After 的时间值，单位 s，用来告诉调用方多久后可以重试。当然这一切都是可以自定义的，进阶用法可以继续往下看")]),s._v(" "),a("h3",{attrs:{id:"_2、进阶用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、进阶用法"}},[s._v("#")]),s._v(" 2、进阶用法")]),s._v(" "),a("h4",{attrs:{id:"_2-1、自定义限流的-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、自定义限流的-key"}},[s._v("#")]),s._v(" 2.1、自定义限流的 key")]),s._v(" "),a("p",[s._v("自定义限流 key 有三种方式，当自定义限流的 key 生效时，限流的 key 就变成了（默认的 key + 自定义的 key）。下面依次给出示例")]),s._v(" "),a("h5",{attrs:{id:"_2-1-1、-ratelimitkey-的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1、-ratelimitkey-的方式"}},[s._v("#")]),s._v(" 2.1.1、@RateLimitKey 的方式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RestController\n@RequestMapping("/test")\npublic class TestController {\n\n    @GetMapping("/get")\n    @RateLimit(rate = 5, rateInterval = "10s")\n    public String get(@RateLimitKey String name) {\n        return "get";\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("@RateLimitKey 注解可以放在方法的入参上，要求入参是基础数据类型，上面的例子，如果 name = kl。那么最终限流的 key 如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("key = RateLimiter_com.taptap.ratelimiter.web.TestController.get-kl\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h5",{attrs:{id:"_2-1-2、指定-keys-的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2、指定-keys-的方式"}},[s._v("#")]),s._v(" 2.1.2、指定 keys 的方式")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RestController\n@RequestMapping("/test")\npublic class TestController {\n\n    @GetMapping("/get")\n    @RateLimit(rate = 5, rateInterval = "10s",keys = {"#name"})\n    public String get(String name) {\n        return "get";\n    }\n\n    @GetMapping("/hello")\n    @RateLimit(rate = 5, rateInterval = "10s",keys = {"#user.name","user.id"})\n    public String hello(User user) {\n        return "hello";\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("p",[s._v("keys 这个参数比 @RateLimitKey 注解更智能，基本可以包含 @RateLimitKey 的能力，只是简单场景下，使用起来没有 @RateLimitKey 那么便捷。keys 的语法来自 spring 的 "),a("code",[s._v("Spel")]),s._v("，可以获取对象入参里的属性，支持获取多个，最后会拼接起来。使用过 spring-cache 的同学可能会更加熟悉 如果不清楚 "),a("code",[s._v("Spel")]),s._v(" 的用法，可以参考 spring-cache 的注解文档")]),s._v(" "),a("h5",{attrs:{id:"_2-1-3、自定义-key-获取函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3、自定义-key-获取函数"}},[s._v("#")]),s._v(" 2.1.3、自定义 key 获取函数")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RestController\n@RequestMapping("/test")\npublic class TestController {\n\n    @GetMapping("/get")\n    @RateLimit(rate = 5, rateInterval = "10s",customKeyFunction = "keyFunction")\n    public String get(String name) {\n        return "get";\n    }\n\n    public String keyFunction(String name) {\n        return "keyFunction" + name;\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("当 @RateLimitKey 和 keys 参数都没法满足时，比如入参的值是一个加密的值，需要解密后根据相关明文内容限流。可以通过在同一类里自定义获取 key 的函数，这个函数要求和被限流的方法入参一致，返回值为 String 类型。返回值不能为空，为空时，会回退到默认的 key 获取策略。")]),s._v(" "),a("h4",{attrs:{id:"_2-2、自定义限流后的行为"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、自定义限流后的行为"}},[s._v("#")]),s._v(" 2.2、自定义限流后的行为")]),s._v(" "),a("h5",{attrs:{id:"_2-2-1、配置响应内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1、配置响应内容"}},[s._v("#")]),s._v(" 2.2.1、配置响应内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("spring.ratelimiter.enabled=true\nspring.ratelimiter.response-body=Too Many Requests\nspring.ratelimiter.status-code=509\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("添加如上配置后，触发限流时，http 的状态码就变成了 509 。响应的内容变成了 Too Many Requests 了")]),s._v(" "),a("h5",{attrs:{id:"_2-2-2、自定义限流触发异常处理器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2、自定义限流触发异常处理器"}},[s._v("#")]),s._v(" 2.2.2、自定义限流触发异常处理器")]),s._v(" "),a("p",[s._v("默认的触发限流后，限流器会抛出一个异常，限流器框架内定义了一个异常处理器来处理。自定义限流触发处理器，需要先禁用系统默认的限流触发处理器，禁用方式如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("spring.ratelimiter.exceptionHandler.enable=false\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后在项目里添加自定义处理器，如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@ControllerAdvice\npublic class RateLimitExceptionHandler {\n\n    private final  RateLimiterProperties limiterProperties;\n\n    public RateLimitExceptionHandler(RateLimiterProperties limiterProperties) {\n        this.limiterProperties = limiterProperties;\n    }\n\n    @ExceptionHandler(value = RateLimitException.class)\n    @ResponseBody\n    public String exceptionHandler(HttpServletResponse response, RateLimitException e){\n        response.setStatus(limiterProperties.getStatusCode());\n        response.setHeader("Retry-After", String.valueOf(e.getRetryAfter()));\n        return limiterProperties.getResponseBody();\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h5",{attrs:{id:"_2-2-3、自定义触发限流处理函数-限流降级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3、自定义触发限流处理函数-限流降级"}},[s._v("#")]),s._v(" 2.2.3、自定义触发限流处理函数，限流降级")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('@RequestMapping("/test")\npublic class TestController {\n\n    @GetMapping("/get")\n    @RateLimit(rate = 5, rateInterval = "10s",fallbackFunction = "getFallback")\n    public String get(String name) {\n        return "get";\n    }\n\n    public String getFallback(String name){\n        return "Too Many Requests" + name;\n    }\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("这种方式实现和使用和 2.1.3、自定义 key 获取函数类似。但是多一个要求，返回值的类型需要和原限流函数的返回值类型一致，当触发限流时，框架会调用 fallbackFunction 配置的函数执行并返回，达到限流降级的效果")]),s._v(" "),a("h4",{attrs:{id:"_2-3-动态设置限流大小"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-动态设置限流大小"}},[s._v("#")]),s._v(" 2.3 动态设置限流大小")]),s._v(" "),a("h5",{attrs:{id:"_2-3-1、rateexpression-的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1、rateexpression-的使用"}},[s._v("#")]),s._v(" 2.3.1、rateExpression 的使用")]),s._v(" "),a("p",[s._v("从 "),a("code",[s._v("v1.2")]),s._v(" 版本开始，在 "),a("code",[s._v("@RateLimit")]),s._v(" 注解里新增了属性 rateExpression。该属性支持 "),a("code",[s._v("Spel")]),s._v(" 表达式从 Spring 的配置上下文中获取值。 当配置了 rateExpression 后，rate 属性的配置就不生效了。使用方式如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    @GetMapping("/get2")\n    @RateLimit(rate = 2, rateInterval = "10s",rateExpression = "${spring.ratelimiter.max}")\n    public String get2() {\n        return "get";\n    }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("集成 apollo 等配置中心后，可以做到限流大小的动态调整在线热更。")]),s._v(" "),a("h3",{attrs:{id:"_3、集成示例、测验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、集成示例、测验"}},[s._v("#")]),s._v(" 3、集成示例、测验")]),s._v(" "),a("h4",{attrs:{id:"_3-1、集成测验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、集成测验"}},[s._v("#")]),s._v(" 3.1、集成测验")]),s._v(" "),a("p",[s._v("启动 src/test/java/com/taptap/ratelimiter/Application.java 后，访问 http://localhost:8080/swagger-ui.html")]),s._v(" "),a("h4",{attrs:{id:"_3-2、压力测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、压力测试"}},[s._v("#")]),s._v(" 3.2、压力测试")]),s._v(" "),a("ul",[a("li",[s._v("压测工具 wrk： https://github.com/wg/wrk")]),s._v(" "),a("li",[s._v("测试环境: 8 核心 cpu ，jvm 内存给的 -Xms2048m -Xmx2048m ，链接的本地的 redis")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#压测数据\nkldeMacBook-Pro-6:ratelimiter-spring-boot-starter kl$ wrk -t16 -c100 -d15s --latency http://localhost:8080/test/wrk\nRunning 15s test @ http://localhost:8080/test/wrk\n  16 threads and 100 connections\n  Thread Stats   Avg      Stdev     Max   +/- Stdev\n    Latency     6.18ms   20.70ms 281.21ms   98.17%\n    Req/Sec     1.65k   307.06     2.30k    76.44%\n  Latency Distribution\n     50%    3.57ms\n     75%    4.11ms\n     90%    5.01ms\n     99%  115.48ms\n  389399 requests in 15.03s, 43.15MB read\nRequests/sec:  25915.91\nTransfer/sec:      2.87MB\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("压测下，所有流量都过限流器，qps 可以达到 2w+。")]),s._v(" "),a("h3",{attrs:{id:"_4、版本更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、版本更新"}},[s._v("#")]),s._v(" 4、版本更新")]),s._v(" "),a("h4",{attrs:{id:"_4-1、-v1-1-1-版本更新内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、-v1-1-1-版本更新内容"}},[s._v("#")]),s._v(" 4.1、（v1.1.1）版本更新内容")]),s._v(" "),a("ul",[a("li",[s._v("1、触发限流时，header 的 Retry-After 值，单位由 ms ，调整成了 s")])]),s._v(" "),a("h4",{attrs:{id:"_4-2、-v1-2-版本更新内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、-v1-2-版本更新内容"}},[s._v("#")]),s._v(" 4.2、（v1.2）版本更新内容")]),s._v(" "),a("ul",[a("li",[s._v("1、触发限流时，响应的类型从 "),a("code",[s._v("text/plain")]),s._v(" 变成了 "),a("code",[s._v("application/json")])]),s._v(" "),a("li",[s._v("2、优化了限流的 lua 脚本，将原来的两步 lua 脚本请求，合并成了一个，减少了和 redis 的交互")]),s._v(" "),a("li",[s._v("3、限流的时间窗口大小，支持 "),a("code",[s._v("Spel")]),s._v(" 从 Spring 的配置上下文中获取，结合 "),a("code",[s._v("apollo")]),s._v(" 等配置中心后，支持规则的动态下发热更新")])]),s._v(" "),a("h1",{attrs:{id:"示例源码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[s._v("#")]),s._v(" 示例源码")]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("https://gitee.com/kailing/ratelimiter-spring-boot-starter")]),s._v(" "),a("p",[s._v("https://github.com/realpdai/tech-pdai-spring-demos")])])}),[],!1,null,null,null);a.default=n.exports}}]);
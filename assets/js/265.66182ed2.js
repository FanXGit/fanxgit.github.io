(window.webpackJsonp=window.webpackJsonp||[]).push([[265],{2764:function(n,s,a){n.exports=a.p+"assets/img/dev-qt-9.9a52de10.png"},2765:function(n,s,a){n.exports=a.p+"assets/img/dev-qt-11.1edd9fb0.png"},2766:function(n,s,a){n.exports=a.p+"assets/img/dev-qt-12.a44b2098.png"},2767:function(n,s,a){n.exports=a.p+"assets/img/dev-qt-13.fa220785.png"},3976:function(n,s,a){"use strict";a.r(s);var e=a(7),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"代码质量-统一风格-静态样式检查详解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码质量-统一风格-静态样式检查详解"}},[n._v("#")]),n._v(" 代码质量 - 统一风格：静态样式检查详解")]),n._v(" "),s("p",[n._v("=============================================")]),n._v(" "),s("blockquote",[s("p",[n._v("统一样式检查规范里，最为常用的统一样式工具是checkstyle插件，本文将介绍常用的统一风格的措施之"),s("strong",[n._v("静态样式检查")]),n._v("。@pdai")])]),n._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://pdai.tech/md/develop/ut/dev-qt-code-style-1.html#%E7%BB%9F%E4%B8%80%E6%A0%B7%E5%BC%8F%E6%A3%80%E6%9F%A5",target:"_blank",rel:"noopener noreferrer"}},[n._v("统一样式检查"),s("OutboundLink")],1)])]),n._v(" "),s("h1",{attrs:{id:"统一样式检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一样式检查"}},[n._v("#")]),n._v(" 统一样式检查")]),n._v(" "),s("hr"),n._v(" "),s("blockquote",[s("p",[n._v("在标准化的统一样式检查规范里，最为常用的统一样式工具是checkstyle插件，而不是国内阿里的代码规约插件。")])]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("下载插件")])])]),n._v(" "),s("p",[s("img",{attrs:{src:a(2764),alt:""}})]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("配置生效")])])]),n._v(" "),s("p",[n._v("配置生效及告警设置")]),n._v(" "),s("p",[s("img",{attrs:{src:a(2765),alt:""}})]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("配置checkstyle.xml")]),n._v(" "),s("ul",[s("li",[n._v("官网地址 https://checkstyle.sourceforge.io/")]),n._v(" "),s("li",[n._v("官网最新Releases https://github.com/checkstyle/checkstyle/releases/")]),n._v(" "),s("li",[n._v("下面不是最新的版本，但是提供了中文的解释，可以参考下；实际使用时或者兼容问题请到官网下载最新的规则；")])])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<?xml version="1.0"?>\n<!DOCTYPE module PUBLIC\n    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"\n    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">\n    \n<module name="Checker">\n\n    <module name="TreeWalker">\n    \n    \n        \x3c!-- =============注释检查============= --\x3e\n        \x3c!-- 检查类和接口的javadoc 默认不检查author 和version tags         \n            authorFormat: 检查author标签的格式  \n            versionFormat: 检查version标签的格式  \n            scope: 可以检查的类的范围，例如：public只能检查public修饰的类，private可以检查所有的类  \n            excludeScope: 不能检查的类的范围，例如：public，public的类将不被检查，但访问权限小于public的类仍然会检查，其他的权限以此类推  \n            tokens: 该属性适用的类型，例如：CLASS_DEF,INTERFACE_DEF --\x3e  \n        <module name="JavadocType">  \n            <property name="authorFormat" value="\\S"/>  \n            <property name="scope" value="protected"/>  \n            <property name="versionFormat" value="\\$Revision.*\\$"/>  \n            <property name="excludeScope" value="public"/>  \n            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>  \n        </module>  \n    \n        \x3c!-- 检查方法的javadoc的注释  \n            scope: 可以检查的方法的范围，例如：public只能检查public修饰的方法，private可以检查所有的方法  \n            allowMissingParamTags: 是否忽略对参数注释的检查  \n            allowMissingThrowsTags: 是否忽略对throws注释的检查  \n            allowMissingReturnTag: 是否忽略对return注释的检查 --\x3e  \n        <module name="JavadocMethod">    \n            <property name="scope" value="private"/>    \n            <property name="allowMissingParamTags" value="false"/>    \n            <property name="allowMissingThrowsTags" value="false"/>    \n            <property name="allowMissingReturnTag" value="false"/>    \n            <property name="tokens" value="METHOD_DEF"/>    \n            <property name="allowUndeclaredRTE" value="true"/>    \n            <property name="allowThrowsTagsForSubclasses" value="true"/>    \n            \x3c!--允许get set 方法没有注释--\x3e  \n            <property name="allowMissingPropertyJavadoc" value="true"/>  \n        </module>   \n        \n        \x3c!-- 检查变量是否具有Javadoc注释\n            scope: 检查变量的范围，例如：public只能检查public修饰的变量，private可以检查所有的变量 --\x3e  \n        <module name="JavadocVariable">  \n            <property name="scope" value="private"/>  \n        </module>\n\n        \n        \x3c!-- =============命名检查============= --\x3e\n        \x3c!-- 检查抽象类的名称是否遵守命名规约\n            format: 定义抽象类的命名规则 --\x3e  \n        <module name="AbstractClassName">　　　　　　　\n　　        <property name="format" value="^Abstract.*$|^.*Factory$"/> \n        </module>\n\n        \x3c!-- 检查常量（用static final修饰的字段）的名称是否遵守命名规约\n            format: 定义全局常量的命名规则 --\x3e  \n        <module name="ConstantName">  \n            <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>  \n        </module>  \n        \n        \x3c!-- 检查局部final变量的名称是否遵守命名规约\n            format: 定义局部常量的命名规则 --\x3e  \n        <module name="LocalFinalVariableName">  \n            <property name="format" value="^[A_Z][A-Z0-9]*(_[A_Z0-9]+)*$"/>  \n        </module>  \n        \n        \x3c!-- 检查局部变量的名称是否遵守命名规约\n            format: 定义局部常量的命名规则 --\x3e  \n        <module name="LocalVariableName">  \n            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>  \n        </module>  \n        \n        \x3c!-- 检查成员变量（非静态字段）的名称是否遵守命名规约\n            format: 定义非静态成员变量的命名规则\n　　　　    applyToPublic: 是否适用于public的成员变量\n　　　　    applyToProtected: 是否适用于protected的成员变量\n　　　　    applyToPackage: 是否适用于package的成员变量\n　　　　    applyToPrivate: 是否适用于private的成员变量 --\x3e  \n        <module name="MemberName">  \n            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>  \n            <property name="applyToPublic" value="true"/>  \n            <property name="applyToProtected" value="true"/>  \n            <property name="applyToPackage" value="true"/>  \n            <property name="applyToPrivate" value="true"/>  \n        </module>\n        \n        \x3c!--　检查方法名称是否遵守命名规约\n            format: 定义方法名的命名规则 --\x3e \n        <module name="MethodName">  \n            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>  \n        </module>\n        \n        \x3c!--　检查包名称是否遵守命名规约\n            format: 定义包名的命名规则 --\x3e \n        <module name="PackageName">  \n            <property name="format" value="^[a-z]+(\\.[a-z][a-z0-9]*)*$"/>  \n        </module>  \n        \n        \x3c!--　检查参数名称是否遵守命名规约\n            format: 定义参数名的命名规则 --\x3e \n        <module name="ParameterName">  \n            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>  \n        </module>\n        \n        \x3c!--　检查静态变量（用static修饰，但没用final修饰的字段）的名称是否遵守命名规约\n            format: 定义静态变量的命名规则 --\x3e \n        <module name="StaticVariableName">  \n            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>  \n        </module>  \n        \n        \x3c!--　检查类的名称是否遵守命名规约\n            format: 定义类和接口的命名规则\n　　　　    tokens: 定义规则适用的类型，例如：CLASS_DEF表示类，INTERFACE_DEF 表示接口 --\x3e \n        <module name="TypeName">  \n            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>  \n            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF"/>  \n        </module>\n        \n        \n        \x3c!-- =============import检查=============--\x3e\n        \x3c!--　检查没有import语句使用*符号\n            excludes: 定义可以使用*导入的包 --\x3e \n        <module name="AvoidStarImport">  \n            <property name="excludes" value="java.io,java.util"/>  \n        </module>\n        \n        \x3c!--　检查是否导入了指定的非法包 --\x3e \n        <module name="IllegalImport"/>  \n        \n        \x3c!--　检查导入包的顺序/分组\n            groups: 定义导入包的顺序，默认以字母顺序导入\n　　　　    ordered: 定义包是否必须按规定的顺序显示\n　　　　    separated: 定义包与包之间是否应添加空白行\n　　　　    caseSensitive: 是否区分包名的大小写　--\x3e \n        <module name="ImportOrder">  \n            <property name="groups" value="java,javax"/>  \n            <property name="ordered" value="true"/>  \n            <property name="separated" value="true"/>  \n            <property name="caseSensitive" value="true"/>  \n        </module>\n        \n        \x3c!--　检查是否存在多余的导入语句 --\x3e \n        <module name="RedundantImport"/>\n        \n        \x3c!--　检查未使用的导入语句 --\x3e\n        <module name="UnusedImports"/> \n        \n        \n        \x3c!-- =============长度检查============= --\x3e\n        \x3c!--　检查匿名内部类的长度\n            max: 定义匿名内部类最多容许的行数 --\x3e \n        <module name="AnonInnerLength">  \n            <property name="max" value="20"/>  \n        </module>  \n        \n        \x3c!--　检查要执行的语句的数目，将可执行语句的数量限制为一个指定的限值\n            max: 定义所能容许的语句的最多数目\n　　　　    tokens: 定义可以检查的类型，例如：CTOR_DEF,METHOD_DEF,STATIC_INIT,INSTANCE_INIT --\x3e \n        <module name="ExecutableStatementCount">  \n            <property name="max" value="20"/>  \n            <property name="tokens" value="CTOR_DEF,METHOD_DEF,STATIC_INIT,INSTANCE_INIT"/>  \n        </module> \n        \n        \x3c!--　检查源码文件的长度\n            max: 定义一个文件所能容许的行数 --\x3e \n        <module name="FileLength">  \n            <property name="max" value="1000"/>  \n        </module>\n        \n        \x3c!--　检查源码每行的长度 --\x3e \n        <module name="LineLength">  \n            <property name="max" value="80"/>  \n            <property name="ignorePattern" value="^ *\\* *[^ ]+$"/>  \n        </module> \n        \n        \x3c!--　检查方法和构造器的长度\n            max: 最多容许的行数\n　　　　    countEmpty: 是否计算空行\n　　　　    tokens: 定义检查的类型 --\x3e \n        <module name="MethodLength">  \n            <property name="max" value="100"/>  \n            <property name="countEmpty" value="true"/>  \n            <property name="tokens" value="METHOD_DEF"/>  \n        </module> \n        \n        \x3c!--　检查一个方法或构造器的参数的数量\n            max: 定义最多有多少个参数\n　　　　    tokens: 定义检查的类型　 --\x3e \n        <module name="ParameterNumber">  \n            <property name="max" value="10"/>  \n            <property name="tokens" value="METHOD_DEF,CTOR_DEF"/>  \n        </module>\n        \n        \n        \x3c!-- =============空格检查============= --\x3e\n        \x3c!--　检查空的for循环初始化语句的填充符\n            option: 定义初始化语句中是否使用空格，例如：space表示使用空格，则for(int i = 0; i < 100; i++)\n            就是符合格式要求的，而for(int i=0; i<100;i++)就不符合要求　 --\x3e \n        <module name="EmptyForInitializerPad">  \n            <property name="option" value="space"/>  \n        </module>\n        \n        \x3c!--　检查for iterator语句是否使用空格\n            option:定义初始化语句是否使用空格，例如：space表示使用空格，则for(Iterator iterator = List.iterator();iterator.hasNext(); iterator.next())就是形式合理的，否则就是形式不合理的 --\x3e \n        <module name="EmptyForIteratorPad">  \n            <property name="option" value="space"/>  \n        </module> \n        \n        \x3c!--　检查指定标记之后没有空格。若要禁用指定标记之后的换行符，将allowLineBreaks属性设为false即可。 --\x3e \n        <module name="NoWhitespaceAfter"/>\n        \n        \x3c!--　检查指定标记之前没有空格。若要允许指定标记之前的换行符，将allowLineBreaks属性设为true即可 --\x3e \n        <module name="NoWhitespaceBefore"/>\n        \n        \x3c!--　检查代码自动换行时，运算符所处位置的策略\n            option: 定义运算符的位置，eol在同一行，nl在下一行\n　　　　    tokens: 定义检查的类型 --\x3e \n        <module name="OperatorWrap">  \n            <property name="tokens"   \n                value="ASSIGN, DIV, DIV_ASSIGN, PLUS_ASSIGN, MINUS, MINUS_ASSIGN, STAR, STAR_ASSIGN, MOD, MOD_ASSIGN, SR, SR_ASSIGN, BSR, BSR_ASSIGN, SL, SL_ASSIGN, BXOR, BXOR_ASSIGN, BOR, BOR_ASSIGN, BAND, BAND_ASSIGN,PLUS, QUESTION"/>  \n            <property name="option" value="eol"/>  \n        </module> \n        \n        \x3c!--　检查方法定义、构造器定义、方法调用、构造器调用的标识符和参数列表的左圆括号之间的填充符\n            allowLineBreaks: 参数是否允许在不同行\n　　　　    option: 在参数和括号、参数和标识符之间是否包含空格\n　　　　    tokens: 检查的类型 --\x3e \n        <module name="MethodParamPad">  \n            <property name="allowLineBreaks" value="false"/>  \n            <property name="option" value="space"/>  \n            <property name="tokens" value="METHOD_DEF,CTOR_DEF"/>  \n        </module>\n        \n        \x3c!--　检查圆括号的填充符策略，也就是在左圆括号之后和右圆括号之前是否需要有一个空格\n            option: space表示有空格，nospace表示没有空格\n　　　　    tokens: 定义检查的类型 --\x3e \n        <module name="ParenPad">  \n            <property name="option" value="nospace"/>  \n        </module>\n        \n        \x3c!--　检查类型转换的圆括号的填充符策略。也就是，在左圆括号之后和右圆括号之前是否需要有一个空格\n            option: space表示有空格，nospace表示没有空格\n　　　　    tokens: 定义检查的类型 --\x3e \n        <module name="TypecastParenPad">  \n            <property name="option" value="space"/>  \n        </module> \n        \n        \x3c!--　检查源码中没有制表符（\'\\t\'） --\x3e \n        <module name="TabCharacter"/>\n\n        \x3c!--　检查指定标记之后是否紧跟了空格\n        　    tokens: 检查的类型 --\x3e \n        <module name="WhitespaceAfter">  \n            <property name="tokens" value="COMMA,SEMI,TYPECAST"/>  \n        </module>  \n        \n        \x3c!--　检查指定标记的周围是否有空格\n            可以选择性地从检查策略中排除，通过设置allowEmptyMethods和allowEmptyConstructors属性即可\n        　    tokens: 检查的类型 --\x3e \n        <module name="WhitespaceAround">  \n            <property name="tokens" value="ASSIGN"/>  \n        </module> \n        \n        \n        \x3c!-- =============修饰符检查============= --\x3e\n        \x3c!--　检查代码中的标识符的顺序是否符合《Java Language Specification》中的第8.1.1、8.3.1章节所建议的顺序\n            正确的顺序应当如下：\n　　　　    1. public\n　　　　    2. protected\n　　　　    3. private\n　　　　    4. abstract\n　　　　    5. static\n　　　　    6. final\n　　　　    7. transient\n　　　　    8. volatile\n　　　　    9. synchronized\n　　　　    10. native\n　　　　    11. strictfp --\x3e \n        <module name="ModifierOrder"/> \n        \n        \x3c!--　在以下部分检查是否有多余的修饰符：\n　　　　    1. 接口和注解的定义；\n　　　　    2. final类的方法的final修饰符；\n　　　　    3. 被声明为static的内部接口声明\n　            tokens: 检查的类型 --\x3e\n        <module name="RedundantModifier">  \n            <property name="tokens" value="METHOD_DEF,VARIABLE_DEF"/>  \n        </module>\n        \n        \n        \x3c!-- =============代码块检查============= --\x3e\n        \x3c!--　找到嵌套代码块，也就是在代码中无节制使用的代码块\n            allowInSwitchCase: 定义是否允许switch case中使用嵌套的代码块 --\x3e \n        <module name="AvoidNestedBlocks">  \n            <property name="allowInSwitchCase" value="true"/>  \n        </module>\n        \n        \x3c!--　检查空代码块\n            option: 定义代码块中应该包含的内容，例如：stmt表示语句\n　　　　    tokens: 检查的类型 --\x3e\n        <module name="EmptyBlock">  \n            <property name="option" value="stmt"/>  \n        </module>\n        \n        \x3c!--　检查代码块的左花括号的放置位置\n            option: 定义左大括号\'{\'显示位置，eol在同一行显示，nl在下一行显示\n　　　　    maxLineLength: 大括号\'{\'所在行行最多容纳的字符数\n　　　　    tokens: 该属性适用的类型，例：CLASS_DEF,INTERFACE_DEF,METHOD_DEF,CTOR_DEF --\x3e\n        <module name="LeftCurly">  \n            <property name="option" value="eol"/>  \n            <property name="maxLineLength" value="80"/>  \n            <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,METHOD_DEF,CTOR_DEF"/>  \n        </module>\n        \n        \x3c!--　检查代码块周围是否有大括号，可以检查do、else、if、for、while等关键字所控制的代码块\n            tokens: 定义检查的类型 --\x3e\n        <module name="NeedBraces"/>\n\n        \x3c!--　检查else、try、catch标记的代码块的右花括号的放置位置\n            tokens: 定义检查的类型 --\x3e\n        <module name="RightCurly">  \n            <property name="option" value="alone"/>  \n            <property name="tokens" value="LITERAL_TRY"/>  \n        </module> \n        \n        \n        \x3c!-- =============编码检查============= --\x3e\n        \x3c!--　检查是否在同一行初始化， 例如：private int Age = nGe==1 ? 100 : 0; 就应该避免 --\x3e \n        <module name="AvoidInlineConditionals"/>\n        \n        \x3c!--　检查定义了共变equals()方法的类中是否同样覆盖了equals(java.lang.Object)方法 --\x3e\n        <module name="CovariantEquals"/> \n        \n        \x3c!--　检查switch语句中的default是否在所有的case分支之后 --\x3e\n        <module name="DefaultComesLast"/>\n        \n        \x3c!-- 检查空的代码段 --\x3e\n        <module name="EmptyStatement"/>\n        \n        \x3c!--　检查覆盖了equals()方法的类是否也覆盖了hashCode()方法 --\x3e\n        <module name="EqualsHashCode"/>\n        \n        \x3c!--　检查类或对象的成员是否显式地初始化为成员所属类型的默认值\n        （对象引用的默认值为null，数值和字符类型的默认值为0，布尔类型的默认值为false） --\x3e\n        <module name="ExplicitInitialization"/>\n        \n        \x3c!--　检查switch语句中是否存在跨越分支。\n        如果一个case分支的代码中缺少break、return、throw或continue语句，那么就会导致跨越分支 --\x3e\n        <module name="FallThrough"/>\n        \n        \x3c!--　检查变量值没有改动的情况下，该变量是否定义成了final --\x3e\n        <module name="FinalLocalVariable"/> \n        \n        \x3c!--　检查局部变量或参数是否会遮蔽在相同类中定义的字段 --\x3e\n         <module name="HiddenField"/>\n         \n        \x3c!--　检查是否有不合法的实例化操作，是否使用工厂方法更好 --\x3e\n        <module name="IllegalInstantiation"/>\n        \n        \x3c!--　非法异常捕捉,不允许捕捉java.lang.Exception、java.lang.Error、java.lang.RuntimeException的行为 --\x3e\n        <module name="IllegalCatch"/>\n        \n        \x3c!-- 检查子表达式中是否有赋值操作 --\x3e\n        <module name="InnerAssignment"/>\n        \n        \x3c!-- 检查是否有"魔术"数字 --\x3e\n        <module name="MagicNumber">\n           <property name="ignoreNumbers" value="0, 1"/>\n           <property name="ignoreAnnotation" value="true"/>\n        </module>\n        \n        \x3c!--　检查switch语句是否含有default子句 --\x3e\n        <module name="MissingSwitchDefault"/>\n        \n        \x3c!--　检查循环控制变量是否被修改 --\x3e\n        <module name="ModifiedControlVariable"/>\n        \n        \x3c!--　检查一个字符串变量在不改变变量值的情况下或者字符串出现的次数\n            allowedDuplicates: 定义在类中一个字符串变量在不改变变量值的情况下或者字符串所能使用的最多次数 --\x3e\n        <module name="MultipleStringLiterals">  \n            <property name="allowedDuplicates" value="3"/>  \n        </module>\n        \n        \x3c!--　检查一次声明多个变量时，变量是否在同一行或者在同一个语句中 --\x3e\n        <module name="MultipleVariableDeclarations"/>\n        \n        \x3c!--　限制if-else代码块的嵌套层数（默认值为1）--\x3e\n        <module name="NestedIfDepth">  \n            <property name="max" value="1"/>  \n        </module>\n        \n        \x3c!--　限制try代码块的嵌套层数（默认值为1）--\x3e\n        <module name="NestedTryDepth">  \n            <property name="max" value="3"/>  \n        </module>\n        \n        \x3c!-- 确保一个类具有一个包声明，并且（可选地）包名要与源代码文件所在的目录名相匹配 --\x3e\n        <module name="PackageDeclaration"/>\n        \n        \x3c!-- 不允许对参数进行赋值 --\x3e\n        <module name="ParameterAssignment"/>\n        \n        \x3c!-- 检查throws子句中是否声明了多余的异常 --\x3e\n        <module name="RedundantThrows">  \n            <property name="allowUnchecked" value="true"/>  \n            <property name="allowSubclasses" value="true"/>  \n        </module>\n        \n        \x3c!-- 检查是否使用了this --\x3e\n        <module name="RequireThis">  \n            <property name="checkFields" value="false"/>  \n            <property name="checkMethods" value="false"/>  \n        </module>\n        \n        \x3c!-- 禁止使用System.out.println --\x3e\n        <module name="Regexp">\n            <property name="format" value="System\\.out\\.println"/>\n            <property name="illegalPattern" value="true"/>\n        </module>\n        \n        \x3c!-- 限制return语句的数量。默认值为2。可以忽略检查指定的方法（默认忽略equals()方法 --\x3e\n        <module name="ReturnCount">  \n            <property name="max" value="3"/>  \n        </module>\n        \n        \x3c!-- 检查是否有过于复杂的布尔表达式。现在能够发现诸如if (b == true)、b || true、!false等类型的代码 --\x3e\n        <module name="SimplifyBooleanExpression"/>\n        \n        \x3c!-- 检查是否有过于复杂的布尔类型return语句 --\x3e\n        <module name="SimplifyBooleanReturn"/> \n        \n        \x3c!-- 检查在判断字符串是否相等时是否使用了正确的形式 --\x3e\n        <module name="StringLiteralEquality"/>\n        \n        \x3c!-- 检查一个覆盖的clone()方法是否调用了super.clone()方法 --\x3e\n        <module name="SuperClone"/> \n        \n        \x3c!-- 检查一个覆盖的finalize()方法是否调用了super.finalize()方法 --\x3e\n        <module name="SuperFinalize"/>\n        \n        \x3c!-- 检查初始化数祖时，最后一个元素后面是否加了逗号，如果左右大括号都在同一行，则可以不加逗号 --\x3e\n        <module name="ArrayTrailingComma"/>\n        \n        \x3c!-- 检查代码中是否使用了不必要的圆括号 --\x3e\n        <module name="UnnecessaryParentheses"/>\n        \n        \n        \x3c!-- =============类设计检查============= --\x3e\n        \x3c!-- 检查类是否被设计为可扩展的，如果是，则方法应该abstract、final或者是空的 --\x3e\n        <module name="DesignForExtension"/>\n        \n        \x3c!-- 检查一个只有私有构造器的类是否被声明为final --\x3e\n        <module name="FinalClass"/>\n        \n        \x3c!-- 确保工具类（在API中只有静态方法和字段的类）没有任何公有构造器 --\x3e\n        <module name="HideUtilityClassConstructor"/>\n        \n        \x3c!--　检查接口是否只定义了变量而没有定义方法，因为接口应该用来描述一个类型，所以只定义变量而不定义方法是不恰当的\n            allowMarkerInterfaces: 是否检查空接口 --\x3e\n        <module name="InterfaceIsType">  \n            <property name="allowMarkerInterfaces" value="true"/>  \n        </module>\n        \n        \x3c!--　将异常抛出语句的数量配置为一个指定的限值（默认值为1）--\x3e\n         <module name="ThrowsCount">  \n            <property name="max" value="7"/>  \n        </module>\n        \n        \x3c!--　检查类成员的可见性。\n            只有static final的类成员可以是公有的，其他的类成员必须是私有的，除非设置了protectedAllowed属性或packageAllowed属性\n            packageAllowed: 变量包内成员可以访问\n            protectedAllowed: 变量是受保护的\n            publicMemberPattern: 可以公开访问的变量所匹配的命名形式 --\x3e\n        <module name="VisibilityModifier">  \n            <property name="packageAllowed" value="false"/>  \n            <property name="protectedAllowed" value="false"/>  \n            <property name="publicMemberPattern" value="^seriaVersionUID$"/>  \n        </module>\n        \n        \n        \x3c!-- =============重复检查============= --\x3e\n        \x3c!-- 逐行地比较所有的代码行，如果有若干行只有缩进有所不同，那么就报告存在重复代码\n            min: 允许代码重复的最小行数\n            charset: 文件所用的字符集 --\x3e\n        <module name="StrictDuplicateCode">  \n            <property name="min" value="7"/>  \n            <property name="charset" value="UTF-8"/>  \n        </module> \n        \n        \x3c!-- =============度量检查============= --\x3e\n        \x3c!-- 限制一个表达式中的&&、||、&、|、^等逻辑运算符的数量\n            max: 布尔运算符在一条语句中允许出现的最大数目 --\x3e\n        <module name="BooleanExpressionComplexity">  \n            <property name="max" value="7"/>  \n        </module>\n        \n        \x3c!-- 测量给定类中的其他类的实例化操作的次数 --\x3e\n        <module name="ClassDataAbstractionCoupling">  \n            <property name="max" value="7"/>  \n        </module>\n        \n        \x3c!-- 检查循环复杂度是否超出了指定的限值。\n        该复杂度由构造器、方法、静态初始化程序、\n        实例初始化程序中的if、while、do、for、?:、catch、switch、case等语句，以及&&和||运算符的数量所测量 --\x3e\n        <module name="CyclomaticComplexity">  \n            <property name="severity" value="ignore"/>  \n        </module>\n        \n        \n        \x3c!-- =============杂项检查============= --\x3e\n        \x3c!-- 检查数组定义的风格。有的开发者使用Java风格：public static void main(String[] args)；有的开发者使用C风格：public static void main(String args[]) --\x3e\n        <module name="ArrayTypeStyle">  \n            <property name="javaStyle" value="true"/>  \n        </module>\n        \n        \x3c!-- 检查方法/构造器的参数是否是final的。这项检查会忽略接口方法的检查 --\x3e\n        <module name="FinalParameters"/>\n        \n        \x3c!-- 检查Java代码的缩进是否正确\n            basicOffset: 定义代码体相对于所属的代码体的缩进量\n　　　　    braceAdjustment: 定义括号的缩进量\n　　　　    caseIndent: 定义case的缩进量 --\x3e\n        <module name="Indentation">  \n            <property name="basicOffset" value="4"/>  \n            <property name="braceAdjustment" value="0"/>  \n            <property name="caseIndent" value="4"/>  \n        </module>\n        \n        \x3c!-- 检查文件是否以新行结束 --\x3e\n        <module name="NewlineAtEndOfFile"/>\n        \n        \x3c!-- 这是一项FileSetCheck检查，通过检查关键字的一致性属性文件，它可以确保代码的语言转换的正确性 --\x3e\n        <module name="Translation">  \n            <property name="severity" value="info"/>  \n        </module>\n        \n        \x3c!-- 检查源码中是否有未注释的main()方法（调试的残留物）\n            excludedClasses: 定义可以带main方法的类所匹配的名字形式 --\x3e\n        <module name="UncommentedMain">  \n            <property name="excludedClasses" value="^$"/>  \n        </module>\n        \n        \x3c!-- 检查long类型的常量在定义时是否由大写的“L”开头 --\x3e\n        <module name="UpperEll"/>\n    </module>\n\n</module>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br"),s("span",{staticClass:"line-number"},[n._v("142")]),s("br"),s("span",{staticClass:"line-number"},[n._v("143")]),s("br"),s("span",{staticClass:"line-number"},[n._v("144")]),s("br"),s("span",{staticClass:"line-number"},[n._v("145")]),s("br"),s("span",{staticClass:"line-number"},[n._v("146")]),s("br"),s("span",{staticClass:"line-number"},[n._v("147")]),s("br"),s("span",{staticClass:"line-number"},[n._v("148")]),s("br"),s("span",{staticClass:"line-number"},[n._v("149")]),s("br"),s("span",{staticClass:"line-number"},[n._v("150")]),s("br"),s("span",{staticClass:"line-number"},[n._v("151")]),s("br"),s("span",{staticClass:"line-number"},[n._v("152")]),s("br"),s("span",{staticClass:"line-number"},[n._v("153")]),s("br"),s("span",{staticClass:"line-number"},[n._v("154")]),s("br"),s("span",{staticClass:"line-number"},[n._v("155")]),s("br"),s("span",{staticClass:"line-number"},[n._v("156")]),s("br"),s("span",{staticClass:"line-number"},[n._v("157")]),s("br"),s("span",{staticClass:"line-number"},[n._v("158")]),s("br"),s("span",{staticClass:"line-number"},[n._v("159")]),s("br"),s("span",{staticClass:"line-number"},[n._v("160")]),s("br"),s("span",{staticClass:"line-number"},[n._v("161")]),s("br"),s("span",{staticClass:"line-number"},[n._v("162")]),s("br"),s("span",{staticClass:"line-number"},[n._v("163")]),s("br"),s("span",{staticClass:"line-number"},[n._v("164")]),s("br"),s("span",{staticClass:"line-number"},[n._v("165")]),s("br"),s("span",{staticClass:"line-number"},[n._v("166")]),s("br"),s("span",{staticClass:"line-number"},[n._v("167")]),s("br"),s("span",{staticClass:"line-number"},[n._v("168")]),s("br"),s("span",{staticClass:"line-number"},[n._v("169")]),s("br"),s("span",{staticClass:"line-number"},[n._v("170")]),s("br"),s("span",{staticClass:"line-number"},[n._v("171")]),s("br"),s("span",{staticClass:"line-number"},[n._v("172")]),s("br"),s("span",{staticClass:"line-number"},[n._v("173")]),s("br"),s("span",{staticClass:"line-number"},[n._v("174")]),s("br"),s("span",{staticClass:"line-number"},[n._v("175")]),s("br"),s("span",{staticClass:"line-number"},[n._v("176")]),s("br"),s("span",{staticClass:"line-number"},[n._v("177")]),s("br"),s("span",{staticClass:"line-number"},[n._v("178")]),s("br"),s("span",{staticClass:"line-number"},[n._v("179")]),s("br"),s("span",{staticClass:"line-number"},[n._v("180")]),s("br"),s("span",{staticClass:"line-number"},[n._v("181")]),s("br"),s("span",{staticClass:"line-number"},[n._v("182")]),s("br"),s("span",{staticClass:"line-number"},[n._v("183")]),s("br"),s("span",{staticClass:"line-number"},[n._v("184")]),s("br"),s("span",{staticClass:"line-number"},[n._v("185")]),s("br"),s("span",{staticClass:"line-number"},[n._v("186")]),s("br"),s("span",{staticClass:"line-number"},[n._v("187")]),s("br"),s("span",{staticClass:"line-number"},[n._v("188")]),s("br"),s("span",{staticClass:"line-number"},[n._v("189")]),s("br"),s("span",{staticClass:"line-number"},[n._v("190")]),s("br"),s("span",{staticClass:"line-number"},[n._v("191")]),s("br"),s("span",{staticClass:"line-number"},[n._v("192")]),s("br"),s("span",{staticClass:"line-number"},[n._v("193")]),s("br"),s("span",{staticClass:"line-number"},[n._v("194")]),s("br"),s("span",{staticClass:"line-number"},[n._v("195")]),s("br"),s("span",{staticClass:"line-number"},[n._v("196")]),s("br"),s("span",{staticClass:"line-number"},[n._v("197")]),s("br"),s("span",{staticClass:"line-number"},[n._v("198")]),s("br"),s("span",{staticClass:"line-number"},[n._v("199")]),s("br"),s("span",{staticClass:"line-number"},[n._v("200")]),s("br"),s("span",{staticClass:"line-number"},[n._v("201")]),s("br"),s("span",{staticClass:"line-number"},[n._v("202")]),s("br"),s("span",{staticClass:"line-number"},[n._v("203")]),s("br"),s("span",{staticClass:"line-number"},[n._v("204")]),s("br"),s("span",{staticClass:"line-number"},[n._v("205")]),s("br"),s("span",{staticClass:"line-number"},[n._v("206")]),s("br"),s("span",{staticClass:"line-number"},[n._v("207")]),s("br"),s("span",{staticClass:"line-number"},[n._v("208")]),s("br"),s("span",{staticClass:"line-number"},[n._v("209")]),s("br"),s("span",{staticClass:"line-number"},[n._v("210")]),s("br"),s("span",{staticClass:"line-number"},[n._v("211")]),s("br"),s("span",{staticClass:"line-number"},[n._v("212")]),s("br"),s("span",{staticClass:"line-number"},[n._v("213")]),s("br"),s("span",{staticClass:"line-number"},[n._v("214")]),s("br"),s("span",{staticClass:"line-number"},[n._v("215")]),s("br"),s("span",{staticClass:"line-number"},[n._v("216")]),s("br"),s("span",{staticClass:"line-number"},[n._v("217")]),s("br"),s("span",{staticClass:"line-number"},[n._v("218")]),s("br"),s("span",{staticClass:"line-number"},[n._v("219")]),s("br"),s("span",{staticClass:"line-number"},[n._v("220")]),s("br"),s("span",{staticClass:"line-number"},[n._v("221")]),s("br"),s("span",{staticClass:"line-number"},[n._v("222")]),s("br"),s("span",{staticClass:"line-number"},[n._v("223")]),s("br"),s("span",{staticClass:"line-number"},[n._v("224")]),s("br"),s("span",{staticClass:"line-number"},[n._v("225")]),s("br"),s("span",{staticClass:"line-number"},[n._v("226")]),s("br"),s("span",{staticClass:"line-number"},[n._v("227")]),s("br"),s("span",{staticClass:"line-number"},[n._v("228")]),s("br"),s("span",{staticClass:"line-number"},[n._v("229")]),s("br"),s("span",{staticClass:"line-number"},[n._v("230")]),s("br"),s("span",{staticClass:"line-number"},[n._v("231")]),s("br"),s("span",{staticClass:"line-number"},[n._v("232")]),s("br"),s("span",{staticClass:"line-number"},[n._v("233")]),s("br"),s("span",{staticClass:"line-number"},[n._v("234")]),s("br"),s("span",{staticClass:"line-number"},[n._v("235")]),s("br"),s("span",{staticClass:"line-number"},[n._v("236")]),s("br"),s("span",{staticClass:"line-number"},[n._v("237")]),s("br"),s("span",{staticClass:"line-number"},[n._v("238")]),s("br"),s("span",{staticClass:"line-number"},[n._v("239")]),s("br"),s("span",{staticClass:"line-number"},[n._v("240")]),s("br"),s("span",{staticClass:"line-number"},[n._v("241")]),s("br"),s("span",{staticClass:"line-number"},[n._v("242")]),s("br"),s("span",{staticClass:"line-number"},[n._v("243")]),s("br"),s("span",{staticClass:"line-number"},[n._v("244")]),s("br"),s("span",{staticClass:"line-number"},[n._v("245")]),s("br"),s("span",{staticClass:"line-number"},[n._v("246")]),s("br"),s("span",{staticClass:"line-number"},[n._v("247")]),s("br"),s("span",{staticClass:"line-number"},[n._v("248")]),s("br"),s("span",{staticClass:"line-number"},[n._v("249")]),s("br"),s("span",{staticClass:"line-number"},[n._v("250")]),s("br"),s("span",{staticClass:"line-number"},[n._v("251")]),s("br"),s("span",{staticClass:"line-number"},[n._v("252")]),s("br"),s("span",{staticClass:"line-number"},[n._v("253")]),s("br"),s("span",{staticClass:"line-number"},[n._v("254")]),s("br"),s("span",{staticClass:"line-number"},[n._v("255")]),s("br"),s("span",{staticClass:"line-number"},[n._v("256")]),s("br"),s("span",{staticClass:"line-number"},[n._v("257")]),s("br"),s("span",{staticClass:"line-number"},[n._v("258")]),s("br"),s("span",{staticClass:"line-number"},[n._v("259")]),s("br"),s("span",{staticClass:"line-number"},[n._v("260")]),s("br"),s("span",{staticClass:"line-number"},[n._v("261")]),s("br"),s("span",{staticClass:"line-number"},[n._v("262")]),s("br"),s("span",{staticClass:"line-number"},[n._v("263")]),s("br"),s("span",{staticClass:"line-number"},[n._v("264")]),s("br"),s("span",{staticClass:"line-number"},[n._v("265")]),s("br"),s("span",{staticClass:"line-number"},[n._v("266")]),s("br"),s("span",{staticClass:"line-number"},[n._v("267")]),s("br"),s("span",{staticClass:"line-number"},[n._v("268")]),s("br"),s("span",{staticClass:"line-number"},[n._v("269")]),s("br"),s("span",{staticClass:"line-number"},[n._v("270")]),s("br"),s("span",{staticClass:"line-number"},[n._v("271")]),s("br"),s("span",{staticClass:"line-number"},[n._v("272")]),s("br"),s("span",{staticClass:"line-number"},[n._v("273")]),s("br"),s("span",{staticClass:"line-number"},[n._v("274")]),s("br"),s("span",{staticClass:"line-number"},[n._v("275")]),s("br"),s("span",{staticClass:"line-number"},[n._v("276")]),s("br"),s("span",{staticClass:"line-number"},[n._v("277")]),s("br"),s("span",{staticClass:"line-number"},[n._v("278")]),s("br"),s("span",{staticClass:"line-number"},[n._v("279")]),s("br"),s("span",{staticClass:"line-number"},[n._v("280")]),s("br"),s("span",{staticClass:"line-number"},[n._v("281")]),s("br"),s("span",{staticClass:"line-number"},[n._v("282")]),s("br"),s("span",{staticClass:"line-number"},[n._v("283")]),s("br"),s("span",{staticClass:"line-number"},[n._v("284")]),s("br"),s("span",{staticClass:"line-number"},[n._v("285")]),s("br"),s("span",{staticClass:"line-number"},[n._v("286")]),s("br"),s("span",{staticClass:"line-number"},[n._v("287")]),s("br"),s("span",{staticClass:"line-number"},[n._v("288")]),s("br"),s("span",{staticClass:"line-number"},[n._v("289")]),s("br"),s("span",{staticClass:"line-number"},[n._v("290")]),s("br"),s("span",{staticClass:"line-number"},[n._v("291")]),s("br"),s("span",{staticClass:"line-number"},[n._v("292")]),s("br"),s("span",{staticClass:"line-number"},[n._v("293")]),s("br"),s("span",{staticClass:"line-number"},[n._v("294")]),s("br"),s("span",{staticClass:"line-number"},[n._v("295")]),s("br"),s("span",{staticClass:"line-number"},[n._v("296")]),s("br"),s("span",{staticClass:"line-number"},[n._v("297")]),s("br"),s("span",{staticClass:"line-number"},[n._v("298")]),s("br"),s("span",{staticClass:"line-number"},[n._v("299")]),s("br"),s("span",{staticClass:"line-number"},[n._v("300")]),s("br"),s("span",{staticClass:"line-number"},[n._v("301")]),s("br"),s("span",{staticClass:"line-number"},[n._v("302")]),s("br"),s("span",{staticClass:"line-number"},[n._v("303")]),s("br"),s("span",{staticClass:"line-number"},[n._v("304")]),s("br"),s("span",{staticClass:"line-number"},[n._v("305")]),s("br"),s("span",{staticClass:"line-number"},[n._v("306")]),s("br"),s("span",{staticClass:"line-number"},[n._v("307")]),s("br"),s("span",{staticClass:"line-number"},[n._v("308")]),s("br"),s("span",{staticClass:"line-number"},[n._v("309")]),s("br"),s("span",{staticClass:"line-number"},[n._v("310")]),s("br"),s("span",{staticClass:"line-number"},[n._v("311")]),s("br"),s("span",{staticClass:"line-number"},[n._v("312")]),s("br"),s("span",{staticClass:"line-number"},[n._v("313")]),s("br"),s("span",{staticClass:"line-number"},[n._v("314")]),s("br"),s("span",{staticClass:"line-number"},[n._v("315")]),s("br"),s("span",{staticClass:"line-number"},[n._v("316")]),s("br"),s("span",{staticClass:"line-number"},[n._v("317")]),s("br"),s("span",{staticClass:"line-number"},[n._v("318")]),s("br"),s("span",{staticClass:"line-number"},[n._v("319")]),s("br"),s("span",{staticClass:"line-number"},[n._v("320")]),s("br"),s("span",{staticClass:"line-number"},[n._v("321")]),s("br"),s("span",{staticClass:"line-number"},[n._v("322")]),s("br"),s("span",{staticClass:"line-number"},[n._v("323")]),s("br"),s("span",{staticClass:"line-number"},[n._v("324")]),s("br"),s("span",{staticClass:"line-number"},[n._v("325")]),s("br"),s("span",{staticClass:"line-number"},[n._v("326")]),s("br"),s("span",{staticClass:"line-number"},[n._v("327")]),s("br"),s("span",{staticClass:"line-number"},[n._v("328")]),s("br"),s("span",{staticClass:"line-number"},[n._v("329")]),s("br"),s("span",{staticClass:"line-number"},[n._v("330")]),s("br"),s("span",{staticClass:"line-number"},[n._v("331")]),s("br"),s("span",{staticClass:"line-number"},[n._v("332")]),s("br"),s("span",{staticClass:"line-number"},[n._v("333")]),s("br"),s("span",{staticClass:"line-number"},[n._v("334")]),s("br"),s("span",{staticClass:"line-number"},[n._v("335")]),s("br"),s("span",{staticClass:"line-number"},[n._v("336")]),s("br"),s("span",{staticClass:"line-number"},[n._v("337")]),s("br"),s("span",{staticClass:"line-number"},[n._v("338")]),s("br"),s("span",{staticClass:"line-number"},[n._v("339")]),s("br"),s("span",{staticClass:"line-number"},[n._v("340")]),s("br"),s("span",{staticClass:"line-number"},[n._v("341")]),s("br"),s("span",{staticClass:"line-number"},[n._v("342")]),s("br"),s("span",{staticClass:"line-number"},[n._v("343")]),s("br"),s("span",{staticClass:"line-number"},[n._v("344")]),s("br"),s("span",{staticClass:"line-number"},[n._v("345")]),s("br"),s("span",{staticClass:"line-number"},[n._v("346")]),s("br"),s("span",{staticClass:"line-number"},[n._v("347")]),s("br"),s("span",{staticClass:"line-number"},[n._v("348")]),s("br"),s("span",{staticClass:"line-number"},[n._v("349")]),s("br"),s("span",{staticClass:"line-number"},[n._v("350")]),s("br"),s("span",{staticClass:"line-number"},[n._v("351")]),s("br"),s("span",{staticClass:"line-number"},[n._v("352")]),s("br"),s("span",{staticClass:"line-number"},[n._v("353")]),s("br"),s("span",{staticClass:"line-number"},[n._v("354")]),s("br"),s("span",{staticClass:"line-number"},[n._v("355")]),s("br"),s("span",{staticClass:"line-number"},[n._v("356")]),s("br"),s("span",{staticClass:"line-number"},[n._v("357")]),s("br"),s("span",{staticClass:"line-number"},[n._v("358")]),s("br"),s("span",{staticClass:"line-number"},[n._v("359")]),s("br"),s("span",{staticClass:"line-number"},[n._v("360")]),s("br"),s("span",{staticClass:"line-number"},[n._v("361")]),s("br"),s("span",{staticClass:"line-number"},[n._v("362")]),s("br"),s("span",{staticClass:"line-number"},[n._v("363")]),s("br"),s("span",{staticClass:"line-number"},[n._v("364")]),s("br"),s("span",{staticClass:"line-number"},[n._v("365")]),s("br"),s("span",{staticClass:"line-number"},[n._v("366")]),s("br"),s("span",{staticClass:"line-number"},[n._v("367")]),s("br"),s("span",{staticClass:"line-number"},[n._v("368")]),s("br"),s("span",{staticClass:"line-number"},[n._v("369")]),s("br"),s("span",{staticClass:"line-number"},[n._v("370")]),s("br"),s("span",{staticClass:"line-number"},[n._v("371")]),s("br"),s("span",{staticClass:"line-number"},[n._v("372")]),s("br"),s("span",{staticClass:"line-number"},[n._v("373")]),s("br"),s("span",{staticClass:"line-number"},[n._v("374")]),s("br"),s("span",{staticClass:"line-number"},[n._v("375")]),s("br"),s("span",{staticClass:"line-number"},[n._v("376")]),s("br"),s("span",{staticClass:"line-number"},[n._v("377")]),s("br"),s("span",{staticClass:"line-number"},[n._v("378")]),s("br"),s("span",{staticClass:"line-number"},[n._v("379")]),s("br"),s("span",{staticClass:"line-number"},[n._v("380")]),s("br"),s("span",{staticClass:"line-number"},[n._v("381")]),s("br"),s("span",{staticClass:"line-number"},[n._v("382")]),s("br"),s("span",{staticClass:"line-number"},[n._v("383")]),s("br"),s("span",{staticClass:"line-number"},[n._v("384")]),s("br"),s("span",{staticClass:"line-number"},[n._v("385")]),s("br"),s("span",{staticClass:"line-number"},[n._v("386")]),s("br"),s("span",{staticClass:"line-number"},[n._v("387")]),s("br"),s("span",{staticClass:"line-number"},[n._v("388")]),s("br"),s("span",{staticClass:"line-number"},[n._v("389")]),s("br"),s("span",{staticClass:"line-number"},[n._v("390")]),s("br"),s("span",{staticClass:"line-number"},[n._v("391")]),s("br"),s("span",{staticClass:"line-number"},[n._v("392")]),s("br"),s("span",{staticClass:"line-number"},[n._v("393")]),s("br"),s("span",{staticClass:"line-number"},[n._v("394")]),s("br"),s("span",{staticClass:"line-number"},[n._v("395")]),s("br"),s("span",{staticClass:"line-number"},[n._v("396")]),s("br"),s("span",{staticClass:"line-number"},[n._v("397")]),s("br"),s("span",{staticClass:"line-number"},[n._v("398")]),s("br"),s("span",{staticClass:"line-number"},[n._v("399")]),s("br"),s("span",{staticClass:"line-number"},[n._v("400")]),s("br"),s("span",{staticClass:"line-number"},[n._v("401")]),s("br"),s("span",{staticClass:"line-number"},[n._v("402")]),s("br"),s("span",{staticClass:"line-number"},[n._v("403")]),s("br"),s("span",{staticClass:"line-number"},[n._v("404")]),s("br"),s("span",{staticClass:"line-number"},[n._v("405")]),s("br"),s("span",{staticClass:"line-number"},[n._v("406")]),s("br"),s("span",{staticClass:"line-number"},[n._v("407")]),s("br"),s("span",{staticClass:"line-number"},[n._v("408")]),s("br"),s("span",{staticClass:"line-number"},[n._v("409")]),s("br"),s("span",{staticClass:"line-number"},[n._v("410")]),s("br"),s("span",{staticClass:"line-number"},[n._v("411")]),s("br"),s("span",{staticClass:"line-number"},[n._v("412")]),s("br"),s("span",{staticClass:"line-number"},[n._v("413")]),s("br"),s("span",{staticClass:"line-number"},[n._v("414")]),s("br"),s("span",{staticClass:"line-number"},[n._v("415")]),s("br"),s("span",{staticClass:"line-number"},[n._v("416")]),s("br"),s("span",{staticClass:"line-number"},[n._v("417")]),s("br"),s("span",{staticClass:"line-number"},[n._v("418")]),s("br"),s("span",{staticClass:"line-number"},[n._v("419")]),s("br"),s("span",{staticClass:"line-number"},[n._v("420")]),s("br"),s("span",{staticClass:"line-number"},[n._v("421")]),s("br"),s("span",{staticClass:"line-number"},[n._v("422")]),s("br"),s("span",{staticClass:"line-number"},[n._v("423")]),s("br"),s("span",{staticClass:"line-number"},[n._v("424")]),s("br"),s("span",{staticClass:"line-number"},[n._v("425")]),s("br"),s("span",{staticClass:"line-number"},[n._v("426")]),s("br"),s("span",{staticClass:"line-number"},[n._v("427")]),s("br"),s("span",{staticClass:"line-number"},[n._v("428")]),s("br"),s("span",{staticClass:"line-number"},[n._v("429")]),s("br"),s("span",{staticClass:"line-number"},[n._v("430")]),s("br"),s("span",{staticClass:"line-number"},[n._v("431")]),s("br"),s("span",{staticClass:"line-number"},[n._v("432")]),s("br"),s("span",{staticClass:"line-number"},[n._v("433")]),s("br"),s("span",{staticClass:"line-number"},[n._v("434")]),s("br"),s("span",{staticClass:"line-number"},[n._v("435")]),s("br"),s("span",{staticClass:"line-number"},[n._v("436")]),s("br"),s("span",{staticClass:"line-number"},[n._v("437")]),s("br"),s("span",{staticClass:"line-number"},[n._v("438")]),s("br"),s("span",{staticClass:"line-number"},[n._v("439")]),s("br"),s("span",{staticClass:"line-number"},[n._v("440")]),s("br"),s("span",{staticClass:"line-number"},[n._v("441")]),s("br"),s("span",{staticClass:"line-number"},[n._v("442")]),s("br"),s("span",{staticClass:"line-number"},[n._v("443")]),s("br"),s("span",{staticClass:"line-number"},[n._v("444")]),s("br"),s("span",{staticClass:"line-number"},[n._v("445")]),s("br"),s("span",{staticClass:"line-number"},[n._v("446")]),s("br"),s("span",{staticClass:"line-number"},[n._v("447")]),s("br"),s("span",{staticClass:"line-number"},[n._v("448")]),s("br"),s("span",{staticClass:"line-number"},[n._v("449")]),s("br"),s("span",{staticClass:"line-number"},[n._v("450")]),s("br"),s("span",{staticClass:"line-number"},[n._v("451")]),s("br"),s("span",{staticClass:"line-number"},[n._v("452")]),s("br"),s("span",{staticClass:"line-number"},[n._v("453")]),s("br"),s("span",{staticClass:"line-number"},[n._v("454")]),s("br"),s("span",{staticClass:"line-number"},[n._v("455")]),s("br"),s("span",{staticClass:"line-number"},[n._v("456")]),s("br"),s("span",{staticClass:"line-number"},[n._v("457")]),s("br"),s("span",{staticClass:"line-number"},[n._v("458")]),s("br"),s("span",{staticClass:"line-number"},[n._v("459")]),s("br"),s("span",{staticClass:"line-number"},[n._v("460")]),s("br"),s("span",{staticClass:"line-number"},[n._v("461")]),s("br"),s("span",{staticClass:"line-number"},[n._v("462")]),s("br"),s("span",{staticClass:"line-number"},[n._v("463")]),s("br"),s("span",{staticClass:"line-number"},[n._v("464")]),s("br"),s("span",{staticClass:"line-number"},[n._v("465")]),s("br"),s("span",{staticClass:"line-number"},[n._v("466")]),s("br"),s("span",{staticClass:"line-number"},[n._v("467")]),s("br"),s("span",{staticClass:"line-number"},[n._v("468")]),s("br"),s("span",{staticClass:"line-number"},[n._v("469")]),s("br"),s("span",{staticClass:"line-number"},[n._v("470")]),s("br"),s("span",{staticClass:"line-number"},[n._v("471")]),s("br"),s("span",{staticClass:"line-number"},[n._v("472")]),s("br"),s("span",{staticClass:"line-number"},[n._v("473")]),s("br"),s("span",{staticClass:"line-number"},[n._v("474")]),s("br"),s("span",{staticClass:"line-number"},[n._v("475")]),s("br"),s("span",{staticClass:"line-number"},[n._v("476")]),s("br"),s("span",{staticClass:"line-number"},[n._v("477")]),s("br"),s("span",{staticClass:"line-number"},[n._v("478")]),s("br"),s("span",{staticClass:"line-number"},[n._v("479")]),s("br"),s("span",{staticClass:"line-number"},[n._v("480")]),s("br"),s("span",{staticClass:"line-number"},[n._v("481")]),s("br"),s("span",{staticClass:"line-number"},[n._v("482")]),s("br"),s("span",{staticClass:"line-number"},[n._v("483")]),s("br"),s("span",{staticClass:"line-number"},[n._v("484")]),s("br"),s("span",{staticClass:"line-number"},[n._v("485")]),s("br"),s("span",{staticClass:"line-number"},[n._v("486")]),s("br"),s("span",{staticClass:"line-number"},[n._v("487")]),s("br"),s("span",{staticClass:"line-number"},[n._v("488")]),s("br"),s("span",{staticClass:"line-number"},[n._v("489")]),s("br"),s("span",{staticClass:"line-number"},[n._v("490")]),s("br"),s("span",{staticClass:"line-number"},[n._v("491")]),s("br"),s("span",{staticClass:"line-number"},[n._v("492")]),s("br"),s("span",{staticClass:"line-number"},[n._v("493")]),s("br"),s("span",{staticClass:"line-number"},[n._v("494")]),s("br"),s("span",{staticClass:"line-number"},[n._v("495")]),s("br"),s("span",{staticClass:"line-number"},[n._v("496")]),s("br"),s("span",{staticClass:"line-number"},[n._v("497")]),s("br"),s("span",{staticClass:"line-number"},[n._v("498")]),s("br"),s("span",{staticClass:"line-number"},[n._v("499")]),s("br"),s("span",{staticClass:"line-number"},[n._v("500")]),s("br"),s("span",{staticClass:"line-number"},[n._v("501")]),s("br"),s("span",{staticClass:"line-number"},[n._v("502")]),s("br"),s("span",{staticClass:"line-number"},[n._v("503")]),s("br"),s("span",{staticClass:"line-number"},[n._v("504")]),s("br"),s("span",{staticClass:"line-number"},[n._v("505")]),s("br"),s("span",{staticClass:"line-number"},[n._v("506")]),s("br"),s("span",{staticClass:"line-number"},[n._v("507")]),s("br"),s("span",{staticClass:"line-number"},[n._v("508")]),s("br"),s("span",{staticClass:"line-number"},[n._v("509")]),s("br"),s("span",{staticClass:"line-number"},[n._v("510")]),s("br"),s("span",{staticClass:"line-number"},[n._v("511")]),s("br"),s("span",{staticClass:"line-number"},[n._v("512")]),s("br"),s("span",{staticClass:"line-number"},[n._v("513")]),s("br"),s("span",{staticClass:"line-number"},[n._v("514")]),s("br"),s("span",{staticClass:"line-number"},[n._v("515")]),s("br"),s("span",{staticClass:"line-number"},[n._v("516")]),s("br"),s("span",{staticClass:"line-number"},[n._v("517")]),s("br"),s("span",{staticClass:"line-number"},[n._v("518")]),s("br"),s("span",{staticClass:"line-number"},[n._v("519")]),s("br"),s("span",{staticClass:"line-number"},[n._v("520")]),s("br"),s("span",{staticClass:"line-number"},[n._v("521")]),s("br"),s("span",{staticClass:"line-number"},[n._v("522")]),s("br"),s("span",{staticClass:"line-number"},[n._v("523")]),s("br"),s("span",{staticClass:"line-number"},[n._v("524")]),s("br"),s("span",{staticClass:"line-number"},[n._v("525")]),s("br"),s("span",{staticClass:"line-number"},[n._v("526")]),s("br"),s("span",{staticClass:"line-number"},[n._v("527")]),s("br"),s("span",{staticClass:"line-number"},[n._v("528")]),s("br"),s("span",{staticClass:"line-number"},[n._v("529")]),s("br"),s("span",{staticClass:"line-number"},[n._v("530")]),s("br"),s("span",{staticClass:"line-number"},[n._v("531")]),s("br"),s("span",{staticClass:"line-number"},[n._v("532")]),s("br"),s("span",{staticClass:"line-number"},[n._v("533")]),s("br"),s("span",{staticClass:"line-number"},[n._v("534")]),s("br"),s("span",{staticClass:"line-number"},[n._v("535")]),s("br"),s("span",{staticClass:"line-number"},[n._v("536")]),s("br"),s("span",{staticClass:"line-number"},[n._v("537")]),s("br"),s("span",{staticClass:"line-number"},[n._v("538")]),s("br"),s("span",{staticClass:"line-number"},[n._v("539")]),s("br"),s("span",{staticClass:"line-number"},[n._v("540")]),s("br"),s("span",{staticClass:"line-number"},[n._v("541")]),s("br"),s("span",{staticClass:"line-number"},[n._v("542")]),s("br"),s("span",{staticClass:"line-number"},[n._v("543")]),s("br"),s("span",{staticClass:"line-number"},[n._v("544")]),s("br"),s("span",{staticClass:"line-number"},[n._v("545")]),s("br"),s("span",{staticClass:"line-number"},[n._v("546")]),s("br"),s("span",{staticClass:"line-number"},[n._v("547")]),s("br"),s("span",{staticClass:"line-number"},[n._v("548")]),s("br"),s("span",{staticClass:"line-number"},[n._v("549")]),s("br")])]),s("p",[n._v("首先在本地新建一个XML文件，将上面的代码保存到XML文件中，打开Settings->Tools->CheckStyle")]),n._v(" "),s("p",[s("img",{attrs:{src:a(2766),alt:""}})]),n._v(" "),s("ul",[s("li",[s("strong",[n._v("测试配置的CheckStyle")])])]),n._v(" "),s("p",[s("img",{attrs:{src:a(2767),alt:""}}),n._v(")")])])}),[],!1,null,null,null);s.default=t.exports}}]);
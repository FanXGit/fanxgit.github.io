(window.webpackJsonp=window.webpackJsonp||[]).push([[293],{1171:function(s,n,a){s.exports=a.p+"assets/img/springboot-file-word-poi-1.0ee07ad6.png"},1172:function(s,n,a){s.exports=a.p+"assets/img/springboot-file-word-poi-2.365bfa1f.png"},1173:function(s,n,a){s.exports=a.p+"assets/img/springboot-file-word-poi-3.0308a65e.png"},3714:function(s,n,a){"use strict";a.r(n);var e=a(7),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"springboot集成文件-集成poi之word导出"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springboot集成文件-集成poi之word导出"}},[s._v("#")]),s._v(" SpringBoot集成文件 - 集成POI之Word导出")]),s._v(" "),n("blockquote",[n("p",[s._v("前文我们介绍了通过Apache POI导出excel，而Apache POI包含是操作Office Open XML（OOXML）标准和微软的OLE 2复合文档格式（OLE2）的Java API。所以也是可以通过POI来导出word的。本文主要介绍通过SpringBoot集成POI工具实现Word的导出功能。@pdai")])]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#springboot%E9%9B%86%E6%88%90%E6%96%87%E4%BB%B6---%E9%9B%86%E6%88%90poi%E4%B9%8Bword%E5%AF%BC%E5%87%BA"}},[s._v("SpringBoot集成文件 - 集成POI之Word导出")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E7%9F%A5%E8%AF%86%E5%87%86%E5%A4%87"}},[s._v("知识准备")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#%E4%BB%80%E4%B9%88%E6%98%AFpoi"}},[s._v("什么是POI")])])])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%AE%9E%E7%8E%B0%E6%A1%88%E4%BE%8B"}},[s._v("实现案例")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"#pom%E4%BE%9D%E8%B5%96"}},[s._v("Pom依赖")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%AF%BC%E5%87%BAword"}},[s._v("导出Word")])])])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E7%A4%BA%E4%BE%8B%E6%BA%90%E7%A0%81"}},[s._v("示例源码")])]),s._v(" "),n("li",[n("a",{attrs:{href:"#%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3"}},[s._v("参考文档")])])])])]),s._v(" "),n("h1",{attrs:{id:"知识准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#知识准备"}},[s._v("#")]),s._v(" 知识准备")]),s._v(" "),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("需要理解Apache POI遵循的标准（Office Open XML（OOXML）标准和微软的OLE 2复合文档格式（OLE2））， 这将对应着API的依赖包。@pdai")])]),s._v(" "),n("h3",{attrs:{id:"什么是poi"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是poi"}},[s._v("#")]),s._v(" 什么是POI")]),s._v(" "),n("blockquote",[n("p",[s._v("Apache POI 是用Java编写的免费开源的跨平台的 Java API，Apache POI提供API给Java程序对Microsoft Office格式档案读和写的功能。POI为“Poor Obfuscation Implementation”的首字母缩写，意为“简洁版的模糊实现”。")])]),s._v(" "),n("p",[s._v("Apache POI 是创建和维护操作各种符合Office Open XML（OOXML）标准和微软的OLE 2复合文档格式（OLE2）的Java API。更多请参考"),n("a",{attrs:{href:"https://poi.apache.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档 在新窗口打开"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1171),alt:""}})]),s._v(" "),n("h1",{attrs:{id:"实现案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现案例"}},[s._v("#")]),s._v(" 实现案例")]),s._v(" "),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("这里展示SpringBoot集成POI导出用户信息的Word例子。")])]),s._v(" "),n("h3",{attrs:{id:"pom依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pom依赖"}},[s._v("#")]),s._v(" Pom依赖")]),s._v(" "),n("p",[s._v("引入poi的依赖包")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi</artifactId>\n    <version>5.2.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.poi</groupId>\n    <artifactId>poi-ooxml</artifactId>\n    <version>5.2.2</version>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"导出word"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#导出word"}},[s._v("#")]),s._v(" 导出Word")]),s._v(" "),n("p",[s._v("UserController中导出的方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package tech.pdai.springboot.file.word.poi.controller;\n\n\nimport java.io.OutputStream;\n\nimport javax.servlet.http.HttpServletResponse;\n\nimport io.swagger.annotations.ApiOperation;\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport tech.pdai.springboot.file.word.poi.service.IUserService;\n\n/**\n * @author pdai\n */\n@RestController\n@RequestMapping("/user")\npublic class UserController {\n\n    @Autowired\n    private IUserService userService;\n\n    @ApiOperation("Download Word")\n    @GetMapping("/word/download")\n    public void download(HttpServletResponse response) {\n        try {\n            XWPFDocument document = userService.generateWordXWPFDocument();\n            response.reset();\n            response.setContentType("application/vnd.ms-excel");\n            response.setHeader("Content-disposition",\n                    "attachment;filename=user_world_" + System.currentTimeMillis() + ".docx");\n            OutputStream os = response.getOutputStream();\n            document.write(os);\n            os.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br")])]),n("p",[s._v("UserServiceImple中导出Word方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('package tech.pdai.springboot.file.word.poi.service.impl;\n\nimport java.io.FileInputStream;\nimport java.io.FileNotFoundException;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.math.BigInteger;\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport lombok.extern.slf4j.Slf4j;\nimport org.apache.poi.openxml4j.exceptions.InvalidFormatException;\nimport org.apache.poi.util.Units;\nimport org.apache.poi.xwpf.usermodel.BreakType;\nimport org.apache.poi.xwpf.usermodel.Document;\nimport org.apache.poi.xwpf.usermodel.ParagraphAlignment;\nimport org.apache.poi.xwpf.usermodel.XWPFDocument;\nimport org.apache.poi.xwpf.usermodel.XWPFParagraph;\nimport org.apache.poi.xwpf.usermodel.XWPFRun;\nimport org.apache.poi.xwpf.usermodel.XWPFTable;\nimport org.apache.poi.xwpf.usermodel.XWPFTableCell;\nimport org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr;\nimport org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.stereotype.Service;\nimport tech.pdai.springboot.file.word.poi.entity.User;\nimport tech.pdai.springboot.file.word.poi.service.IUserService;\n\n/**\n * @author pdai\n */\n@Slf4j\n@Service\npublic class UserServiceImpl implements IUserService {\n\n    @Override\n    public XWPFDocument generateWordXWPFDocument() {\n        XWPFDocument doc = new XWPFDocument();\n\n        // Title\n        createTitle(doc, "Java 全栈知识体系");\n\n        // Chapter 1\n        createChapterH1(doc, "1. 知识准备");\n        createChapterH2(doc, "1.1 什么是POI");\n        createParagraph(doc, "Apache POI 是创建和维护操作各种符合Office Open XML（OOXML）标准和微软的OLE 2复合文档格式（OLE2）的Java API。用它可以使用Java读取和创建,修改MS Excel文件.而且,还可以使用Java读取和创建MS Word和MSPowerPoint文件。更多请参考[官方文档](https://poi.apache.org/index.html)");\n        createChapterH2(doc, "1.2 POI中基础概念");\n        createParagraph(doc, "生成xls和xlsx有什么区别？POI对Excel中的对象的封装对应关系？");\n\n        // Chapter 2\n        createChapterH1(doc, "2. 实现案例");\n        createChapterH2(doc, "2.1 用户列表示例");\n        createParagraph(doc, "以导出用户列表为例");\n\n        // 表格\n        List<User> userList = getUserList();\n        XWPFParagraph paragraph = doc.createParagraph();\n        XWPFTable table = paragraph.getDocument().createTable(userList.size(), 5);\n        table.setWidth(500);\n        table.setCellMargins(20, 20, 20, 20);\n\n        //表格属性\n        CTTblPr tablePr = table.getCTTbl().addNewTblPr();\n        //表格宽度\n        CTTblWidth width = tablePr.addNewTblW();\n        width.setW(BigInteger.valueOf(8000));\n\n        for(int i = 0; i< userList.size(); i++) {\n            List<XWPFTableCell> tableCells = table.getRow(i).getTableCells();\n            tableCells.get(0).setText(userList.get(i).getId()+"");\n            tableCells.get(1).setText(userList.get(i).getUserName());\n            tableCells.get(2).setText(userList.get(i).getEmail());\n            tableCells.get(3).setText(userList.get(i).getPhoneNumber()+"");\n            tableCells.get(4).setText(userList.get(i).getDescription());\n        }\n\n        createChapterH2(doc, "2.2 图片导出示例");\n        createParagraph(doc, "以导出图片为例");\n        // 图片\n        InputStream stream = null;\n        try {\n            XWPFParagraph paragraph2 = doc.createParagraph();\n            Resource resource = new ClassPathResource("pdai-guli.png");\n            stream = new FileInputStream(resource.getFile());\n            XWPFRun run = paragraph2.createRun();\n            run.addPicture(stream, Document.PICTURE_TYPE_PNG, "Generated", Units.toEMU(256), Units.toEMU(256));\n        } catch (IOException | InvalidFormatException e) {\n            e.printStackTrace();\n        }\n\n        return doc;\n    }\n\n    private void createTitle(XWPFDocument doc, String content) {\n        XWPFParagraph title = doc.createParagraph();\n        title.setAlignment(ParagraphAlignment.CENTER);\n        XWPFRun r1 = title.createRun();\n        r1.setBold(true);\n        r1.setFontFamily("宋体");\n        r1.setText(content);\n        r1.setFontSize(22);\n    }\n\n    private void createChapterH1(XWPFDocument doc, String content) {\n        XWPFParagraph actTheme = doc.createParagraph();\n        actTheme.setAlignment(ParagraphAlignment.LEFT);\n        XWPFRun runText1 = actTheme.createRun();\n        runText1.setBold(true);\n        runText1.setText(content);\n        runText1.setFontSize(18);\n    }\n\n    private void createChapterH2(XWPFDocument doc, String content) {\n        XWPFParagraph actType = doc.createParagraph();\n        XWPFRun runText2 = actType.createRun();\n        runText2.setBold(true);\n        runText2.setText(content);\n        runText2.setFontSize(15);\n    }\n\n    private void createParagraph(XWPFDocument doc, String content) {\n        XWPFParagraph actType = doc.createParagraph();\n        XWPFRun runText2 = actType.createRun();\n        runText2.setText(content);\n        runText2.setFontSize(11);\n    }\n\n    private List<User> getUserList() {\n        List<User> userList = new ArrayList<>();\n        for (int i = 0; i < 5; i++) {\n            userList.add(User.builder()\n                    .id(Long.parseLong(i + "")).userName("pdai" + i).email("pdai@pdai.tech" + i).phoneNumber(121231231231L)\n                    .description("hello world" + i)\n                    .build());\n        }\n        return userList;\n    }\n\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br")])]),n("p",[s._v("导出")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1172),alt:""}})]),s._v(" "),n("p",[s._v("导出后的word")]),s._v(" "),n("p",[n("img",{attrs:{src:a(1173),alt:""}})]),s._v(" "),n("h1",{attrs:{id:"示例源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#示例源码"}},[s._v("#")]),s._v(" 示例源码")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("https://github.com/realpdai/tech-pdai-spring-demos")]),s._v(" "),n("h1",{attrs:{id:"参考文档"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[s._v("#")]),s._v(" 参考文档")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("https://poi.apache.org/index.html")])])}),[],!1,null,null,null);n.default=t.exports}}]);
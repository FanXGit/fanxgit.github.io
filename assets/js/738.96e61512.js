(window.webpackJsonp=window.webpackJsonp||[]).push([[738],{4223:function(r,e,a){"use strict";a.r(e);var n=a(7),t=Object(n.a)({},(function(){var r=this,e=r._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"♥shardingsphere详解知识体系♥"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#♥shardingsphere详解知识体系♥"}},[r._v("#")]),r._v(" ♥ShardingSphere详解知识体系♥")]),r._v(" "),e("p",[r._v("===================================================")]),r._v(" "),e("blockquote",[e("p",[r._v("ShardingSphere知识体系详解。@pdai")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#shardingsphere%E8%AF%A6%E8%A7%A3%E7%9F%A5%E8%AF%86%E4%BD%93%E7%B3%BB"}},[r._v("♥ShardingSphere详解知识体系♥")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E7%9B%B8%E5%85%B3%E6%96%87%E7%AB%A0"}},[r._v("相关文章")]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#shardingsphere%E5%BA%94%E7%94%A8%E7%AF%87"}},[r._v("ShardingSphere应用篇")])]),r._v(" "),e("li",[e("a",{attrs:{href:"#shardingsphere%E6%9E%B6%E6%9E%84%E5%AE%9E%E7%8E%B0%E7%AF%87"}},[r._v("ShardingSphere架构实现篇")])])])])])])]),r._v(" "),e("h1",{attrs:{id:"相关文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关文章"}},[r._v("#")]),r._v(" 相关文章")]),r._v(" "),e("hr"),r._v(" "),e("blockquote",[e("p",[r._v("ShardingSphere应用和ShardingSphere架构实现两个部分。")])]),r._v(" "),e("h3",{attrs:{id:"shardingsphere应用篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shardingsphere应用篇"}},[r._v("#")]),r._v(" ShardingSphere应用篇")]),r._v(" "),e("blockquote",[e("p",[r._v("主要是通过SpringBoot对ShardingSphere进行集成")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("SpringBoot集成ShardingJDBC - Sharding-JDBC简介和基于MyBatis的单库分表"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("本文主要介绍分表分库，以及SpringBoot集成基于ShardingJDBC的单库分表实践。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc-jpa.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("SpringBoot集成ShardingJDBC - 基于JPA的单库分表"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("上文介绍SpringBoot集成基于ShardingJDBC的读写分离实践，本文在此基础上介绍SpringBoot集成基于ShardingJDBC+JPA的单库分表实践。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc-jpa-masterslave.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("SpringBoot集成ShardingJDBC - 基于JPA的读写分离"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("本文主要介绍分表分库，以及SpringBoot集成基于ShardingJDBC的读写分离实践。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/spring/springboot/springboot-x-mysql-shardingjdbc-jpa-tenant-db.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("SpringBoot集成ShardingJDBC - 基于JPA的DB隔离多租户方案"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("本文主要介绍ShardingJDBC的分片算法和分片策略，并在此基础上通过SpringBoot集成ShardingJDBC的几种策略（标准分片策略，行表达式分片策略和hint分片策略）向你展示DB隔离的多租户方案。")])])])]),r._v(" "),e("h3",{attrs:{id:"shardingsphere架构实现篇"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shardingsphere架构实现篇"}},[r._v("#")]),r._v(" ShardingSphere架构实现篇")]),r._v(" "),e("blockquote",[e("p",[r._v("主要是对ShardingSphere主要的架构和原理进行分析（多数内容来源于"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/overview/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方网站 在新窗口打开"),e("OutboundLink")],1),r._v("）")])]),r._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-arch.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 整体架构设计"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("Apache ShardingSphere 5.x 版本开始致力于可插拔架构，项目的功能组件能够灵活的以可插拔的方式进行扩展。 目前，数据分片、读写分离、数据库高可用、数据加密、影子库压测等功能，以及对 MySQL、PostgreSQL、SQLServer、Oracle 等 SQL 与协议的支持，均通过插件的方式织入项目; 在 Apache ShardingSphere 中，很多功能实现类的加载方式是通过 SPI（Service Provider Interface） 注入的方式完成的。 SPI 是一种为了被第三方实现或扩展的 API，它可以用于实现框架扩展或组件替换。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-shard.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 数据分片的原理"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("本文主要介绍ShardingSphere最重要的数据分片功能的原理，ShardingSphere的3个产品的数据分片主要流程是完全一致的，"),e("strong",[r._v("Standard 内核流程由 SQL 解析 => SQL 路由 => SQL 改写 => SQL 执行 => 结果归并 组成")]),r._v("，主要用于处理标准分片场景下的 SQL 执行。 "),e("strong",[r._v("Federation 执行引擎流程由 SQL 解析 => 逻辑优化 => 物理优化 => 优化执行 => Standard 内核流程 组成")]),r._v("。 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/sharding/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（v4.x版本 + V5.1.0版本），对于进阶数据库中间件或者设计自带Sharding的数据库(真正的分布式SQL数据库）极具参考价值。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-encrypt.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 数据脱敏(加密)详解"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("根据业界对加密的需求及业务改造痛点，提供了一套完整、安全、透明化、低改造成本的数据加密整合解决方案，是 Apache ShardingSphere 数据加密模块的主要设计目标; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/features/encrypt/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V5.1.0版本），对开发者进阶设计通过数据库中间件进行数据脱敏、加密有着很大的借鉴意义。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-trans-xa.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 事务实现原理之两阶段事务XA"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("本文主要介绍ShardingSphere分布式事务XA的实现原理; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/reference/transaction/base-transaction-seata/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V5.1.0版本）。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-trans-saga.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 事务实现原理之柔性事务SAGA"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("Apache ShardingSphere 在v5.0版本前还支持柔性事务SAGA，目前看5.x+版本中已经移除了向观众章节，本文主要介绍其实现原理; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/legacy/4.x/document/cn/features/transaction/concept/base-transaction-saga/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V4.x版本）。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-trans-seata.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 事务实现原理之柔性事务SEATA"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("Apache ShardingSphere 集成了 SEATA 作为柔性事务的使用方案，本文主要介绍其实现原理; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/reference/transaction/base-transaction-seata/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V5.1.0版本）。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-scale.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 弹性伸缩原理"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("支持自定义分片算法，减少数据伸缩及迁移时的业务影响，提供一站式的通用弹性伸缩解决方案，是 Apache ShardingSphere 弹性伸缩的主要设计目标; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/features/scaling/",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V5.1.0版本）。")])])]),r._v(" "),e("li",[e("a",{attrs:{href:"https://pdai.tech/md/framework/ds-sharding/sharding-x-shadow.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere详解 - 通过影子库进行压测"),e("OutboundLink")],1),r._v(" "),e("ul",[e("li",[r._v("Apache ShardingSphere 关注于全链路压测场景下，数据库层面的解决方案。 将压测数据自动路由至用户指定的数据库，是 Apache ShardingSphere 影子库模块的主要设计目标; 这篇文章主要转载自"),e("a",{attrs:{href:"https://shardingsphere.apache.org/document/5.1.0/cn/reference/shadow",target:"_blank",rel:"noopener noreferrer"}},[r._v("ShardingSphere官方 在新窗口打开"),e("OutboundLink")],1),r._v("网站（V5.1.0版本）。)")])])])])])}),[],!1,null,null,null);e.default=t.exports}}]);